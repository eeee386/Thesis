-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/HappyParser.y
-----------------------------------------------------------------------------


terminal '=' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> expression                          (0)
	expression -> literal                              (1)
	expression -> unary                                (2)
	expression -> binary                               (3)
	expression -> grouping                             (4)
	literal -> NUMBER                                  (5)
	literal -> STRING                                  (6)
	literal -> 'true'                                  (7)
	literal -> 'false'                                 (8)
	literal -> 'nil'                                   (9)
	grouping -> '(' expression ')'                     (10)
	unary -> '-' expression                            (11)
	unary -> '!' expression                            (12)
	binary -> expression '==' expression               (13)
	binary -> expression '!=' expression               (14)
	binary -> expression '+' expression                (15)
	binary -> expression '-' expression                (16)
	binary -> expression '*' expression                (17)
	binary -> expression '/' expression                (18)
	binary -> expression '>' expression                (19)
	binary -> expression '<' expression                (20)
	binary -> expression '>=' expression               (21)
	binary -> expression '<=' expression               (22)
	binary -> expression 'and' expression              (23)
	binary -> expression 'or' expression               (24)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	NUMBER         { L.NUMBER $$ }
	STRING         { L.STRING $$ }
	'='            { L.EQUAL }
	'+'            { L.PLUS }
	'-'            { L.MINUS }
	'*'            { L.STAR }
	'/'            { L.SLASH }
	'('            { L.LEFT_PAREN }
	')'            { L.RIGHT_PAREN }
	'!'            { L.BANG }
	'<'            { L.LESS }
	'>'            { L.GREATER }
	'<='           { L.LESS_EQUAL }
	'>='           { L.GREATER_EQUAL }
	'!='           { L.BANG_EQUAL }
	'=='           { L.EQUAL_EQUAL }
	'and'          { L.AND }
	'or'           { L.OR }
	'true'         { L.TRUE }
	'false'        { L.FALSE }
	'nil'          { L.NIL }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	expression      rules 1, 2, 3, 4
	literal         rules 5, 6, 7, 8, 9
	grouping        rule  10
	unary           rules 11, 12
	binary          rules 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_calc -> . expression                         (rule 0)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 8
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 1

	expression -> . literal                             (rule 1)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	literal        goto state 2

State 2

	expression -> literal .                             (rule 1)

	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'*'            reduce using rule 1
	'/'            reduce using rule 1
	')'            reduce using rule 1
	'<'            reduce using rule 1
	'>'            reduce using rule 1
	'<='           reduce using rule 1
	'>='           reduce using rule 1
	'!='           reduce using rule 1
	'=='           reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	literal -> NUMBER .                                 (rule 5)

	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	')'            reduce using rule 5
	'<'            reduce using rule 5
	'>'            reduce using rule 5
	'<='           reduce using rule 5
	'>='           reduce using rule 5
	'!='           reduce using rule 5
	'=='           reduce using rule 5
	'and'          reduce using rule 5
	'or'           reduce using rule 5
	%eof           reduce using rule 5


State 4

	literal -> STRING .                                 (rule 6)

	'+'            reduce using rule 6
	'-'            reduce using rule 6
	'*'            reduce using rule 6
	'/'            reduce using rule 6
	')'            reduce using rule 6
	'<'            reduce using rule 6
	'>'            reduce using rule 6
	'<='           reduce using rule 6
	'>='           reduce using rule 6
	'!='           reduce using rule 6
	'=='           reduce using rule 6
	'and'          reduce using rule 6
	'or'           reduce using rule 6
	%eof           reduce using rule 6


State 5

	literal -> 'true' .                                 (rule 7)

	'+'            reduce using rule 7
	'-'            reduce using rule 7
	'*'            reduce using rule 7
	'/'            reduce using rule 7
	')'            reduce using rule 7
	'<'            reduce using rule 7
	'>'            reduce using rule 7
	'<='           reduce using rule 7
	'>='           reduce using rule 7
	'!='           reduce using rule 7
	'=='           reduce using rule 7
	'and'          reduce using rule 7
	'or'           reduce using rule 7
	%eof           reduce using rule 7


State 6

	literal -> 'false' .                                (rule 8)

	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'*'            reduce using rule 8
	'/'            reduce using rule 8
	')'            reduce using rule 8
	'<'            reduce using rule 8
	'>'            reduce using rule 8
	'<='           reduce using rule 8
	'>='           reduce using rule 8
	'!='           reduce using rule 8
	'=='           reduce using rule 8
	'and'          reduce using rule 8
	'or'           reduce using rule 8
	%eof           reduce using rule 8


State 7

	literal -> 'nil' .                                  (rule 9)

	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	')'            reduce using rule 9
	'<'            reduce using rule 9
	'>'            reduce using rule 9
	'<='           reduce using rule 9
	'>='           reduce using rule 9
	'!='           reduce using rule 9
	'=='           reduce using rule 9
	'and'          reduce using rule 9
	'or'           reduce using rule 9
	%eof           reduce using rule 9


State 8

	%start_calc -> expression .                         (rule 0)
	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           shift, and enter state 26
	'=='           shift, and enter state 27
	'and'          shift, and enter state 28
	'or'           shift, and enter state 29
	%eof           accept


State 9

	expression -> grouping .                            (rule 4)

	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'*'            reduce using rule 4
	'/'            reduce using rule 4
	')'            reduce using rule 4
	'<'            reduce using rule 4
	'>'            reduce using rule 4
	'<='           reduce using rule 4
	'>='           reduce using rule 4
	'!='           reduce using rule 4
	'=='           reduce using rule 4
	'and'          reduce using rule 4
	'or'           reduce using rule 4
	%eof           reduce using rule 4


State 10

	expression -> unary .                               (rule 2)

	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'*'            reduce using rule 2
	'/'            reduce using rule 2
	')'            reduce using rule 2
	'<'            reduce using rule 2
	'>'            reduce using rule 2
	'<='           reduce using rule 2
	'>='           reduce using rule 2
	'!='           reduce using rule 2
	'=='           reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2
	%eof           reduce using rule 2


State 11

	expression -> binary .                              (rule 3)

	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'*'            reduce using rule 3
	'/'            reduce using rule 3
	')'            reduce using rule 3
	'<'            reduce using rule 3
	'>'            reduce using rule 3
	'<='           reduce using rule 3
	'>='           reduce using rule 3
	'!='           reduce using rule 3
	'=='           reduce using rule 3
	'and'          reduce using rule 3
	'or'           reduce using rule 3
	%eof           reduce using rule 3


State 12

	unary -> '-' . expression                           (rule 11)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 17
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 13

	grouping -> '(' . expression ')'                    (rule 10)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 16
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 14

	unary -> '!' . expression                           (rule 12)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 15
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 15

	unary -> '!' expression .                           (rule 12)
	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'*'            reduce using rule 12
	'/'            reduce using rule 12
	')'            reduce using rule 12
	'<'            reduce using rule 12
	'>'            reduce using rule 12
	'<='           reduce using rule 12
	'>='           reduce using rule 12
	'!='           reduce using rule 12
	'=='           reduce using rule 12
	'and'          reduce using rule 12
	'or'           reduce using rule 12
	%eof           reduce using rule 12


State 16

	grouping -> '(' expression . ')'                    (rule 10)
	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            shift, and enter state 42
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           shift, and enter state 26
	'=='           shift, and enter state 27
	'and'          shift, and enter state 28
	'or'           shift, and enter state 29


State 17

	unary -> '-' expression .                           (rule 11)
	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'*'            reduce using rule 11
	'/'            reduce using rule 11
	')'            reduce using rule 11
	'<'            reduce using rule 11
	'>'            reduce using rule 11
	'<='           reduce using rule 11
	'>='           reduce using rule 11
	'!='           reduce using rule 11
	'=='           reduce using rule 11
	'and'          reduce using rule 11
	'or'           reduce using rule 11
	%eof           reduce using rule 11


State 18

	binary -> expression '+' . expression               (rule 15)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 41
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 19

	binary -> expression '-' . expression               (rule 16)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 40
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 20

	binary -> expression '*' . expression               (rule 17)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 39
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 21

	binary -> expression '/' . expression               (rule 18)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 38
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 22

	binary -> expression '<' . expression               (rule 20)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 37
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 23

	binary -> expression '>' . expression               (rule 19)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 36
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 24

	binary -> expression '<=' . expression              (rule 22)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 35
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 25

	binary -> expression '>=' . expression              (rule 21)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 34
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 26

	binary -> expression '!=' . expression              (rule 14)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 33
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 27

	binary -> expression '==' . expression              (rule 13)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 32
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 28

	binary -> expression 'and' . expression             (rule 23)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 31
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 29

	binary -> expression 'or' . expression              (rule 24)

	NUMBER         shift, and enter state 3
	STRING         shift, and enter state 4
	'-'            shift, and enter state 12
	'('            shift, and enter state 13
	'!'            shift, and enter state 14
	'true'         shift, and enter state 5
	'false'        shift, and enter state 6
	'nil'          shift, and enter state 7

	expression     goto state 30
	literal        goto state 2
	grouping       goto state 9
	unary          goto state 10
	binary         goto state 11

State 30

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)
	binary -> expression 'or' expression .              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 24
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           shift, and enter state 26
	'=='           shift, and enter state 27
	'and'          reduce using rule 24
	'or'           reduce using rule 24
	%eof           reduce using rule 24


State 31

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression 'and' expression .             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 23
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           shift, and enter state 26
	'=='           shift, and enter state 27
	'and'          reduce using rule 23
	'or'           reduce using rule 23
	%eof           reduce using rule 23


State 32

	binary -> expression . '==' expression              (rule 13)
	binary -> expression '==' expression .              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 13
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           reduce using rule 13
	'=='           reduce using rule 13
	'and'          reduce using rule 13
	'or'           reduce using rule 13
	%eof           reduce using rule 13


State 33

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression '!=' expression .              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 14
	'<'            shift, and enter state 22
	'>'            shift, and enter state 23
	'<='           shift, and enter state 24
	'>='           shift, and enter state 25
	'!='           reduce using rule 14
	'=='           reduce using rule 14
	'and'          reduce using rule 14
	'or'           reduce using rule 14
	%eof           reduce using rule 14


State 34

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression '>=' expression .              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'<='           reduce using rule 21
	'>='           reduce using rule 21
	'!='           reduce using rule 21
	'=='           reduce using rule 21
	'and'          reduce using rule 21
	'or'           reduce using rule 21
	%eof           reduce using rule 21


State 35

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression '<=' expression .              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 22
	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'<='           reduce using rule 22
	'>='           reduce using rule 22
	'!='           reduce using rule 22
	'=='           reduce using rule 22
	'and'          reduce using rule 22
	'or'           reduce using rule 22
	%eof           reduce using rule 22


State 36

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression '>' expression .               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 19
	'<'            reduce using rule 19
	'>'            reduce using rule 19
	'<='           reduce using rule 19
	'>='           reduce using rule 19
	'!='           reduce using rule 19
	'=='           reduce using rule 19
	'and'          reduce using rule 19
	'or'           reduce using rule 19
	%eof           reduce using rule 19


State 37

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression '<' expression .               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            shift, and enter state 18
	'-'            shift, and enter state 19
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 20
	'<'            reduce using rule 20
	'>'            reduce using rule 20
	'<='           reduce using rule 20
	'>='           reduce using rule 20
	'!='           reduce using rule 20
	'=='           reduce using rule 20
	'and'          reduce using rule 20
	'or'           reduce using rule 20
	%eof           reduce using rule 20


State 38

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression '/' expression .               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	')'            reduce using rule 18
	'<'            reduce using rule 18
	'>'            reduce using rule 18
	'<='           reduce using rule 18
	'>='           reduce using rule 18
	'!='           reduce using rule 18
	'=='           reduce using rule 18
	'and'          reduce using rule 18
	'or'           reduce using rule 18
	%eof           reduce using rule 18


State 39

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression '*' expression .               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	')'            reduce using rule 17
	'<'            reduce using rule 17
	'>'            reduce using rule 17
	'<='           reduce using rule 17
	'>='           reduce using rule 17
	'!='           reduce using rule 17
	'=='           reduce using rule 17
	'and'          reduce using rule 17
	'or'           reduce using rule 17
	%eof           reduce using rule 17


State 40

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression '-' expression .               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 16
	'<'            reduce using rule 16
	'>'            reduce using rule 16
	'<='           reduce using rule 16
	'>='           reduce using rule 16
	'!='           reduce using rule 16
	'=='           reduce using rule 16
	'and'          reduce using rule 16
	'or'           reduce using rule 16
	%eof           reduce using rule 16


State 41

	binary -> expression . '==' expression              (rule 13)
	binary -> expression . '!=' expression              (rule 14)
	binary -> expression . '+' expression               (rule 15)
	binary -> expression '+' expression .               (rule 15)
	binary -> expression . '-' expression               (rule 16)
	binary -> expression . '*' expression               (rule 17)
	binary -> expression . '/' expression               (rule 18)
	binary -> expression . '>' expression               (rule 19)
	binary -> expression . '<' expression               (rule 20)
	binary -> expression . '>=' expression              (rule 21)
	binary -> expression . '<=' expression              (rule 22)
	binary -> expression . 'and' expression             (rule 23)
	binary -> expression . 'or' expression              (rule 24)

	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            shift, and enter state 20
	'/'            shift, and enter state 21
	')'            reduce using rule 15
	'<'            reduce using rule 15
	'>'            reduce using rule 15
	'<='           reduce using rule 15
	'>='           reduce using rule 15
	'!='           reduce using rule 15
	'=='           reduce using rule 15
	'and'          reduce using rule 15
	'or'           reduce using rule 15
	%eof           reduce using rule 15


State 42

	grouping -> '(' expression ')' .                    (rule 10)

	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'*'            reduce using rule 10
	'/'            reduce using rule 10
	')'            reduce using rule 10
	'<'            reduce using rule 10
	'>'            reduce using rule 10
	'<='           reduce using rule 10
	'>='           reduce using rule 10
	'!='           reduce using rule 10
	'=='           reduce using rule 10
	'and'          reduce using rule 10
	'or'           reduce using rule 10
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 25
Number of terminals: 21
Number of non-terminals: 6
Number of states: 43
