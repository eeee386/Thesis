-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/HappyParser.y
-----------------------------------------------------------------------------

state 139 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> declarations                            (1)
	declarations -> declarations declaration           (2)
	declarations -> declaration                        (3)
	declaration -> statement                           (4)
	declaration -> variable_declaration_assignment ';'   (5)
	declaration -> function_declaration                (6)
	declaration -> class_declaration                   (7)
	statement -> expression_statement                  (8)
	statement -> print_statement                       (9)
	statement -> block_statement                       (10)
	statement -> conditional_statement                 (11)
	statement -> while_statement                       (12)
	statement -> for_statement                         (13)
	statement -> return_statement                      (14)
	expression_statement -> expression ';'             (15)
	print_statement -> 'print' expression ';'          (16)
	block_statement -> '{' declarations '}'            (17)
	conditional_statement -> 'if' '(' expression ')' statement   (18)
	conditional_statement -> 'if' '(' expression ')' statement 'else' statement   (19)
	while_statement -> 'while' '(' expression ')' statement   (20)
	for_statement -> 'for' '(' ';' ';' ')' statement   (21)
	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement   (22)
	for_statement -> 'for' '(' ';' expression ';' ')' statement   (23)
	for_statement -> 'for' '(' ';' ';' variable_assignment ')' statement   (24)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement   (25)
	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' statement   (26)
	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' statement   (27)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' statement   (28)
	return_statement -> 'return' expression ';'        (29)
	variable_declaration_assignment -> variable_declaration   (30)
	variable_declaration_assignment -> variable_assignment   (31)
	variable_declaration -> 'var' IDENTIFIER '=' expression   (32)
	variable_declaration -> 'var' IDENTIFIER           (33)
	variable_assignment -> IDENTIFIER '=' expression   (34)
	class_declaration -> 'class' IDENTIFIER '{' methods '}'   (35)
	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}'   (36)
	methods ->                                         (37)
	methods -> methods method_declaration              (38)
	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement   (39)
	function_declaration -> 'fun' IDENTIFIER '(' ')' block_statement   (40)
	method_declaration -> IDENTIFIER '(' parameters ')' block_statement   (41)
	method_declaration -> IDENTIFIER '(' ')' block_statement   (42)
	parameters -> parameters ',' IDENTIFIER            (43)
	parameters -> IDENTIFIER                           (44)
	function_call -> IDENTIFIER '(' arguments ')'      (45)
	function_call -> function_call '(' arguments ')'   (46)
	chain -> chaining                                  (47)
	chaining -> IDENTIFIER '.' IDENTIFIER              (48)
	chaining -> 'this' '.' IDENTIFIER                  (49)
	chaining -> IDENTIFIER '.' method_chain            (50)
	chaining -> 'this' '.' method_chain                (51)
	chaining -> 'super' '.' method_chain               (52)
	chaining -> 'super' '.' IDENTIFIER                 (53)
	chaining -> method_chain '.' IDENTIFIER            (54)
	method_chain -> method_chain '.' function_call     (55)
	method_chain ->                                    (56)
	arguments -> arguments ',' expression              (57)
	arguments -> expression                            (58)
	expression -> literal                              (59)
	expression -> unary                                (60)
	expression -> binary                               (61)
	expression -> ternary                              (62)
	expression -> grouping                             (63)
	expression -> function_call                        (64)
	expression -> chain                                (65)
	expression -> 'this'                               (66)
	literal -> NUMBER                                  (67)
	literal -> STRING                                  (68)
	literal -> 'true'                                  (69)
	literal -> 'false'                                 (70)
	literal -> 'nil'                                   (71)
	literal -> IDENTIFIER                              (72)
	grouping -> '(' expression ')'                     (73)
	unary -> '-' expression                            (74)
	unary -> '!' expression                            (75)
	binary -> expression '==' expression               (76)
	binary -> expression '!=' expression               (77)
	binary -> expression '+' expression                (78)
	binary -> expression '-' expression                (79)
	binary -> expression '*' expression                (80)
	binary -> expression '/' expression                (81)
	binary -> expression '>' expression                (82)
	binary -> expression '<' expression                (83)
	binary -> expression '>=' expression               (84)
	binary -> expression '<=' expression               (85)
	binary -> expression 'and' expression              (86)
	binary -> expression 'or' expression               (87)
	ternary -> expression '?' expression ':' expression   (88)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	NUMBER         { L.NUMBER $$ }
	STRING         { L.STRING $$ }
	IDENTIFIER     { L.IDENTIFIER $$ }
	'='            { L.EQUAL }
	'+'            { L.PLUS }
	'-'            { L.MINUS }
	'*'            { L.STAR }
	'/'            { L.SLASH }
	'('            { L.LEFT_PAREN }
	')'            { L.RIGHT_PAREN }
	'{'            { L.LEFT_BRACE }
	'}'            { L.RIGHT_BRACE }
	'!'            { L.BANG }
	'<'            { L.LESS }
	'>'            { L.GREATER }
	'<='           { L.LESS_EQUAL }
	'>='           { L.GREATER_EQUAL }
	'!='           { L.BANG_EQUAL }
	'=='           { L.EQUAL_EQUAL }
	'and'          { L.AND }
	'or'           { L.OR }
	'true'         { L.TRUE }
	'false'        { L.FALSE }
	'nil'          { L.NIL }
	';'            { L.SEMICOLON }
	','            { L.COMMA }
	'?'            { L.QUESTION_MARK }
	':'            { L.COLON }
	'.'            { L.DOT }
	'print'        { L.PRINT }
	'var'          { L.VAR }
	'if'           { L.IF }
	'else'         { L.ELSE }
	'while'        { L.WHILE }
	'for'          { L.FOR }
	'fun'          { L.FUN }
	'return'       { L.RETURN }
	'class'        { L.CLASS }
	'this'         { L.THIS }
	'super'        { L.SUPER }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	declarations    rules 2, 3
	declaration     rules 4, 5, 6, 7
	statement       rules 8, 9, 10, 11, 12, 13, 14
	expression_statement rule  15
	print_statement rule  16
	block_statement rule  17
	conditional_statement rules 18, 19
	while_statement rule  20
	for_statement   rules 21, 22, 23, 24, 25, 26, 27, 28
	return_statement rule  29
	variable_declaration_assignment rules 30, 31
	variable_declaration rules 32, 33
	variable_assignment rule  34
	class_declaration rules 35, 36
	methods         rules 37, 38
	function_declaration rules 39, 40
	method_declaration rules 41, 42
	parameters      rules 43, 44
	function_call   rules 45, 46
	chain           rule  47
	chaining        rules 48, 49, 50, 51, 52, 53, 54
	method_chain    rules 55, 56
	arguments       rules 57, 58
	expression      rules 59, 60, 61, 62, 63, 64, 65, 66
	literal         rules 67, 68, 69, 70, 71, 72
	grouping        rule  73
	unary           rules 74, 75
	binary          rules 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87
	ternary         rule  88

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 29
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'var'          shift, and enter state 38
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'fun'          shift, and enter state 42
	'return'       shift, and enter state 43
	'class'        shift, and enter state 44
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	program        goto state 47
	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declaration_assignmentgoto state 12
	variable_declarationgoto state 13
	variable_assignmentgoto state 14
	class_declarationgoto state 15
	function_declarationgoto state 16
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 1

	program -> . declarations                           (rule 1)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 29
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'print'        shift, and enter state 37
	'var'          shift, and enter state 38
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'fun'          shift, and enter state 42
	'return'       shift, and enter state 43
	'class'        shift, and enter state 44
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declaration_assignmentgoto state 12
	variable_declarationgoto state 13
	variable_assignmentgoto state 14
	class_declarationgoto state 15
	function_declarationgoto state 16
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 2

	program -> declarations .                           (rule 1)
	declarations -> declarations . declaration          (rule 2)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 29
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'var'          shift, and enter state 38
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'fun'          shift, and enter state 42
	'return'       shift, and enter state 43
	'class'        shift, and enter state 44
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46
	%eof           reduce using rule 1

	declaration    goto state 83
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declaration_assignmentgoto state 12
	variable_declarationgoto state 13
	variable_assignmentgoto state 14
	class_declarationgoto state 15
	function_declarationgoto state 16
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 3

	declarations -> declaration .                       (rule 3)

	NUMBER         reduce using rule 3
	STRING         reduce using rule 3
	IDENTIFIER     reduce using rule 3
	'-'            reduce using rule 3
	'('            reduce using rule 3
	'{'            reduce using rule 3
	'}'            reduce using rule 3
	'!'            reduce using rule 3
	'true'         reduce using rule 3
	'false'        reduce using rule 3
	'nil'          reduce using rule 3
	'.'            reduce using rule 3
	'print'        reduce using rule 3
	'var'          reduce using rule 3
	'if'           reduce using rule 3
	'while'        reduce using rule 3
	'for'          reduce using rule 3
	'fun'          reduce using rule 3
	'return'       reduce using rule 3
	'class'        reduce using rule 3
	'this'         reduce using rule 3
	'super'        reduce using rule 3
	%eof           reduce using rule 3


State 4

	declaration -> statement .                          (rule 4)

	NUMBER         reduce using rule 4
	STRING         reduce using rule 4
	IDENTIFIER     reduce using rule 4
	'-'            reduce using rule 4
	'('            reduce using rule 4
	'{'            reduce using rule 4
	'}'            reduce using rule 4
	'!'            reduce using rule 4
	'true'         reduce using rule 4
	'false'        reduce using rule 4
	'nil'          reduce using rule 4
	'.'            reduce using rule 4
	'print'        reduce using rule 4
	'var'          reduce using rule 4
	'if'           reduce using rule 4
	'while'        reduce using rule 4
	'for'          reduce using rule 4
	'fun'          reduce using rule 4
	'return'       reduce using rule 4
	'class'        reduce using rule 4
	'this'         reduce using rule 4
	'super'        reduce using rule 4
	%eof           reduce using rule 4


State 5

	statement -> expression_statement .                 (rule 8)

	NUMBER         reduce using rule 8
	STRING         reduce using rule 8
	IDENTIFIER     reduce using rule 8
	'-'            reduce using rule 8
	'('            reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	'!'            reduce using rule 8
	'true'         reduce using rule 8
	'false'        reduce using rule 8
	'nil'          reduce using rule 8
	'.'            reduce using rule 8
	'print'        reduce using rule 8
	'var'          reduce using rule 8
	'if'           reduce using rule 8
	'else'         reduce using rule 8
	'while'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'return'       reduce using rule 8
	'class'        reduce using rule 8
	'this'         reduce using rule 8
	'super'        reduce using rule 8
	%eof           reduce using rule 8


State 6

	statement -> print_statement .                      (rule 9)

	NUMBER         reduce using rule 9
	STRING         reduce using rule 9
	IDENTIFIER     reduce using rule 9
	'-'            reduce using rule 9
	'('            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	'!'            reduce using rule 9
	'true'         reduce using rule 9
	'false'        reduce using rule 9
	'nil'          reduce using rule 9
	'.'            reduce using rule 9
	'print'        reduce using rule 9
	'var'          reduce using rule 9
	'if'           reduce using rule 9
	'else'         reduce using rule 9
	'while'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'return'       reduce using rule 9
	'class'        reduce using rule 9
	'this'         reduce using rule 9
	'super'        reduce using rule 9
	%eof           reduce using rule 9


State 7

	statement -> block_statement .                      (rule 10)

	NUMBER         reduce using rule 10
	STRING         reduce using rule 10
	IDENTIFIER     reduce using rule 10
	'-'            reduce using rule 10
	'('            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	'!'            reduce using rule 10
	'true'         reduce using rule 10
	'false'        reduce using rule 10
	'nil'          reduce using rule 10
	'.'            reduce using rule 10
	'print'        reduce using rule 10
	'var'          reduce using rule 10
	'if'           reduce using rule 10
	'else'         reduce using rule 10
	'while'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'return'       reduce using rule 10
	'class'        reduce using rule 10
	'this'         reduce using rule 10
	'super'        reduce using rule 10
	%eof           reduce using rule 10


State 8

	statement -> conditional_statement .                (rule 11)

	NUMBER         reduce using rule 11
	STRING         reduce using rule 11
	IDENTIFIER     reduce using rule 11
	'-'            reduce using rule 11
	'('            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'!'            reduce using rule 11
	'true'         reduce using rule 11
	'false'        reduce using rule 11
	'nil'          reduce using rule 11
	'.'            reduce using rule 11
	'print'        reduce using rule 11
	'var'          reduce using rule 11
	'if'           reduce using rule 11
	'else'         reduce using rule 11
	'while'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'return'       reduce using rule 11
	'class'        reduce using rule 11
	'this'         reduce using rule 11
	'super'        reduce using rule 11
	%eof           reduce using rule 11


State 9

	statement -> while_statement .                      (rule 12)

	NUMBER         reduce using rule 12
	STRING         reduce using rule 12
	IDENTIFIER     reduce using rule 12
	'-'            reduce using rule 12
	'('            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'!'            reduce using rule 12
	'true'         reduce using rule 12
	'false'        reduce using rule 12
	'nil'          reduce using rule 12
	'.'            reduce using rule 12
	'print'        reduce using rule 12
	'var'          reduce using rule 12
	'if'           reduce using rule 12
	'else'         reduce using rule 12
	'while'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'return'       reduce using rule 12
	'class'        reduce using rule 12
	'this'         reduce using rule 12
	'super'        reduce using rule 12
	%eof           reduce using rule 12


State 10

	statement -> for_statement .                        (rule 13)

	NUMBER         reduce using rule 13
	STRING         reduce using rule 13
	IDENTIFIER     reduce using rule 13
	'-'            reduce using rule 13
	'('            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'!'            reduce using rule 13
	'true'         reduce using rule 13
	'false'        reduce using rule 13
	'nil'          reduce using rule 13
	'.'            reduce using rule 13
	'print'        reduce using rule 13
	'var'          reduce using rule 13
	'if'           reduce using rule 13
	'else'         reduce using rule 13
	'while'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'return'       reduce using rule 13
	'class'        reduce using rule 13
	'this'         reduce using rule 13
	'super'        reduce using rule 13
	%eof           reduce using rule 13


State 11

	statement -> return_statement .                     (rule 14)

	NUMBER         reduce using rule 14
	STRING         reduce using rule 14
	IDENTIFIER     reduce using rule 14
	'-'            reduce using rule 14
	'('            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'!'            reduce using rule 14
	'true'         reduce using rule 14
	'false'        reduce using rule 14
	'nil'          reduce using rule 14
	'.'            reduce using rule 14
	'print'        reduce using rule 14
	'var'          reduce using rule 14
	'if'           reduce using rule 14
	'else'         reduce using rule 14
	'while'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'return'       reduce using rule 14
	'class'        reduce using rule 14
	'this'         reduce using rule 14
	'super'        reduce using rule 14
	%eof           reduce using rule 14


State 12

	declaration -> variable_declaration_assignment . ';'    (rule 5)

	';'            shift, and enter state 82


State 13

	variable_declaration_assignment -> variable_declaration .    (rule 30)

	';'            reduce using rule 30


State 14

	variable_declaration_assignment -> variable_assignment .    (rule 31)

	';'            reduce using rule 31


State 15

	declaration -> class_declaration .                  (rule 7)

	NUMBER         reduce using rule 7
	STRING         reduce using rule 7
	IDENTIFIER     reduce using rule 7
	'-'            reduce using rule 7
	'('            reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	'!'            reduce using rule 7
	'true'         reduce using rule 7
	'false'        reduce using rule 7
	'nil'          reduce using rule 7
	'.'            reduce using rule 7
	'print'        reduce using rule 7
	'var'          reduce using rule 7
	'if'           reduce using rule 7
	'while'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'return'       reduce using rule 7
	'class'        reduce using rule 7
	'this'         reduce using rule 7
	'super'        reduce using rule 7
	%eof           reduce using rule 7


State 16

	declaration -> function_declaration .               (rule 6)

	NUMBER         reduce using rule 6
	STRING         reduce using rule 6
	IDENTIFIER     reduce using rule 6
	'-'            reduce using rule 6
	'('            reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	'!'            reduce using rule 6
	'true'         reduce using rule 6
	'false'        reduce using rule 6
	'nil'          reduce using rule 6
	'.'            reduce using rule 6
	'print'        reduce using rule 6
	'var'          reduce using rule 6
	'if'           reduce using rule 6
	'while'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'return'       reduce using rule 6
	'class'        reduce using rule 6
	'this'         reduce using rule 6
	'super'        reduce using rule 6
	%eof           reduce using rule 6


State 17

	function_call -> function_call . '(' arguments ')'    (rule 46)
	expression -> function_call .                       (rule 64)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'('            shift, and enter state 81
	')'            reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'!='           reduce using rule 64
	'=='           reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64
	'?'            reduce using rule 64
	':'            reduce using rule 64


State 18

	expression -> chain .                               (rule 65)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'<='           reduce using rule 65
	'>='           reduce using rule 65
	'!='           reduce using rule 65
	'=='           reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65
	'?'            reduce using rule 65
	':'            reduce using rule 65


State 19

	chain -> chaining .                                 (rule 47)

	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	')'            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'!='           reduce using rule 47
	'=='           reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	'?'            reduce using rule 47
	':'            reduce using rule 47


State 20

	chaining -> method_chain . '.' IDENTIFIER           (rule 54)
	method_chain -> method_chain . '.' function_call    (rule 55)

	'.'            shift, and enter state 80


State 21

	expression_statement -> expression . ';'            (rule 15)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            shift, and enter state 78
	'?'            shift, and enter state 79


State 22

	expression -> literal .                             (rule 59)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	')'            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'!='           reduce using rule 59
	'=='           reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59
	'?'            reduce using rule 59
	':'            reduce using rule 59


State 23

	expression -> grouping .                            (rule 63)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	')'            reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'<='           reduce using rule 63
	'>='           reduce using rule 63
	'!='           reduce using rule 63
	'=='           reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	'?'            reduce using rule 63
	':'            reduce using rule 63


State 24

	expression -> unary .                               (rule 60)

	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	')'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'!='           reduce using rule 60
	'=='           reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'?'            reduce using rule 60
	':'            reduce using rule 60


State 25

	expression -> binary .                              (rule 61)

	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	')'            reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'!='           reduce using rule 61
	'=='           reduce using rule 61
	'and'          reduce using rule 61
	'or'           reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61
	'?'            reduce using rule 61
	':'            reduce using rule 61


State 26

	expression -> ternary .                             (rule 62)

	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	')'            reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	'<='           reduce using rule 62
	'>='           reduce using rule 62
	'!='           reduce using rule 62
	'=='           reduce using rule 62
	'and'          reduce using rule 62
	'or'           reduce using rule 62
	';'            reduce using rule 62
	','            reduce using rule 62
	'?'            reduce using rule 62
	':'            reduce using rule 62


State 27

	literal -> NUMBER .                                 (rule 67)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'<='           reduce using rule 67
	'>='           reduce using rule 67
	'!='           reduce using rule 67
	'=='           reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67
	'?'            reduce using rule 67
	':'            reduce using rule 67


State 28

	literal -> STRING .                                 (rule 68)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	')'            reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'!='           reduce using rule 68
	'=='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'?'            reduce using rule 68
	':'            reduce using rule 68


State 29

	variable_assignment -> IDENTIFIER . '=' expression    (rule 34)
	function_call -> IDENTIFIER . '(' arguments ')'     (rule 45)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 48)
	chaining -> IDENTIFIER . '.' method_chain           (rule 50)
	literal -> IDENTIFIER .                             (rule 72)

	'='            shift, and enter state 63
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	'('            shift, and enter state 64
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'!='           reduce using rule 72
	'=='           reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72
	';'            reduce using rule 72
	'?'            reduce using rule 72
	'.'            shift, and enter state 65


State 30

	unary -> '-' . expression                           (rule 74)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 62
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 31

	grouping -> '(' . expression ')'                    (rule 73)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 61
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 32

	block_statement -> '{' . declarations '}'           (rule 17)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 29
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'var'          shift, and enter state 38
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'fun'          shift, and enter state 42
	'return'       shift, and enter state 43
	'class'        shift, and enter state 44
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	declarations   goto state 60
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declaration_assignmentgoto state 12
	variable_declarationgoto state 13
	variable_assignmentgoto state 14
	class_declarationgoto state 15
	function_declarationgoto state 16
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 33

	unary -> '!' . expression                           (rule 75)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 59
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 34

	literal -> 'true' .                                 (rule 69)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	')'            reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'<='           reduce using rule 69
	'>='           reduce using rule 69
	'!='           reduce using rule 69
	'=='           reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69
	'?'            reduce using rule 69
	':'            reduce using rule 69


State 35

	literal -> 'false' .                                (rule 70)

	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'!='           reduce using rule 70
	'=='           reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'?'            reduce using rule 70
	':'            reduce using rule 70


State 36

	literal -> 'nil' .                                  (rule 71)

	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	')'            reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'!='           reduce using rule 71
	'=='           reduce using rule 71
	'and'          reduce using rule 71
	'or'           reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'?'            reduce using rule 71
	':'            reduce using rule 71


State 37

	print_statement -> 'print' . expression ';'         (rule 16)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 58
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 38

	variable_declaration -> 'var' . IDENTIFIER '=' expression    (rule 32)
	variable_declaration -> 'var' . IDENTIFIER          (rule 33)

	IDENTIFIER     shift, and enter state 57


State 39

	conditional_statement -> 'if' . '(' expression ')' statement    (rule 18)
	conditional_statement -> 'if' . '(' expression ')' statement 'else' statement    (rule 19)

	'('            shift, and enter state 56


State 40

	while_statement -> 'while' . '(' expression ')' statement    (rule 20)

	'('            shift, and enter state 55


State 41

	for_statement -> 'for' . '(' ';' ';' ')' statement    (rule 21)
	for_statement -> 'for' . '(' variable_declaration ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' . '(' ';' expression ';' ')' statement    (rule 23)
	for_statement -> 'for' . '(' ';' ';' variable_assignment ')' statement    (rule 24)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' . '(' variable_declaration ';' ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' . '(' ';' expression ';' variable_assignment ')' statement    (rule 27)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' variable_assignment ')' statement    (rule 28)

	'('            shift, and enter state 54


State 42

	function_declaration -> 'fun' . IDENTIFIER '(' parameters ')' block_statement    (rule 39)
	function_declaration -> 'fun' . IDENTIFIER '(' ')' block_statement    (rule 40)

	IDENTIFIER     shift, and enter state 53


State 43

	return_statement -> 'return' . expression ';'       (rule 29)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 51
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 44

	class_declaration -> 'class' . IDENTIFIER '{' methods '}'    (rule 35)
	class_declaration -> 'class' . IDENTIFIER '<' IDENTIFIER '{' methods '}'    (rule 36)

	IDENTIFIER     shift, and enter state 50


State 45

	chaining -> 'this' . '.' IDENTIFIER                 (rule 49)
	chaining -> 'this' . '.' method_chain               (rule 51)
	expression -> 'this' .                              (rule 66)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'<='           reduce using rule 66
	'>='           reduce using rule 66
	'!='           reduce using rule 66
	'=='           reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66
	'?'            reduce using rule 66
	':'            reduce using rule 66
	'.'            shift, and enter state 49


State 46

	chaining -> 'super' . '.' method_chain              (rule 52)
	chaining -> 'super' . '.' IDENTIFIER                (rule 53)

	'.'            shift, and enter state 48


State 47

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 48

	chaining -> 'super' '.' . method_chain              (rule 52)
	chaining -> 'super' '.' . IDENTIFIER                (rule 53)

	IDENTIFIER     shift, and enter state 120
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	')'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'!='           reduce using rule 56
	'=='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'?'            reduce using rule 56
	':'            reduce using rule 56
	'.'            reduce using rule 56

	method_chain   goto state 119

State 49

	chaining -> 'this' '.' . IDENTIFIER                 (rule 49)
	chaining -> 'this' '.' . method_chain               (rule 51)

	IDENTIFIER     shift, and enter state 118
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	')'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'!='           reduce using rule 56
	'=='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'?'            reduce using rule 56
	':'            reduce using rule 56
	'.'            reduce using rule 56

	method_chain   goto state 117

State 50

	class_declaration -> 'class' IDENTIFIER . '{' methods '}'    (rule 35)
	class_declaration -> 'class' IDENTIFIER . '<' IDENTIFIER '{' methods '}'    (rule 36)

	'{'            shift, and enter state 115
	'<'            shift, and enter state 116


State 51

	return_statement -> 'return' expression . ';'       (rule 29)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            shift, and enter state 114
	'?'            shift, and enter state 79


State 52

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 45)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 48)
	chaining -> IDENTIFIER . '.' method_chain           (rule 50)
	literal -> IDENTIFIER .                             (rule 72)

	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	'('            shift, and enter state 64
	')'            reduce using rule 72
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'!='           reduce using rule 72
	'=='           reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'?'            reduce using rule 72
	':'            reduce using rule 72
	'.'            shift, and enter state 65


State 53

	function_declaration -> 'fun' IDENTIFIER . '(' parameters ')' block_statement    (rule 39)
	function_declaration -> 'fun' IDENTIFIER . '(' ')' block_statement    (rule 40)

	'('            shift, and enter state 113


State 54

	for_statement -> 'for' '(' . ';' ';' ')' statement    (rule 21)
	for_statement -> 'for' '(' . variable_declaration ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' . ';' expression ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' . ';' ';' variable_assignment ')' statement    (rule 24)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' . variable_declaration ';' ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' '(' . ';' expression ';' variable_assignment ')' statement    (rule 27)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' variable_assignment ')' statement    (rule 28)

	';'            shift, and enter state 112
	'var'          shift, and enter state 38

	variable_declarationgoto state 111

State 55

	while_statement -> 'while' '(' . expression ')' statement    (rule 20)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 110
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 56

	conditional_statement -> 'if' '(' . expression ')' statement    (rule 18)
	conditional_statement -> 'if' '(' . expression ')' statement 'else' statement    (rule 19)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 109
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 57

	variable_declaration -> 'var' IDENTIFIER . '=' expression    (rule 32)
	variable_declaration -> 'var' IDENTIFIER .          (rule 33)

	'='            shift, and enter state 108
	';'            reduce using rule 33


State 58

	print_statement -> 'print' expression . ';'         (rule 16)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            shift, and enter state 107
	'?'            shift, and enter state 79


State 59

	unary -> '!' expression .                           (rule 75)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	')'            reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'!='           reduce using rule 75
	'=='           reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'?'            reduce using rule 75
	':'            reduce using rule 75


State 60

	declarations -> declarations . declaration          (rule 2)
	block_statement -> '{' declarations . '}'           (rule 17)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 29
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'}'            shift, and enter state 106
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'var'          shift, and enter state 38
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'fun'          shift, and enter state 42
	'return'       shift, and enter state 43
	'class'        shift, and enter state 44
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	declaration    goto state 83
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declaration_assignmentgoto state 12
	variable_declarationgoto state 13
	variable_assignmentgoto state 14
	class_declarationgoto state 15
	function_declarationgoto state 16
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 61

	grouping -> '(' expression . ')'                    (rule 73)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 105
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	'?'            shift, and enter state 79


State 62

	unary -> '-' expression .                           (rule 74)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	')'            reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'!='           reduce using rule 74
	'=='           reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'?'            reduce using rule 74
	':'            reduce using rule 74


State 63

	variable_assignment -> IDENTIFIER '=' . expression    (rule 34)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 104
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 64

	function_call -> IDENTIFIER '(' . arguments ')'     (rule 45)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	arguments      goto state 103
	expression     goto state 85
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 65

	chaining -> IDENTIFIER '.' . IDENTIFIER             (rule 48)
	chaining -> IDENTIFIER '.' . method_chain           (rule 50)

	IDENTIFIER     shift, and enter state 102
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	')'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'!='           reduce using rule 56
	'=='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'?'            reduce using rule 56
	':'            reduce using rule 56
	'.'            reduce using rule 56

	method_chain   goto state 101

State 66

	binary -> expression '+' . expression               (rule 78)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 100
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 67

	binary -> expression '-' . expression               (rule 79)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 99
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 68

	binary -> expression '*' . expression               (rule 80)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 98
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 69

	binary -> expression '/' . expression               (rule 81)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 97
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 70

	binary -> expression '<' . expression               (rule 83)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 96
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 71

	binary -> expression '>' . expression               (rule 82)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 95
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 72

	binary -> expression '<=' . expression              (rule 85)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 94
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 73

	binary -> expression '>=' . expression              (rule 84)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 93
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 74

	binary -> expression '!=' . expression              (rule 77)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 92
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 75

	binary -> expression '==' . expression              (rule 76)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 91
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 76

	binary -> expression 'and' . expression             (rule 86)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 90
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 77

	binary -> expression 'or' . expression              (rule 87)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 89
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 78

	expression_statement -> expression ';' .            (rule 15)

	NUMBER         reduce using rule 15
	STRING         reduce using rule 15
	IDENTIFIER     reduce using rule 15
	'-'            reduce using rule 15
	'('            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'!'            reduce using rule 15
	'true'         reduce using rule 15
	'false'        reduce using rule 15
	'nil'          reduce using rule 15
	'.'            reduce using rule 15
	'print'        reduce using rule 15
	'var'          reduce using rule 15
	'if'           reduce using rule 15
	'else'         reduce using rule 15
	'while'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'return'       reduce using rule 15
	'class'        reduce using rule 15
	'this'         reduce using rule 15
	'super'        reduce using rule 15
	%eof           reduce using rule 15


State 79

	ternary -> expression '?' . expression ':' expression    (rule 88)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 88
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 80

	chaining -> method_chain '.' . IDENTIFIER           (rule 54)
	method_chain -> method_chain '.' . function_call    (rule 55)

	IDENTIFIER     shift, and enter state 87

	function_call  goto state 86

State 81

	function_call -> function_call '(' . arguments ')'    (rule 46)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	arguments      goto state 84
	expression     goto state 85
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 82

	declaration -> variable_declaration_assignment ';' .    (rule 5)

	NUMBER         reduce using rule 5
	STRING         reduce using rule 5
	IDENTIFIER     reduce using rule 5
	'-'            reduce using rule 5
	'('            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	'!'            reduce using rule 5
	'true'         reduce using rule 5
	'false'        reduce using rule 5
	'nil'          reduce using rule 5
	'.'            reduce using rule 5
	'print'        reduce using rule 5
	'var'          reduce using rule 5
	'if'           reduce using rule 5
	'while'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'return'       reduce using rule 5
	'class'        reduce using rule 5
	'this'         reduce using rule 5
	'super'        reduce using rule 5
	%eof           reduce using rule 5


State 83

	declarations -> declarations declaration .          (rule 2)

	NUMBER         reduce using rule 2
	STRING         reduce using rule 2
	IDENTIFIER     reduce using rule 2
	'-'            reduce using rule 2
	'('            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	'!'            reduce using rule 2
	'true'         reduce using rule 2
	'false'        reduce using rule 2
	'nil'          reduce using rule 2
	'.'            reduce using rule 2
	'print'        reduce using rule 2
	'var'          reduce using rule 2
	'if'           reduce using rule 2
	'while'        reduce using rule 2
	'for'          reduce using rule 2
	'fun'          reduce using rule 2
	'return'       reduce using rule 2
	'class'        reduce using rule 2
	'this'         reduce using rule 2
	'super'        reduce using rule 2
	%eof           reduce using rule 2


State 84

	function_call -> function_call '(' arguments . ')'    (rule 46)
	arguments -> arguments . ',' expression             (rule 57)

	')'            shift, and enter state 136
	','            shift, and enter state 134


State 85

	arguments -> expression .                           (rule 58)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 58
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	','            reduce using rule 58
	'?'            shift, and enter state 79


State 86

	function_call -> function_call . '(' arguments ')'    (rule 46)
	method_chain -> method_chain '.' function_call .    (rule 55)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'('            shift, and enter state 81
	')'            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'!='           reduce using rule 55
	'=='           reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	'?'            reduce using rule 55
	':'            reduce using rule 55
	'.'            reduce using rule 55


State 87

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 45)
	chaining -> method_chain '.' IDENTIFIER .           (rule 54)

	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'('            shift, and enter state 64
	')'            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'!='           reduce using rule 54
	'=='           reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	'?'            reduce using rule 54
	':'            reduce using rule 54


State 88

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)
	ternary -> expression '?' expression . ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	'?'            shift, and enter state 79
	':'            shift, and enter state 135


State 89

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	binary -> expression 'or' expression .              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 87
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          reduce using rule 87
	'or'           reduce using rule 87
	';'            reduce using rule 87
	','            reduce using rule 87
	'?'            reduce using rule 87
	':'            reduce using rule 87


State 90

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression 'and' expression .             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 86
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          reduce using rule 86
	'or'           reduce using rule 86
	';'            reduce using rule 86
	','            reduce using rule 86
	'?'            reduce using rule 86
	':'            reduce using rule 86


State 91

	binary -> expression . '==' expression              (rule 76)
	binary -> expression '==' expression .              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 76
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           reduce using rule 76
	'=='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'?'            reduce using rule 76
	':'            reduce using rule 76


State 92

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression '!=' expression .              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 77
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           reduce using rule 77
	'=='           reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'?'            reduce using rule 77
	':'            reduce using rule 77


State 93

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression '>=' expression .              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 84
	'<'            reduce using rule 84
	'>'            reduce using rule 84
	'<='           reduce using rule 84
	'>='           reduce using rule 84
	'!='           reduce using rule 84
	'=='           reduce using rule 84
	'and'          reduce using rule 84
	'or'           reduce using rule 84
	';'            reduce using rule 84
	','            reduce using rule 84
	'?'            reduce using rule 84
	':'            reduce using rule 84


State 94

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression '<=' expression .              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 85
	'<'            reduce using rule 85
	'>'            reduce using rule 85
	'<='           reduce using rule 85
	'>='           reduce using rule 85
	'!='           reduce using rule 85
	'=='           reduce using rule 85
	'and'          reduce using rule 85
	'or'           reduce using rule 85
	';'            reduce using rule 85
	','            reduce using rule 85
	'?'            reduce using rule 85
	':'            reduce using rule 85


State 95

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression '>' expression .               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 82
	'<'            reduce using rule 82
	'>'            reduce using rule 82
	'<='           reduce using rule 82
	'>='           reduce using rule 82
	'!='           reduce using rule 82
	'=='           reduce using rule 82
	'and'          reduce using rule 82
	'or'           reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'?'            reduce using rule 82
	':'            reduce using rule 82


State 96

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression '<' expression .               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 83
	'<'            reduce using rule 83
	'>'            reduce using rule 83
	'<='           reduce using rule 83
	'>='           reduce using rule 83
	'!='           reduce using rule 83
	'=='           reduce using rule 83
	'and'          reduce using rule 83
	'or'           reduce using rule 83
	';'            reduce using rule 83
	','            reduce using rule 83
	'?'            reduce using rule 83
	':'            reduce using rule 83


State 97

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression '/' expression .               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 81
	'-'            reduce using rule 81
	'*'            reduce using rule 81
	'/'            reduce using rule 81
	')'            reduce using rule 81
	'<'            reduce using rule 81
	'>'            reduce using rule 81
	'<='           reduce using rule 81
	'>='           reduce using rule 81
	'!='           reduce using rule 81
	'=='           reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'?'            reduce using rule 81
	':'            reduce using rule 81


State 98

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression '*' expression .               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            reduce using rule 80
	'/'            reduce using rule 80
	')'            reduce using rule 80
	'<'            reduce using rule 80
	'>'            reduce using rule 80
	'<='           reduce using rule 80
	'>='           reduce using rule 80
	'!='           reduce using rule 80
	'=='           reduce using rule 80
	'and'          reduce using rule 80
	'or'           reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'?'            reduce using rule 80
	':'            reduce using rule 80


State 99

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression '-' expression .               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 79
	'<'            reduce using rule 79
	'>'            reduce using rule 79
	'<='           reduce using rule 79
	'>='           reduce using rule 79
	'!='           reduce using rule 79
	'=='           reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'?'            reduce using rule 79
	':'            reduce using rule 79


State 100

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression '+' expression .               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 78
	'<'            reduce using rule 78
	'>'            reduce using rule 78
	'<='           reduce using rule 78
	'>='           reduce using rule 78
	'!='           reduce using rule 78
	'=='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'?'            reduce using rule 78
	':'            reduce using rule 78


State 101

	chaining -> IDENTIFIER '.' method_chain .           (rule 50)
	method_chain -> method_chain . '.' function_call    (rule 55)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	')'            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'<='           reduce using rule 50
	'>='           reduce using rule 50
	'!='           reduce using rule 50
	'=='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'?'            reduce using rule 50
	':'            reduce using rule 50
	'.'            shift, and enter state 121


State 102

	chaining -> IDENTIFIER '.' IDENTIFIER .             (rule 48)

	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	')'            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'!='           reduce using rule 48
	'=='           reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48
	';'            reduce using rule 48
	','            reduce using rule 48
	'?'            reduce using rule 48
	':'            reduce using rule 48


State 103

	function_call -> IDENTIFIER '(' arguments . ')'     (rule 45)
	arguments -> arguments . ',' expression             (rule 57)

	')'            shift, and enter state 133
	','            shift, and enter state 134


State 104

	variable_assignment -> IDENTIFIER '=' expression .    (rule 34)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 34
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            reduce using rule 34
	'?'            shift, and enter state 79


State 105

	grouping -> '(' expression ')' .                    (rule 73)

	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	')'            reduce using rule 73
	'<'            reduce using rule 73
	'>'            reduce using rule 73
	'<='           reduce using rule 73
	'>='           reduce using rule 73
	'!='           reduce using rule 73
	'=='           reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'?'            reduce using rule 73
	':'            reduce using rule 73


State 106

	block_statement -> '{' declarations '}' .           (rule 17)

	NUMBER         reduce using rule 17
	STRING         reduce using rule 17
	IDENTIFIER     reduce using rule 17
	'-'            reduce using rule 17
	'('            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'!'            reduce using rule 17
	'true'         reduce using rule 17
	'false'        reduce using rule 17
	'nil'          reduce using rule 17
	'.'            reduce using rule 17
	'print'        reduce using rule 17
	'var'          reduce using rule 17
	'if'           reduce using rule 17
	'else'         reduce using rule 17
	'while'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'return'       reduce using rule 17
	'class'        reduce using rule 17
	'this'         reduce using rule 17
	'super'        reduce using rule 17
	%eof           reduce using rule 17


State 107

	print_statement -> 'print' expression ';' .         (rule 16)

	NUMBER         reduce using rule 16
	STRING         reduce using rule 16
	IDENTIFIER     reduce using rule 16
	'-'            reduce using rule 16
	'('            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'!'            reduce using rule 16
	'true'         reduce using rule 16
	'false'        reduce using rule 16
	'nil'          reduce using rule 16
	'.'            reduce using rule 16
	'print'        reduce using rule 16
	'var'          reduce using rule 16
	'if'           reduce using rule 16
	'else'         reduce using rule 16
	'while'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'return'       reduce using rule 16
	'class'        reduce using rule 16
	'this'         reduce using rule 16
	'super'        reduce using rule 16
	%eof           reduce using rule 16


State 108

	variable_declaration -> 'var' IDENTIFIER '=' . expression    (rule 32)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 132
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 109

	conditional_statement -> 'if' '(' expression . ')' statement    (rule 18)
	conditional_statement -> 'if' '(' expression . ')' statement 'else' statement    (rule 19)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 131
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	'?'            shift, and enter state 79


State 110

	while_statement -> 'while' '(' expression . ')' statement    (rule 20)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            shift, and enter state 130
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	'?'            shift, and enter state 79


State 111

	for_statement -> 'for' '(' variable_declaration . ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration . ';' ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' variable_assignment ')' statement    (rule 28)

	';'            shift, and enter state 129


State 112

	for_statement -> 'for' '(' ';' . ';' ')' statement    (rule 21)
	for_statement -> 'for' '(' ';' . expression ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' . ';' variable_assignment ')' statement    (rule 24)
	for_statement -> 'for' '(' ';' . expression ';' variable_assignment ')' statement    (rule 27)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	';'            shift, and enter state 128
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 127
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 113

	function_declaration -> 'fun' IDENTIFIER '(' . parameters ')' block_statement    (rule 39)
	function_declaration -> 'fun' IDENTIFIER '(' . ')' block_statement    (rule 40)

	IDENTIFIER     shift, and enter state 125
	')'            shift, and enter state 126

	parameters     goto state 124

State 114

	return_statement -> 'return' expression ';' .       (rule 29)

	NUMBER         reduce using rule 29
	STRING         reduce using rule 29
	IDENTIFIER     reduce using rule 29
	'-'            reduce using rule 29
	'('            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'!'            reduce using rule 29
	'true'         reduce using rule 29
	'false'        reduce using rule 29
	'nil'          reduce using rule 29
	'.'            reduce using rule 29
	'print'        reduce using rule 29
	'var'          reduce using rule 29
	'if'           reduce using rule 29
	'else'         reduce using rule 29
	'while'        reduce using rule 29
	'for'          reduce using rule 29
	'fun'          reduce using rule 29
	'return'       reduce using rule 29
	'class'        reduce using rule 29
	'this'         reduce using rule 29
	'super'        reduce using rule 29
	%eof           reduce using rule 29


State 115

	class_declaration -> 'class' IDENTIFIER '{' . methods '}'    (rule 35)

	IDENTIFIER     reduce using rule 37
	'}'            reduce using rule 37

	methods        goto state 123

State 116

	class_declaration -> 'class' IDENTIFIER '<' . IDENTIFIER '{' methods '}'    (rule 36)

	IDENTIFIER     shift, and enter state 122


State 117

	chaining -> 'this' '.' method_chain .               (rule 51)
	method_chain -> method_chain . '.' function_call    (rule 55)

	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	')'            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'!='           reduce using rule 51
	'=='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	'?'            reduce using rule 51
	':'            reduce using rule 51
	'.'            shift, and enter state 121


State 118

	chaining -> 'this' '.' IDENTIFIER .                 (rule 49)

	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	')'            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'!='           reduce using rule 49
	'=='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	'?'            reduce using rule 49
	':'            reduce using rule 49


State 119

	chaining -> 'super' '.' method_chain .              (rule 52)
	method_chain -> method_chain . '.' function_call    (rule 55)

	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	')'            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'!='           reduce using rule 52
	'=='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'?'            reduce using rule 52
	':'            reduce using rule 52
	'.'            shift, and enter state 121


State 120

	chaining -> 'super' '.' IDENTIFIER .                (rule 53)

	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	')'            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'<='           reduce using rule 53
	'>='           reduce using rule 53
	'!='           reduce using rule 53
	'=='           reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	'?'            reduce using rule 53
	':'            reduce using rule 53


State 121

	method_chain -> method_chain '.' . function_call    (rule 55)

	IDENTIFIER     shift, and enter state 154

	function_call  goto state 86

State 122

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER . '{' methods '}'    (rule 36)

	'{'            shift, and enter state 153


State 123

	class_declaration -> 'class' IDENTIFIER '{' methods . '}'    (rule 35)
	methods -> methods . method_declaration             (rule 38)

	IDENTIFIER     shift, and enter state 151
	'}'            shift, and enter state 152

	method_declarationgoto state 150

State 124

	function_declaration -> 'fun' IDENTIFIER '(' parameters . ')' block_statement    (rule 39)
	parameters -> parameters . ',' IDENTIFIER           (rule 43)

	')'            shift, and enter state 148
	','            shift, and enter state 149


State 125

	parameters -> IDENTIFIER .                          (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44


State 126

	function_declaration -> 'fun' IDENTIFIER '(' ')' . block_statement    (rule 40)

	'{'            shift, and enter state 32

	block_statementgoto state 147

State 127

	for_statement -> 'for' '(' ';' expression . ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' expression . ';' variable_assignment ')' statement    (rule 27)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            shift, and enter state 146
	'?'            shift, and enter state 79


State 128

	for_statement -> 'for' '(' ';' ';' . ')' statement    (rule 21)
	for_statement -> 'for' '(' ';' ';' . variable_assignment ')' statement    (rule 24)

	IDENTIFIER     shift, and enter state 144
	')'            shift, and enter state 145

	variable_assignmentgoto state 143

State 129

	for_statement -> 'for' '(' variable_declaration ';' . ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' . ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' variable_assignment ')' statement    (rule 28)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	';'            shift, and enter state 142
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 141
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 130

	while_statement -> 'while' '(' expression ')' . statement    (rule 20)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 140
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 131

	conditional_statement -> 'if' '(' expression ')' . statement    (rule 18)
	conditional_statement -> 'if' '(' expression ')' . statement 'else' statement    (rule 19)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 139
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 132

	variable_declaration -> 'var' IDENTIFIER '=' expression .    (rule 32)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            reduce using rule 32
	'?'            shift, and enter state 79


State 133

	function_call -> IDENTIFIER '(' arguments ')' .     (rule 45)

	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'!='           reduce using rule 45
	'=='           reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	'?'            reduce using rule 45
	':'            reduce using rule 45
	'.'            reduce using rule 45


State 134

	arguments -> arguments ',' . expression             (rule 57)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 138
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 135

	ternary -> expression '?' expression ':' . expression    (rule 88)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 137
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 136

	function_call -> function_call '(' arguments ')' .    (rule 46)

	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'!='           reduce using rule 46
	'=='           reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	'?'            reduce using rule 46
	':'            reduce using rule 46
	'.'            reduce using rule 46


State 137

	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)
	ternary -> expression '?' expression ':' expression .    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 88
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            reduce using rule 88
	','            reduce using rule 88
	'?'            fail
	':'            reduce using rule 88


State 138

	arguments -> arguments ',' expression .             (rule 57)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	')'            reduce using rule 57
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	','            reduce using rule 57
	'?'            shift, and enter state 79


State 139

	conditional_statement -> 'if' '(' expression ')' statement .    (rule 18)
	conditional_statement -> 'if' '(' expression ')' statement . 'else' statement    (rule 19)

	NUMBER         reduce using rule 18
	STRING         reduce using rule 18
	IDENTIFIER     reduce using rule 18
	'-'            reduce using rule 18
	'('            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'!'            reduce using rule 18
	'true'         reduce using rule 18
	'false'        reduce using rule 18
	'nil'          reduce using rule 18
	'.'            reduce using rule 18
	'print'        reduce using rule 18
	'var'          reduce using rule 18
	'if'           reduce using rule 18
	'else'         shift, and enter state 166
			(reduce using rule 18)

	'while'        reduce using rule 18
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'return'       reduce using rule 18
	'class'        reduce using rule 18
	'this'         reduce using rule 18
	'super'        reduce using rule 18
	%eof           reduce using rule 18


State 140

	while_statement -> 'while' '(' expression ')' statement .    (rule 20)

	NUMBER         reduce using rule 20
	STRING         reduce using rule 20
	IDENTIFIER     reduce using rule 20
	'-'            reduce using rule 20
	'('            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'!'            reduce using rule 20
	'true'         reduce using rule 20
	'false'        reduce using rule 20
	'nil'          reduce using rule 20
	'.'            reduce using rule 20
	'print'        reduce using rule 20
	'var'          reduce using rule 20
	'if'           reduce using rule 20
	'else'         reduce using rule 20
	'while'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'return'       reduce using rule 20
	'class'        reduce using rule 20
	'this'         reduce using rule 20
	'super'        reduce using rule 20
	%eof           reduce using rule 20


State 141

	for_statement -> 'for' '(' variable_declaration ';' expression . ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' expression . ';' variable_assignment ')' statement    (rule 28)
	binary -> expression . '==' expression              (rule 76)
	binary -> expression . '!=' expression              (rule 77)
	binary -> expression . '+' expression               (rule 78)
	binary -> expression . '-' expression               (rule 79)
	binary -> expression . '*' expression               (rule 80)
	binary -> expression . '/' expression               (rule 81)
	binary -> expression . '>' expression               (rule 82)
	binary -> expression . '<' expression               (rule 83)
	binary -> expression . '>=' expression              (rule 84)
	binary -> expression . '<=' expression              (rule 85)
	binary -> expression . 'and' expression             (rule 86)
	binary -> expression . 'or' expression              (rule 87)
	ternary -> expression . '?' expression ':' expression    (rule 88)

	'+'            shift, and enter state 66
	'-'            shift, and enter state 67
	'*'            shift, and enter state 68
	'/'            shift, and enter state 69
	'<'            shift, and enter state 70
	'>'            shift, and enter state 71
	'<='           shift, and enter state 72
	'>='           shift, and enter state 73
	'!='           shift, and enter state 74
	'=='           shift, and enter state 75
	'and'          shift, and enter state 76
	'or'           shift, and enter state 77
	';'            shift, and enter state 165
	'?'            shift, and enter state 79


State 142

	for_statement -> 'for' '(' variable_declaration ';' ';' . ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration ';' ';' . variable_assignment ')' statement    (rule 26)

	IDENTIFIER     shift, and enter state 144
	')'            shift, and enter state 164

	variable_assignmentgoto state 163

State 143

	for_statement -> 'for' '(' ';' ';' variable_assignment . ')' statement    (rule 24)

	')'            shift, and enter state 162


State 144

	variable_assignment -> IDENTIFIER . '=' expression    (rule 34)

	'='            shift, and enter state 63


State 145

	for_statement -> 'for' '(' ';' ';' ')' . statement    (rule 21)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 161
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 146

	for_statement -> 'for' '(' ';' expression ';' . ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' expression ';' . variable_assignment ')' statement    (rule 27)

	IDENTIFIER     shift, and enter state 144
	')'            shift, and enter state 160

	variable_assignmentgoto state 159

State 147

	function_declaration -> 'fun' IDENTIFIER '(' ')' block_statement .    (rule 40)

	NUMBER         reduce using rule 40
	STRING         reduce using rule 40
	IDENTIFIER     reduce using rule 40
	'-'            reduce using rule 40
	'('            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'!'            reduce using rule 40
	'true'         reduce using rule 40
	'false'        reduce using rule 40
	'nil'          reduce using rule 40
	'.'            reduce using rule 40
	'print'        reduce using rule 40
	'var'          reduce using rule 40
	'if'           reduce using rule 40
	'while'        reduce using rule 40
	'for'          reduce using rule 40
	'fun'          reduce using rule 40
	'return'       reduce using rule 40
	'class'        reduce using rule 40
	'this'         reduce using rule 40
	'super'        reduce using rule 40
	%eof           reduce using rule 40


State 148

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' . block_statement    (rule 39)

	'{'            shift, and enter state 32

	block_statementgoto state 158

State 149

	parameters -> parameters ',' . IDENTIFIER           (rule 43)

	IDENTIFIER     shift, and enter state 157


State 150

	methods -> methods method_declaration .             (rule 38)

	IDENTIFIER     reduce using rule 38
	'}'            reduce using rule 38


State 151

	method_declaration -> IDENTIFIER . '(' parameters ')' block_statement    (rule 41)
	method_declaration -> IDENTIFIER . '(' ')' block_statement    (rule 42)

	'('            shift, and enter state 156


State 152

	class_declaration -> 'class' IDENTIFIER '{' methods '}' .    (rule 35)

	NUMBER         reduce using rule 35
	STRING         reduce using rule 35
	IDENTIFIER     reduce using rule 35
	'-'            reduce using rule 35
	'('            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'!'            reduce using rule 35
	'true'         reduce using rule 35
	'false'        reduce using rule 35
	'nil'          reduce using rule 35
	'.'            reduce using rule 35
	'print'        reduce using rule 35
	'var'          reduce using rule 35
	'if'           reduce using rule 35
	'while'        reduce using rule 35
	'for'          reduce using rule 35
	'fun'          reduce using rule 35
	'return'       reduce using rule 35
	'class'        reduce using rule 35
	'this'         reduce using rule 35
	'super'        reduce using rule 35
	%eof           reduce using rule 35


State 153

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' . methods '}'    (rule 36)

	IDENTIFIER     reduce using rule 37
	'}'            reduce using rule 37

	methods        goto state 155

State 154

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 45)

	'('            shift, and enter state 64


State 155

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods . '}'    (rule 36)
	methods -> methods . method_declaration             (rule 38)

	IDENTIFIER     shift, and enter state 151
	'}'            shift, and enter state 177

	method_declarationgoto state 150

State 156

	method_declaration -> IDENTIFIER '(' . parameters ')' block_statement    (rule 41)
	method_declaration -> IDENTIFIER '(' . ')' block_statement    (rule 42)

	IDENTIFIER     shift, and enter state 125
	')'            shift, and enter state 176

	parameters     goto state 175

State 157

	parameters -> parameters ',' IDENTIFIER .           (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43


State 158

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement .    (rule 39)

	NUMBER         reduce using rule 39
	STRING         reduce using rule 39
	IDENTIFIER     reduce using rule 39
	'-'            reduce using rule 39
	'('            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'!'            reduce using rule 39
	'true'         reduce using rule 39
	'false'        reduce using rule 39
	'nil'          reduce using rule 39
	'.'            reduce using rule 39
	'print'        reduce using rule 39
	'var'          reduce using rule 39
	'if'           reduce using rule 39
	'while'        reduce using rule 39
	'for'          reduce using rule 39
	'fun'          reduce using rule 39
	'return'       reduce using rule 39
	'class'        reduce using rule 39
	'this'         reduce using rule 39
	'super'        reduce using rule 39
	%eof           reduce using rule 39


State 159

	for_statement -> 'for' '(' ';' expression ';' variable_assignment . ')' statement    (rule 27)

	')'            shift, and enter state 174


State 160

	for_statement -> 'for' '(' ';' expression ';' ')' . statement    (rule 23)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 173
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 161

	for_statement -> 'for' '(' ';' ';' ')' statement .    (rule 21)

	NUMBER         reduce using rule 21
	STRING         reduce using rule 21
	IDENTIFIER     reduce using rule 21
	'-'            reduce using rule 21
	'('            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'!'            reduce using rule 21
	'true'         reduce using rule 21
	'false'        reduce using rule 21
	'nil'          reduce using rule 21
	'.'            reduce using rule 21
	'print'        reduce using rule 21
	'var'          reduce using rule 21
	'if'           reduce using rule 21
	'else'         reduce using rule 21
	'while'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'return'       reduce using rule 21
	'class'        reduce using rule 21
	'this'         reduce using rule 21
	'super'        reduce using rule 21
	%eof           reduce using rule 21


State 162

	for_statement -> 'for' '(' ';' ';' variable_assignment ')' . statement    (rule 24)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 172
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 163

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment . ')' statement    (rule 26)

	')'            shift, and enter state 171


State 164

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' . statement    (rule 22)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 170
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 165

	for_statement -> 'for' '(' variable_declaration ';' expression ';' . ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' . variable_assignment ')' statement    (rule 28)

	IDENTIFIER     shift, and enter state 144
	')'            shift, and enter state 169

	variable_assignmentgoto state 168

State 166

	conditional_statement -> 'if' '(' expression ')' statement 'else' . statement    (rule 19)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 167
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 167

	conditional_statement -> 'if' '(' expression ')' statement 'else' statement .    (rule 19)

	NUMBER         reduce using rule 19
	STRING         reduce using rule 19
	IDENTIFIER     reduce using rule 19
	'-'            reduce using rule 19
	'('            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'!'            reduce using rule 19
	'true'         reduce using rule 19
	'false'        reduce using rule 19
	'nil'          reduce using rule 19
	'.'            reduce using rule 19
	'print'        reduce using rule 19
	'var'          reduce using rule 19
	'if'           reduce using rule 19
	'else'         reduce using rule 19
	'while'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'return'       reduce using rule 19
	'class'        reduce using rule 19
	'this'         reduce using rule 19
	'super'        reduce using rule 19
	%eof           reduce using rule 19


State 168

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment . ')' statement    (rule 28)

	')'            shift, and enter state 183


State 169

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' . statement    (rule 25)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 182
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 170

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement .    (rule 22)

	NUMBER         reduce using rule 22
	STRING         reduce using rule 22
	IDENTIFIER     reduce using rule 22
	'-'            reduce using rule 22
	'('            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'!'            reduce using rule 22
	'true'         reduce using rule 22
	'false'        reduce using rule 22
	'nil'          reduce using rule 22
	'.'            reduce using rule 22
	'print'        reduce using rule 22
	'var'          reduce using rule 22
	'if'           reduce using rule 22
	'else'         reduce using rule 22
	'while'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'return'       reduce using rule 22
	'class'        reduce using rule 22
	'this'         reduce using rule 22
	'super'        reduce using rule 22
	%eof           reduce using rule 22


State 171

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' . statement    (rule 26)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 181
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 172

	for_statement -> 'for' '(' ';' ';' variable_assignment ')' statement .    (rule 24)

	NUMBER         reduce using rule 24
	STRING         reduce using rule 24
	IDENTIFIER     reduce using rule 24
	'-'            reduce using rule 24
	'('            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'!'            reduce using rule 24
	'true'         reduce using rule 24
	'false'        reduce using rule 24
	'nil'          reduce using rule 24
	'.'            reduce using rule 24
	'print'        reduce using rule 24
	'var'          reduce using rule 24
	'if'           reduce using rule 24
	'else'         reduce using rule 24
	'while'        reduce using rule 24
	'for'          reduce using rule 24
	'fun'          reduce using rule 24
	'return'       reduce using rule 24
	'class'        reduce using rule 24
	'this'         reduce using rule 24
	'super'        reduce using rule 24
	%eof           reduce using rule 24


State 173

	for_statement -> 'for' '(' ';' expression ';' ')' statement .    (rule 23)

	NUMBER         reduce using rule 23
	STRING         reduce using rule 23
	IDENTIFIER     reduce using rule 23
	'-'            reduce using rule 23
	'('            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'!'            reduce using rule 23
	'true'         reduce using rule 23
	'false'        reduce using rule 23
	'nil'          reduce using rule 23
	'.'            reduce using rule 23
	'print'        reduce using rule 23
	'var'          reduce using rule 23
	'if'           reduce using rule 23
	'else'         reduce using rule 23
	'while'        reduce using rule 23
	'for'          reduce using rule 23
	'fun'          reduce using rule 23
	'return'       reduce using rule 23
	'class'        reduce using rule 23
	'this'         reduce using rule 23
	'super'        reduce using rule 23
	%eof           reduce using rule 23


State 174

	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' . statement    (rule 27)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 180
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 175

	method_declaration -> IDENTIFIER '(' parameters . ')' block_statement    (rule 41)
	parameters -> parameters . ',' IDENTIFIER           (rule 43)

	')'            shift, and enter state 179
	','            shift, and enter state 149


State 176

	method_declaration -> IDENTIFIER '(' ')' . block_statement    (rule 42)

	'{'            shift, and enter state 32

	block_statementgoto state 178

State 177

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}' .    (rule 36)

	NUMBER         reduce using rule 36
	STRING         reduce using rule 36
	IDENTIFIER     reduce using rule 36
	'-'            reduce using rule 36
	'('            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'!'            reduce using rule 36
	'true'         reduce using rule 36
	'false'        reduce using rule 36
	'nil'          reduce using rule 36
	'.'            reduce using rule 36
	'print'        reduce using rule 36
	'var'          reduce using rule 36
	'if'           reduce using rule 36
	'while'        reduce using rule 36
	'for'          reduce using rule 36
	'fun'          reduce using rule 36
	'return'       reduce using rule 36
	'class'        reduce using rule 36
	'this'         reduce using rule 36
	'super'        reduce using rule 36
	%eof           reduce using rule 36


State 178

	method_declaration -> IDENTIFIER '(' ')' block_statement .    (rule 42)

	IDENTIFIER     reduce using rule 42
	'}'            reduce using rule 42


State 179

	method_declaration -> IDENTIFIER '(' parameters ')' . block_statement    (rule 41)

	'{'            shift, and enter state 32

	block_statementgoto state 185

State 180

	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' statement .    (rule 27)

	NUMBER         reduce using rule 27
	STRING         reduce using rule 27
	IDENTIFIER     reduce using rule 27
	'-'            reduce using rule 27
	'('            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'!'            reduce using rule 27
	'true'         reduce using rule 27
	'false'        reduce using rule 27
	'nil'          reduce using rule 27
	'.'            reduce using rule 27
	'print'        reduce using rule 27
	'var'          reduce using rule 27
	'if'           reduce using rule 27
	'else'         reduce using rule 27
	'while'        reduce using rule 27
	'for'          reduce using rule 27
	'fun'          reduce using rule 27
	'return'       reduce using rule 27
	'class'        reduce using rule 27
	'this'         reduce using rule 27
	'super'        reduce using rule 27
	%eof           reduce using rule 27


State 181

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' statement .    (rule 26)

	NUMBER         reduce using rule 26
	STRING         reduce using rule 26
	IDENTIFIER     reduce using rule 26
	'-'            reduce using rule 26
	'('            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'!'            reduce using rule 26
	'true'         reduce using rule 26
	'false'        reduce using rule 26
	'nil'          reduce using rule 26
	'.'            reduce using rule 26
	'print'        reduce using rule 26
	'var'          reduce using rule 26
	'if'           reduce using rule 26
	'else'         reduce using rule 26
	'while'        reduce using rule 26
	'for'          reduce using rule 26
	'fun'          reduce using rule 26
	'return'       reduce using rule 26
	'class'        reduce using rule 26
	'this'         reduce using rule 26
	'super'        reduce using rule 26
	%eof           reduce using rule 26


State 182

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement .    (rule 25)

	NUMBER         reduce using rule 25
	STRING         reduce using rule 25
	IDENTIFIER     reduce using rule 25
	'-'            reduce using rule 25
	'('            reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'!'            reduce using rule 25
	'true'         reduce using rule 25
	'false'        reduce using rule 25
	'nil'          reduce using rule 25
	'.'            reduce using rule 25
	'print'        reduce using rule 25
	'var'          reduce using rule 25
	'if'           reduce using rule 25
	'else'         reduce using rule 25
	'while'        reduce using rule 25
	'for'          reduce using rule 25
	'fun'          reduce using rule 25
	'return'       reduce using rule 25
	'class'        reduce using rule 25
	'this'         reduce using rule 25
	'super'        reduce using rule 25
	%eof           reduce using rule 25


State 183

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' . statement    (rule 28)

	NUMBER         shift, and enter state 27
	STRING         shift, and enter state 28
	IDENTIFIER     shift, and enter state 52
	'-'            shift, and enter state 30
	'('            shift, and enter state 31
	'{'            shift, and enter state 32
	'!'            shift, and enter state 33
	'true'         shift, and enter state 34
	'false'        shift, and enter state 35
	'nil'          shift, and enter state 36
	'.'            reduce using rule 56
	'print'        shift, and enter state 37
	'if'           shift, and enter state 39
	'while'        shift, and enter state 40
	'for'          shift, and enter state 41
	'return'       shift, and enter state 43
	'this'         shift, and enter state 45
	'super'        shift, and enter state 46

	statement      goto state 184
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 17
	chain          goto state 18
	chaining       goto state 19
	method_chain   goto state 20
	expression     goto state 21
	literal        goto state 22
	grouping       goto state 23
	unary          goto state 24
	binary         goto state 25
	ternary        goto state 26

State 184

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' statement .    (rule 28)

	NUMBER         reduce using rule 28
	STRING         reduce using rule 28
	IDENTIFIER     reduce using rule 28
	'-'            reduce using rule 28
	'('            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'!'            reduce using rule 28
	'true'         reduce using rule 28
	'false'        reduce using rule 28
	'nil'          reduce using rule 28
	'.'            reduce using rule 28
	'print'        reduce using rule 28
	'var'          reduce using rule 28
	'if'           reduce using rule 28
	'else'         reduce using rule 28
	'while'        reduce using rule 28
	'for'          reduce using rule 28
	'fun'          reduce using rule 28
	'return'       reduce using rule 28
	'class'        reduce using rule 28
	'this'         reduce using rule 28
	'super'        reduce using rule 28
	%eof           reduce using rule 28


State 185

	method_declaration -> IDENTIFIER '(' parameters ')' block_statement .    (rule 41)

	IDENTIFIER     reduce using rule 41
	'}'            reduce using rule 41


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 89
Number of terminals: 40
Number of non-terminals: 31
Number of states: 186
