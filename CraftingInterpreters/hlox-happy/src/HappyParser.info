-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/HappyParser.y
-----------------------------------------------------------------------------

state 137 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> declarations                            (1)
	declarations -> declarations declaration           (2)
	declarations -> declaration                        (3)
	declaration -> statement                           (4)
	declaration -> variable_declaration                (5)
	declaration -> function_declaration                (6)
	declaration -> class_declaration                   (7)
	statement -> expression_statement                  (8)
	statement -> print_statement                       (9)
	statement -> block_statement                       (10)
	statement -> conditional_statement                 (11)
	statement -> while_statement                       (12)
	statement -> for_statement                         (13)
	statement -> return_statement                      (14)
	expression_statement -> expression ';'             (15)
	print_statement -> 'print' expression ';'          (16)
	block_statement -> '{' declarations '}'            (17)
	conditional_statement -> 'if' '(' expression ')' statement   (18)
	conditional_statement -> 'if' '(' expression ')' statement 'else' statement   (19)
	while_statement -> 'while' '(' expression ')' statement   (20)
	for_statement -> 'for' '(' ';' ';' ')' statement   (21)
	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement   (22)
	for_statement -> 'for' '(' ';' expression ';' ')' statement   (23)
	for_statement -> 'for' '(' ';' ';' expression ')' statement   (24)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement   (25)
	for_statement -> 'for' '(' variable_declaration ';' ';' expression ')' statement   (26)
	for_statement -> 'for' '(' ';' expression ';' expression ')' statement   (27)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' expression ')' statement   (28)
	return_statement -> 'return' expression ';'        (29)
	variable_declaration -> 'var' IDENTIFIER '=' expression ';'   (30)
	variable_declaration -> 'var' IDENTIFIER ';'       (31)
	variable_declaration -> IDENTIFIER '=' expression ';'   (32)
	class_declaration -> 'class' IDENTIFIER '{' methods '}'   (33)
	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}'   (34)
	methods ->                                         (35)
	methods -> methods method_declaration              (36)
	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement   (37)
	method_declaration -> IDENTIFIER '(' parameters ')' block_statement   (38)
	parameters -> parameters ',' IDENTIFIER            (39)
	parameters ->                                      (40)
	function_call -> IDENTIFIER '(' arguments ')'      (41)
	function_call -> function_call '(' arguments ')'   (42)
	chain -> chaining                                  (43)
	chaining -> IDENTIFIER '.' IDENTIFIER              (44)
	chaining -> 'this' '.' IDENTIFIER                  (45)
	chaining -> IDENTIFIER '.' method_chain            (46)
	chaining -> 'this' '.' method_chain                (47)
	chaining -> 'super' '.' method_chain               (48)
	chaining -> 'super' '.' IDENTIFIER                 (49)
	chaining -> method_chain '.' IDENTIFIER            (50)
	method_chain -> method_chain '.' function_call     (51)
	method_chain ->                                    (52)
	arguments -> arguments ',' expression              (53)
	arguments ->                                       (54)
	expression -> literal                              (55)
	expression -> unary                                (56)
	expression -> binary                               (57)
	expression -> ternary                              (58)
	expression -> grouping                             (59)
	expression -> function_call                        (60)
	expression -> chain                                (61)
	expression -> 'this'                               (62)
	literal -> NUMBER                                  (63)
	literal -> STRING                                  (64)
	literal -> 'true'                                  (65)
	literal -> 'false'                                 (66)
	literal -> 'nil'                                   (67)
	literal -> IDENTIFIER                              (68)
	grouping -> '(' expression ')'                     (69)
	unary -> '-' expression                            (70)
	unary -> '!' expression                            (71)
	binary -> expression '==' expression               (72)
	binary -> expression '!=' expression               (73)
	binary -> expression '+' expression                (74)
	binary -> expression '-' expression                (75)
	binary -> expression '*' expression                (76)
	binary -> expression '/' expression                (77)
	binary -> expression '>' expression                (78)
	binary -> expression '<' expression                (79)
	binary -> expression '>=' expression               (80)
	binary -> expression '<=' expression               (81)
	binary -> expression 'and' expression              (82)
	binary -> expression 'or' expression               (83)
	ternary -> expression '?' expression ':' expression   (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	NUMBER         { L.NUMBER $$ }
	STRING         { L.STRING $$ }
	IDENTIFIER     { L.IDENTIFIER $$ }
	'='            { L.EQUAL }
	'+'            { L.PLUS }
	'-'            { L.MINUS }
	'*'            { L.STAR }
	'/'            { L.SLASH }
	'('            { L.LEFT_PAREN }
	')'            { L.RIGHT_PAREN }
	'{'            { L.LEFT_BRACE }
	'}'            { L.RIGHT_BRACE }
	'!'            { L.BANG }
	'<'            { L.LESS }
	'>'            { L.GREATER }
	'<='           { L.LESS_EQUAL }
	'>='           { L.GREATER_EQUAL }
	'!='           { L.BANG_EQUAL }
	'=='           { L.EQUAL_EQUAL }
	'and'          { L.AND }
	'or'           { L.OR }
	'true'         { L.TRUE }
	'false'        { L.FALSE }
	'nil'          { L.NIL }
	';'            { L.SEMICOLON }
	','            { L.COMMA }
	'?'            { L.QUESTION_MARK }
	':'            { L.COLON }
	'.'            { L.DOT }
	'print'        { L.PRINT }
	'var'          { L.VAR }
	'if'           { L.IF }
	'else'         { L.ELSE }
	'while'        { L.WHILE }
	'for'          { L.FOR }
	'fun'          { L.FUN }
	'return'       { L.RETURN }
	'class'        { L.CLASS }
	'this'         { L.THIS }
	'super'        { L.SUPER }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	declarations    rules 2, 3
	declaration     rules 4, 5, 6, 7
	statement       rules 8, 9, 10, 11, 12, 13, 14
	expression_statement rule  15
	print_statement rule  16
	block_statement rule  17
	conditional_statement rules 18, 19
	while_statement rule  20
	for_statement   rules 21, 22, 23, 24, 25, 26, 27, 28
	return_statement rule  29
	variable_declaration rules 30, 31, 32
	class_declaration rules 33, 34
	methods         rules 35, 36
	function_declaration rule  37
	method_declaration rule  38
	parameters      rules 39, 40
	function_call   rules 41, 42
	chain           rule  43
	chaining        rules 44, 45, 46, 47, 48, 49, 50
	method_chain    rules 51, 52
	arguments       rules 53, 54
	expression      rules 55, 56, 57, 58, 59, 60, 61, 62
	literal         rules 63, 64, 65, 66, 67, 68
	grouping        rule  69
	unary           rules 70, 71
	binary          rules 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
	ternary         rule  84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 27
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'var'          shift, and enter state 36
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'fun'          shift, and enter state 40
	'return'       shift, and enter state 41
	'class'        shift, and enter state 42
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	program        goto state 45
	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declarationgoto state 12
	class_declarationgoto state 13
	function_declarationgoto state 14
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 1

	program -> . declarations                           (rule 1)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 27
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'print'        shift, and enter state 35
	'var'          shift, and enter state 36
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'fun'          shift, and enter state 40
	'return'       shift, and enter state 41
	'class'        shift, and enter state 42
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declarationgoto state 12
	class_declarationgoto state 13
	function_declarationgoto state 14
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 2

	program -> declarations .                           (rule 1)
	declarations -> declarations . declaration          (rule 2)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 27
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'var'          shift, and enter state 36
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'fun'          shift, and enter state 40
	'return'       shift, and enter state 41
	'class'        shift, and enter state 42
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44
	%eof           reduce using rule 1

	declaration    goto state 80
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declarationgoto state 12
	class_declarationgoto state 13
	function_declarationgoto state 14
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 3

	declarations -> declaration .                       (rule 3)

	NUMBER         reduce using rule 3
	STRING         reduce using rule 3
	IDENTIFIER     reduce using rule 3
	'-'            reduce using rule 3
	'('            reduce using rule 3
	'{'            reduce using rule 3
	'}'            reduce using rule 3
	'!'            reduce using rule 3
	'true'         reduce using rule 3
	'false'        reduce using rule 3
	'nil'          reduce using rule 3
	'.'            reduce using rule 3
	'print'        reduce using rule 3
	'var'          reduce using rule 3
	'if'           reduce using rule 3
	'while'        reduce using rule 3
	'for'          reduce using rule 3
	'fun'          reduce using rule 3
	'return'       reduce using rule 3
	'class'        reduce using rule 3
	'this'         reduce using rule 3
	'super'        reduce using rule 3
	%eof           reduce using rule 3


State 4

	declaration -> statement .                          (rule 4)

	NUMBER         reduce using rule 4
	STRING         reduce using rule 4
	IDENTIFIER     reduce using rule 4
	'-'            reduce using rule 4
	'('            reduce using rule 4
	'{'            reduce using rule 4
	'}'            reduce using rule 4
	'!'            reduce using rule 4
	'true'         reduce using rule 4
	'false'        reduce using rule 4
	'nil'          reduce using rule 4
	'.'            reduce using rule 4
	'print'        reduce using rule 4
	'var'          reduce using rule 4
	'if'           reduce using rule 4
	'while'        reduce using rule 4
	'for'          reduce using rule 4
	'fun'          reduce using rule 4
	'return'       reduce using rule 4
	'class'        reduce using rule 4
	'this'         reduce using rule 4
	'super'        reduce using rule 4
	%eof           reduce using rule 4


State 5

	statement -> expression_statement .                 (rule 8)

	NUMBER         reduce using rule 8
	STRING         reduce using rule 8
	IDENTIFIER     reduce using rule 8
	'-'            reduce using rule 8
	'('            reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	'!'            reduce using rule 8
	'true'         reduce using rule 8
	'false'        reduce using rule 8
	'nil'          reduce using rule 8
	'.'            reduce using rule 8
	'print'        reduce using rule 8
	'var'          reduce using rule 8
	'if'           reduce using rule 8
	'else'         reduce using rule 8
	'while'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'return'       reduce using rule 8
	'class'        reduce using rule 8
	'this'         reduce using rule 8
	'super'        reduce using rule 8
	%eof           reduce using rule 8


State 6

	statement -> print_statement .                      (rule 9)

	NUMBER         reduce using rule 9
	STRING         reduce using rule 9
	IDENTIFIER     reduce using rule 9
	'-'            reduce using rule 9
	'('            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	'!'            reduce using rule 9
	'true'         reduce using rule 9
	'false'        reduce using rule 9
	'nil'          reduce using rule 9
	'.'            reduce using rule 9
	'print'        reduce using rule 9
	'var'          reduce using rule 9
	'if'           reduce using rule 9
	'else'         reduce using rule 9
	'while'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'return'       reduce using rule 9
	'class'        reduce using rule 9
	'this'         reduce using rule 9
	'super'        reduce using rule 9
	%eof           reduce using rule 9


State 7

	statement -> block_statement .                      (rule 10)

	NUMBER         reduce using rule 10
	STRING         reduce using rule 10
	IDENTIFIER     reduce using rule 10
	'-'            reduce using rule 10
	'('            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	'!'            reduce using rule 10
	'true'         reduce using rule 10
	'false'        reduce using rule 10
	'nil'          reduce using rule 10
	'.'            reduce using rule 10
	'print'        reduce using rule 10
	'var'          reduce using rule 10
	'if'           reduce using rule 10
	'else'         reduce using rule 10
	'while'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'return'       reduce using rule 10
	'class'        reduce using rule 10
	'this'         reduce using rule 10
	'super'        reduce using rule 10
	%eof           reduce using rule 10


State 8

	statement -> conditional_statement .                (rule 11)

	NUMBER         reduce using rule 11
	STRING         reduce using rule 11
	IDENTIFIER     reduce using rule 11
	'-'            reduce using rule 11
	'('            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'!'            reduce using rule 11
	'true'         reduce using rule 11
	'false'        reduce using rule 11
	'nil'          reduce using rule 11
	'.'            reduce using rule 11
	'print'        reduce using rule 11
	'var'          reduce using rule 11
	'if'           reduce using rule 11
	'else'         reduce using rule 11
	'while'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'return'       reduce using rule 11
	'class'        reduce using rule 11
	'this'         reduce using rule 11
	'super'        reduce using rule 11
	%eof           reduce using rule 11


State 9

	statement -> while_statement .                      (rule 12)

	NUMBER         reduce using rule 12
	STRING         reduce using rule 12
	IDENTIFIER     reduce using rule 12
	'-'            reduce using rule 12
	'('            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'!'            reduce using rule 12
	'true'         reduce using rule 12
	'false'        reduce using rule 12
	'nil'          reduce using rule 12
	'.'            reduce using rule 12
	'print'        reduce using rule 12
	'var'          reduce using rule 12
	'if'           reduce using rule 12
	'else'         reduce using rule 12
	'while'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'return'       reduce using rule 12
	'class'        reduce using rule 12
	'this'         reduce using rule 12
	'super'        reduce using rule 12
	%eof           reduce using rule 12


State 10

	statement -> for_statement .                        (rule 13)

	NUMBER         reduce using rule 13
	STRING         reduce using rule 13
	IDENTIFIER     reduce using rule 13
	'-'            reduce using rule 13
	'('            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'!'            reduce using rule 13
	'true'         reduce using rule 13
	'false'        reduce using rule 13
	'nil'          reduce using rule 13
	'.'            reduce using rule 13
	'print'        reduce using rule 13
	'var'          reduce using rule 13
	'if'           reduce using rule 13
	'else'         reduce using rule 13
	'while'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'return'       reduce using rule 13
	'class'        reduce using rule 13
	'this'         reduce using rule 13
	'super'        reduce using rule 13
	%eof           reduce using rule 13


State 11

	statement -> return_statement .                     (rule 14)

	NUMBER         reduce using rule 14
	STRING         reduce using rule 14
	IDENTIFIER     reduce using rule 14
	'-'            reduce using rule 14
	'('            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'!'            reduce using rule 14
	'true'         reduce using rule 14
	'false'        reduce using rule 14
	'nil'          reduce using rule 14
	'.'            reduce using rule 14
	'print'        reduce using rule 14
	'var'          reduce using rule 14
	'if'           reduce using rule 14
	'else'         reduce using rule 14
	'while'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'return'       reduce using rule 14
	'class'        reduce using rule 14
	'this'         reduce using rule 14
	'super'        reduce using rule 14
	%eof           reduce using rule 14


State 12

	declaration -> variable_declaration .               (rule 5)

	NUMBER         reduce using rule 5
	STRING         reduce using rule 5
	IDENTIFIER     reduce using rule 5
	'-'            reduce using rule 5
	'('            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	'!'            reduce using rule 5
	'true'         reduce using rule 5
	'false'        reduce using rule 5
	'nil'          reduce using rule 5
	'.'            reduce using rule 5
	'print'        reduce using rule 5
	'var'          reduce using rule 5
	'if'           reduce using rule 5
	'while'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'return'       reduce using rule 5
	'class'        reduce using rule 5
	'this'         reduce using rule 5
	'super'        reduce using rule 5
	%eof           reduce using rule 5


State 13

	declaration -> class_declaration .                  (rule 7)

	NUMBER         reduce using rule 7
	STRING         reduce using rule 7
	IDENTIFIER     reduce using rule 7
	'-'            reduce using rule 7
	'('            reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	'!'            reduce using rule 7
	'true'         reduce using rule 7
	'false'        reduce using rule 7
	'nil'          reduce using rule 7
	'.'            reduce using rule 7
	'print'        reduce using rule 7
	'var'          reduce using rule 7
	'if'           reduce using rule 7
	'while'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'return'       reduce using rule 7
	'class'        reduce using rule 7
	'this'         reduce using rule 7
	'super'        reduce using rule 7
	%eof           reduce using rule 7


State 14

	declaration -> function_declaration .               (rule 6)

	NUMBER         reduce using rule 6
	STRING         reduce using rule 6
	IDENTIFIER     reduce using rule 6
	'-'            reduce using rule 6
	'('            reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	'!'            reduce using rule 6
	'true'         reduce using rule 6
	'false'        reduce using rule 6
	'nil'          reduce using rule 6
	'.'            reduce using rule 6
	'print'        reduce using rule 6
	'var'          reduce using rule 6
	'if'           reduce using rule 6
	'while'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'return'       reduce using rule 6
	'class'        reduce using rule 6
	'this'         reduce using rule 6
	'super'        reduce using rule 6
	%eof           reduce using rule 6


State 15

	function_call -> function_call . '(' arguments ')'    (rule 42)
	expression -> function_call .                       (rule 60)

	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'('            shift, and enter state 79
	')'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'!='           reduce using rule 60
	'=='           reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'?'            reduce using rule 60
	':'            reduce using rule 60


State 16

	expression -> chain .                               (rule 61)

	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	')'            reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'!='           reduce using rule 61
	'=='           reduce using rule 61
	'and'          reduce using rule 61
	'or'           reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61
	'?'            reduce using rule 61
	':'            reduce using rule 61


State 17

	chain -> chaining .                                 (rule 43)

	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	')'            reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'!='           reduce using rule 43
	'=='           reduce using rule 43
	'and'          reduce using rule 43
	'or'           reduce using rule 43
	';'            reduce using rule 43
	','            reduce using rule 43
	'?'            reduce using rule 43
	':'            reduce using rule 43


State 18

	chaining -> method_chain . '.' IDENTIFIER           (rule 50)
	method_chain -> method_chain . '.' function_call    (rule 51)

	'.'            shift, and enter state 78


State 19

	expression_statement -> expression . ';'            (rule 15)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 76
	'?'            shift, and enter state 77


State 20

	expression -> literal .                             (rule 55)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	')'            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'!='           reduce using rule 55
	'=='           reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	'?'            reduce using rule 55
	':'            reduce using rule 55


State 21

	expression -> grouping .                            (rule 59)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	')'            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'!='           reduce using rule 59
	'=='           reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59
	'?'            reduce using rule 59
	':'            reduce using rule 59


State 22

	expression -> unary .                               (rule 56)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	')'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'!='           reduce using rule 56
	'=='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'?'            reduce using rule 56
	':'            reduce using rule 56


State 23

	expression -> binary .                              (rule 57)

	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	')'            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'<='           reduce using rule 57
	'>='           reduce using rule 57
	'!='           reduce using rule 57
	'=='           reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57
	'?'            reduce using rule 57
	':'            reduce using rule 57


State 24

	expression -> ternary .                             (rule 58)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	')'            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'!='           reduce using rule 58
	'=='           reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58
	'?'            reduce using rule 58
	':'            reduce using rule 58


State 25

	literal -> NUMBER .                                 (rule 63)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	')'            reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'<='           reduce using rule 63
	'>='           reduce using rule 63
	'!='           reduce using rule 63
	'=='           reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	'?'            reduce using rule 63
	':'            reduce using rule 63


State 26

	literal -> STRING .                                 (rule 64)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	')'            reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'!='           reduce using rule 64
	'=='           reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64
	'?'            reduce using rule 64
	':'            reduce using rule 64


State 27

	variable_declaration -> IDENTIFIER . '=' expression ';'    (rule 32)
	function_call -> IDENTIFIER . '(' arguments ')'     (rule 41)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 44)
	chaining -> IDENTIFIER . '.' method_chain           (rule 46)
	literal -> IDENTIFIER .                             (rule 68)

	'='            shift, and enter state 61
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'('            shift, and enter state 62
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'!='           reduce using rule 68
	'=='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68
	';'            reduce using rule 68
	'?'            reduce using rule 68
	'.'            shift, and enter state 63


State 28

	unary -> '-' . expression                           (rule 70)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 60
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 29

	grouping -> '(' . expression ')'                    (rule 69)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 59
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 30

	block_statement -> '{' . declarations '}'           (rule 17)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 27
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'var'          shift, and enter state 36
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'fun'          shift, and enter state 40
	'return'       shift, and enter state 41
	'class'        shift, and enter state 42
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	declarations   goto state 58
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declarationgoto state 12
	class_declarationgoto state 13
	function_declarationgoto state 14
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 31

	unary -> '!' . expression                           (rule 71)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 57
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 32

	literal -> 'true' .                                 (rule 65)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'<='           reduce using rule 65
	'>='           reduce using rule 65
	'!='           reduce using rule 65
	'=='           reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65
	'?'            reduce using rule 65
	':'            reduce using rule 65


State 33

	literal -> 'false' .                                (rule 66)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'<='           reduce using rule 66
	'>='           reduce using rule 66
	'!='           reduce using rule 66
	'=='           reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66
	'?'            reduce using rule 66
	':'            reduce using rule 66


State 34

	literal -> 'nil' .                                  (rule 67)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'<='           reduce using rule 67
	'>='           reduce using rule 67
	'!='           reduce using rule 67
	'=='           reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67
	'?'            reduce using rule 67
	':'            reduce using rule 67


State 35

	print_statement -> 'print' . expression ';'         (rule 16)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 56
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 36

	variable_declaration -> 'var' . IDENTIFIER '=' expression ';'    (rule 30)
	variable_declaration -> 'var' . IDENTIFIER ';'      (rule 31)

	IDENTIFIER     shift, and enter state 55


State 37

	conditional_statement -> 'if' . '(' expression ')' statement    (rule 18)
	conditional_statement -> 'if' . '(' expression ')' statement 'else' statement    (rule 19)

	'('            shift, and enter state 54


State 38

	while_statement -> 'while' . '(' expression ')' statement    (rule 20)

	'('            shift, and enter state 53


State 39

	for_statement -> 'for' . '(' ';' ';' ')' statement    (rule 21)
	for_statement -> 'for' . '(' variable_declaration ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' . '(' ';' expression ';' ')' statement    (rule 23)
	for_statement -> 'for' . '(' ';' ';' expression ')' statement    (rule 24)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' . '(' variable_declaration ';' ';' expression ')' statement    (rule 26)
	for_statement -> 'for' . '(' ';' expression ';' expression ')' statement    (rule 27)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' expression ')' statement    (rule 28)

	'('            shift, and enter state 52


State 40

	function_declaration -> 'fun' . IDENTIFIER '(' parameters ')' block_statement    (rule 37)

	IDENTIFIER     shift, and enter state 51


State 41

	return_statement -> 'return' . expression ';'       (rule 29)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 49
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 42

	class_declaration -> 'class' . IDENTIFIER '{' methods '}'    (rule 33)
	class_declaration -> 'class' . IDENTIFIER '<' IDENTIFIER '{' methods '}'    (rule 34)

	IDENTIFIER     shift, and enter state 48


State 43

	chaining -> 'this' . '.' IDENTIFIER                 (rule 45)
	chaining -> 'this' . '.' method_chain               (rule 47)
	expression -> 'this' .                              (rule 62)

	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	')'            reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	'<='           reduce using rule 62
	'>='           reduce using rule 62
	'!='           reduce using rule 62
	'=='           reduce using rule 62
	'and'          reduce using rule 62
	'or'           reduce using rule 62
	';'            reduce using rule 62
	','            reduce using rule 62
	'?'            reduce using rule 62
	':'            reduce using rule 62
	'.'            shift, and enter state 47


State 44

	chaining -> 'super' . '.' method_chain              (rule 48)
	chaining -> 'super' . '.' IDENTIFIER                (rule 49)

	'.'            shift, and enter state 46


State 45

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 46

	chaining -> 'super' '.' . method_chain              (rule 48)
	chaining -> 'super' '.' . IDENTIFIER                (rule 49)

	IDENTIFIER     shift, and enter state 118
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	')'            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'!='           reduce using rule 52
	'=='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'?'            reduce using rule 52
	':'            reduce using rule 52
	'.'            reduce using rule 52

	method_chain   goto state 117

State 47

	chaining -> 'this' '.' . IDENTIFIER                 (rule 45)
	chaining -> 'this' '.' . method_chain               (rule 47)

	IDENTIFIER     shift, and enter state 116
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	')'            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'!='           reduce using rule 52
	'=='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'?'            reduce using rule 52
	':'            reduce using rule 52
	'.'            reduce using rule 52

	method_chain   goto state 115

State 48

	class_declaration -> 'class' IDENTIFIER . '{' methods '}'    (rule 33)
	class_declaration -> 'class' IDENTIFIER . '<' IDENTIFIER '{' methods '}'    (rule 34)

	'{'            shift, and enter state 113
	'<'            shift, and enter state 114


State 49

	return_statement -> 'return' expression . ';'       (rule 29)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 112
	'?'            shift, and enter state 77


State 50

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 41)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 44)
	chaining -> IDENTIFIER . '.' method_chain           (rule 46)
	literal -> IDENTIFIER .                             (rule 68)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'('            shift, and enter state 62
	')'            reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'!='           reduce using rule 68
	'=='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'?'            reduce using rule 68
	':'            reduce using rule 68
	'.'            shift, and enter state 63


State 51

	function_declaration -> 'fun' IDENTIFIER . '(' parameters ')' block_statement    (rule 37)

	'('            shift, and enter state 111


State 52

	for_statement -> 'for' '(' . ';' ';' ')' statement    (rule 21)
	for_statement -> 'for' '(' . variable_declaration ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' . ';' expression ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' . ';' ';' expression ')' statement    (rule 24)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' . variable_declaration ';' ';' expression ')' statement    (rule 26)
	for_statement -> 'for' '(' . ';' expression ';' expression ')' statement    (rule 27)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' expression ')' statement    (rule 28)

	IDENTIFIER     shift, and enter state 109
	';'            shift, and enter state 110
	'var'          shift, and enter state 36

	variable_declarationgoto state 108

State 53

	while_statement -> 'while' '(' . expression ')' statement    (rule 20)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 107
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 54

	conditional_statement -> 'if' '(' . expression ')' statement    (rule 18)
	conditional_statement -> 'if' '(' . expression ')' statement 'else' statement    (rule 19)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 106
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 55

	variable_declaration -> 'var' IDENTIFIER . '=' expression ';'    (rule 30)
	variable_declaration -> 'var' IDENTIFIER . ';'      (rule 31)

	'='            shift, and enter state 104
	';'            shift, and enter state 105


State 56

	print_statement -> 'print' expression . ';'         (rule 16)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 103
	'?'            shift, and enter state 77


State 57

	unary -> '!' expression .                           (rule 71)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	')'            reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'!='           reduce using rule 71
	'=='           reduce using rule 71
	'and'          reduce using rule 71
	'or'           reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'?'            reduce using rule 71
	':'            reduce using rule 71


State 58

	declarations -> declarations . declaration          (rule 2)
	block_statement -> '{' declarations . '}'           (rule 17)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 27
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'}'            shift, and enter state 102
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'var'          shift, and enter state 36
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'fun'          shift, and enter state 40
	'return'       shift, and enter state 41
	'class'        shift, and enter state 42
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	declaration    goto state 80
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	variable_declarationgoto state 12
	class_declarationgoto state 13
	function_declarationgoto state 14
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 59

	grouping -> '(' expression . ')'                    (rule 69)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 101
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 60

	unary -> '-' expression .                           (rule 70)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'!='           reduce using rule 70
	'=='           reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'?'            reduce using rule 70
	':'            reduce using rule 70


State 61

	variable_declaration -> IDENTIFIER '=' . expression ';'    (rule 32)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 100
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 62

	function_call -> IDENTIFIER '(' . arguments ')'     (rule 41)

	')'            reduce using rule 54
	','            reduce using rule 54

	arguments      goto state 99

State 63

	chaining -> IDENTIFIER '.' . IDENTIFIER             (rule 44)
	chaining -> IDENTIFIER '.' . method_chain           (rule 46)

	IDENTIFIER     shift, and enter state 98
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	')'            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'!='           reduce using rule 52
	'=='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'?'            reduce using rule 52
	':'            reduce using rule 52
	'.'            reduce using rule 52

	method_chain   goto state 97

State 64

	binary -> expression '+' . expression               (rule 74)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 96
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 65

	binary -> expression '-' . expression               (rule 75)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 95
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 66

	binary -> expression '*' . expression               (rule 76)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 94
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 67

	binary -> expression '/' . expression               (rule 77)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 93
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 68

	binary -> expression '<' . expression               (rule 79)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 92
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 69

	binary -> expression '>' . expression               (rule 78)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 91
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 70

	binary -> expression '<=' . expression              (rule 81)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 90
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 71

	binary -> expression '>=' . expression              (rule 80)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 89
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 72

	binary -> expression '!=' . expression              (rule 73)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 88
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 73

	binary -> expression '==' . expression              (rule 72)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 87
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 74

	binary -> expression 'and' . expression             (rule 82)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 86
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 75

	binary -> expression 'or' . expression              (rule 83)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 85
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 76

	expression_statement -> expression ';' .            (rule 15)

	NUMBER         reduce using rule 15
	STRING         reduce using rule 15
	IDENTIFIER     reduce using rule 15
	'-'            reduce using rule 15
	'('            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'!'            reduce using rule 15
	'true'         reduce using rule 15
	'false'        reduce using rule 15
	'nil'          reduce using rule 15
	'.'            reduce using rule 15
	'print'        reduce using rule 15
	'var'          reduce using rule 15
	'if'           reduce using rule 15
	'else'         reduce using rule 15
	'while'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'return'       reduce using rule 15
	'class'        reduce using rule 15
	'this'         reduce using rule 15
	'super'        reduce using rule 15
	%eof           reduce using rule 15


State 77

	ternary -> expression '?' . expression ':' expression    (rule 84)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 84
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 78

	chaining -> method_chain '.' . IDENTIFIER           (rule 50)
	method_chain -> method_chain '.' . function_call    (rule 51)

	IDENTIFIER     shift, and enter state 83

	function_call  goto state 82

State 79

	function_call -> function_call '(' . arguments ')'    (rule 42)

	')'            reduce using rule 54
	','            reduce using rule 54

	arguments      goto state 81

State 80

	declarations -> declarations declaration .          (rule 2)

	NUMBER         reduce using rule 2
	STRING         reduce using rule 2
	IDENTIFIER     reduce using rule 2
	'-'            reduce using rule 2
	'('            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	'!'            reduce using rule 2
	'true'         reduce using rule 2
	'false'        reduce using rule 2
	'nil'          reduce using rule 2
	'.'            reduce using rule 2
	'print'        reduce using rule 2
	'var'          reduce using rule 2
	'if'           reduce using rule 2
	'while'        reduce using rule 2
	'for'          reduce using rule 2
	'fun'          reduce using rule 2
	'return'       reduce using rule 2
	'class'        reduce using rule 2
	'this'         reduce using rule 2
	'super'        reduce using rule 2
	%eof           reduce using rule 2


State 81

	function_call -> function_call '(' arguments . ')'    (rule 42)
	arguments -> arguments . ',' expression             (rule 53)

	')'            shift, and enter state 133
	','            shift, and enter state 131


State 82

	function_call -> function_call . '(' arguments ')'    (rule 42)
	method_chain -> method_chain '.' function_call .    (rule 51)

	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'('            shift, and enter state 79
	')'            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'!='           reduce using rule 51
	'=='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	'?'            reduce using rule 51
	':'            reduce using rule 51
	'.'            reduce using rule 51


State 83

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 41)
	chaining -> method_chain '.' IDENTIFIER .           (rule 50)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'('            shift, and enter state 62
	')'            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'<='           reduce using rule 50
	'>='           reduce using rule 50
	'!='           reduce using rule 50
	'=='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'?'            reduce using rule 50
	':'            reduce using rule 50


State 84

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)
	ternary -> expression '?' expression . ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77
	':'            shift, and enter state 132


State 85

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	binary -> expression 'or' expression .              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 83
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          reduce using rule 83
	'or'           reduce using rule 83
	';'            reduce using rule 83
	','            reduce using rule 83
	'?'            reduce using rule 83
	':'            reduce using rule 83


State 86

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression 'and' expression .             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 82
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          reduce using rule 82
	'or'           reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'?'            reduce using rule 82
	':'            reduce using rule 82


State 87

	binary -> expression . '==' expression              (rule 72)
	binary -> expression '==' expression .              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 72
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           reduce using rule 72
	'=='           reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'?'            reduce using rule 72
	':'            reduce using rule 72


State 88

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression '!=' expression .              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 73
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           reduce using rule 73
	'=='           reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'?'            reduce using rule 73
	':'            reduce using rule 73


State 89

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression '>=' expression .              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 80
	'<'            reduce using rule 80
	'>'            reduce using rule 80
	'<='           reduce using rule 80
	'>='           reduce using rule 80
	'!='           reduce using rule 80
	'=='           reduce using rule 80
	'and'          reduce using rule 80
	'or'           reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'?'            reduce using rule 80
	':'            reduce using rule 80


State 90

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression '<=' expression .              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 81
	'<'            reduce using rule 81
	'>'            reduce using rule 81
	'<='           reduce using rule 81
	'>='           reduce using rule 81
	'!='           reduce using rule 81
	'=='           reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'?'            reduce using rule 81
	':'            reduce using rule 81


State 91

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression '>' expression .               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 78
	'<'            reduce using rule 78
	'>'            reduce using rule 78
	'<='           reduce using rule 78
	'>='           reduce using rule 78
	'!='           reduce using rule 78
	'=='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'?'            reduce using rule 78
	':'            reduce using rule 78


State 92

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression '<' expression .               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 79
	'<'            reduce using rule 79
	'>'            reduce using rule 79
	'<='           reduce using rule 79
	'>='           reduce using rule 79
	'!='           reduce using rule 79
	'=='           reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'?'            reduce using rule 79
	':'            reduce using rule 79


State 93

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression '/' expression .               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	')'            reduce using rule 77
	'<'            reduce using rule 77
	'>'            reduce using rule 77
	'<='           reduce using rule 77
	'>='           reduce using rule 77
	'!='           reduce using rule 77
	'=='           reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'?'            reduce using rule 77
	':'            reduce using rule 77


State 94

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression '*' expression .               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	')'            reduce using rule 76
	'<'            reduce using rule 76
	'>'            reduce using rule 76
	'<='           reduce using rule 76
	'>='           reduce using rule 76
	'!='           reduce using rule 76
	'=='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'?'            reduce using rule 76
	':'            reduce using rule 76


State 95

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression '-' expression .               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'!='           reduce using rule 75
	'=='           reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'?'            reduce using rule 75
	':'            reduce using rule 75


State 96

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression '+' expression .               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'!='           reduce using rule 74
	'=='           reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'?'            reduce using rule 74
	':'            reduce using rule 74


State 97

	chaining -> IDENTIFIER '.' method_chain .           (rule 46)
	method_chain -> method_chain . '.' function_call    (rule 51)

	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	')'            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'!='           reduce using rule 46
	'=='           reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	'?'            reduce using rule 46
	':'            reduce using rule 46
	'.'            shift, and enter state 119


State 98

	chaining -> IDENTIFIER '.' IDENTIFIER .             (rule 44)

	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	')'            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'!='           reduce using rule 44
	'=='           reduce using rule 44
	'and'          reduce using rule 44
	'or'           reduce using rule 44
	';'            reduce using rule 44
	','            reduce using rule 44
	'?'            reduce using rule 44
	':'            reduce using rule 44


State 99

	function_call -> IDENTIFIER '(' arguments . ')'     (rule 41)
	arguments -> arguments . ',' expression             (rule 53)

	')'            shift, and enter state 130
	','            shift, and enter state 131


State 100

	variable_declaration -> IDENTIFIER '=' expression . ';'    (rule 32)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 129
	'?'            shift, and enter state 77


State 101

	grouping -> '(' expression ')' .                    (rule 69)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	')'            reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'<='           reduce using rule 69
	'>='           reduce using rule 69
	'!='           reduce using rule 69
	'=='           reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69
	'?'            reduce using rule 69
	':'            reduce using rule 69


State 102

	block_statement -> '{' declarations '}' .           (rule 17)

	NUMBER         reduce using rule 17
	STRING         reduce using rule 17
	IDENTIFIER     reduce using rule 17
	'-'            reduce using rule 17
	'('            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'!'            reduce using rule 17
	'true'         reduce using rule 17
	'false'        reduce using rule 17
	'nil'          reduce using rule 17
	'.'            reduce using rule 17
	'print'        reduce using rule 17
	'var'          reduce using rule 17
	'if'           reduce using rule 17
	'else'         reduce using rule 17
	'while'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'return'       reduce using rule 17
	'class'        reduce using rule 17
	'this'         reduce using rule 17
	'super'        reduce using rule 17
	%eof           reduce using rule 17


State 103

	print_statement -> 'print' expression ';' .         (rule 16)

	NUMBER         reduce using rule 16
	STRING         reduce using rule 16
	IDENTIFIER     reduce using rule 16
	'-'            reduce using rule 16
	'('            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'!'            reduce using rule 16
	'true'         reduce using rule 16
	'false'        reduce using rule 16
	'nil'          reduce using rule 16
	'.'            reduce using rule 16
	'print'        reduce using rule 16
	'var'          reduce using rule 16
	'if'           reduce using rule 16
	'else'         reduce using rule 16
	'while'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'return'       reduce using rule 16
	'class'        reduce using rule 16
	'this'         reduce using rule 16
	'super'        reduce using rule 16
	%eof           reduce using rule 16


State 104

	variable_declaration -> 'var' IDENTIFIER '=' . expression ';'    (rule 30)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 128
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 105

	variable_declaration -> 'var' IDENTIFIER ';' .      (rule 31)

	NUMBER         reduce using rule 31
	STRING         reduce using rule 31
	IDENTIFIER     reduce using rule 31
	'-'            reduce using rule 31
	'('            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'!'            reduce using rule 31
	'true'         reduce using rule 31
	'false'        reduce using rule 31
	'nil'          reduce using rule 31
	';'            reduce using rule 31
	'.'            reduce using rule 31
	'print'        reduce using rule 31
	'var'          reduce using rule 31
	'if'           reduce using rule 31
	'while'        reduce using rule 31
	'for'          reduce using rule 31
	'fun'          reduce using rule 31
	'return'       reduce using rule 31
	'class'        reduce using rule 31
	'this'         reduce using rule 31
	'super'        reduce using rule 31
	%eof           reduce using rule 31


State 106

	conditional_statement -> 'if' '(' expression . ')' statement    (rule 18)
	conditional_statement -> 'if' '(' expression . ')' statement 'else' statement    (rule 19)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 127
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 107

	while_statement -> 'while' '(' expression . ')' statement    (rule 20)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 126
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 108

	for_statement -> 'for' '(' variable_declaration . ';' ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration . ';' ';' expression ')' statement    (rule 26)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' expression ')' statement    (rule 28)

	';'            shift, and enter state 125


State 109

	variable_declaration -> IDENTIFIER . '=' expression ';'    (rule 32)

	'='            shift, and enter state 61


State 110

	for_statement -> 'for' '(' ';' . ';' ')' statement    (rule 21)
	for_statement -> 'for' '(' ';' . expression ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' . ';' expression ')' statement    (rule 24)
	for_statement -> 'for' '(' ';' . expression ';' expression ')' statement    (rule 27)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	';'            shift, and enter state 124
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 123
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 111

	function_declaration -> 'fun' IDENTIFIER '(' . parameters ')' block_statement    (rule 37)

	')'            reduce using rule 40
	','            reduce using rule 40

	parameters     goto state 122

State 112

	return_statement -> 'return' expression ';' .       (rule 29)

	NUMBER         reduce using rule 29
	STRING         reduce using rule 29
	IDENTIFIER     reduce using rule 29
	'-'            reduce using rule 29
	'('            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'!'            reduce using rule 29
	'true'         reduce using rule 29
	'false'        reduce using rule 29
	'nil'          reduce using rule 29
	'.'            reduce using rule 29
	'print'        reduce using rule 29
	'var'          reduce using rule 29
	'if'           reduce using rule 29
	'else'         reduce using rule 29
	'while'        reduce using rule 29
	'for'          reduce using rule 29
	'fun'          reduce using rule 29
	'return'       reduce using rule 29
	'class'        reduce using rule 29
	'this'         reduce using rule 29
	'super'        reduce using rule 29
	%eof           reduce using rule 29


State 113

	class_declaration -> 'class' IDENTIFIER '{' . methods '}'    (rule 33)

	IDENTIFIER     reduce using rule 35
	'}'            reduce using rule 35

	methods        goto state 121

State 114

	class_declaration -> 'class' IDENTIFIER '<' . IDENTIFIER '{' methods '}'    (rule 34)

	IDENTIFIER     shift, and enter state 120


State 115

	chaining -> 'this' '.' method_chain .               (rule 47)
	method_chain -> method_chain . '.' function_call    (rule 51)

	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	')'            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'!='           reduce using rule 47
	'=='           reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	'?'            reduce using rule 47
	':'            reduce using rule 47
	'.'            shift, and enter state 119


State 116

	chaining -> 'this' '.' IDENTIFIER .                 (rule 45)

	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	')'            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'!='           reduce using rule 45
	'=='           reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	'?'            reduce using rule 45
	':'            reduce using rule 45


State 117

	chaining -> 'super' '.' method_chain .              (rule 48)
	method_chain -> method_chain . '.' function_call    (rule 51)

	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	')'            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'!='           reduce using rule 48
	'=='           reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48
	';'            reduce using rule 48
	','            reduce using rule 48
	'?'            reduce using rule 48
	':'            reduce using rule 48
	'.'            shift, and enter state 119


State 118

	chaining -> 'super' '.' IDENTIFIER .                (rule 49)

	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	')'            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'!='           reduce using rule 49
	'=='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	'?'            reduce using rule 49
	':'            reduce using rule 49


State 119

	method_chain -> method_chain '.' . function_call    (rule 51)

	IDENTIFIER     shift, and enter state 150

	function_call  goto state 82

State 120

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER . '{' methods '}'    (rule 34)

	'{'            shift, and enter state 149


State 121

	class_declaration -> 'class' IDENTIFIER '{' methods . '}'    (rule 33)
	methods -> methods . method_declaration             (rule 36)

	IDENTIFIER     shift, and enter state 147
	'}'            shift, and enter state 148

	method_declarationgoto state 146

State 122

	function_declaration -> 'fun' IDENTIFIER '(' parameters . ')' block_statement    (rule 37)
	parameters -> parameters . ',' IDENTIFIER           (rule 39)

	')'            shift, and enter state 144
	','            shift, and enter state 145


State 123

	for_statement -> 'for' '(' ';' expression . ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' expression . ';' expression ')' statement    (rule 27)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 143
	'?'            shift, and enter state 77


State 124

	for_statement -> 'for' '(' ';' ';' . ')' statement    (rule 21)
	for_statement -> 'for' '(' ';' ';' . expression ')' statement    (rule 24)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            shift, and enter state 142
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 141
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 125

	for_statement -> 'for' '(' variable_declaration ';' . ';' ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' . ';' expression ')' statement    (rule 26)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' expression ')' statement    (rule 28)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	';'            shift, and enter state 140
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 139
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 126

	while_statement -> 'while' '(' expression ')' . statement    (rule 20)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 138
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 127

	conditional_statement -> 'if' '(' expression ')' . statement    (rule 18)
	conditional_statement -> 'if' '(' expression ')' . statement 'else' statement    (rule 19)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 137
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 128

	variable_declaration -> 'var' IDENTIFIER '=' expression . ';'    (rule 30)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 136
	'?'            shift, and enter state 77


State 129

	variable_declaration -> IDENTIFIER '=' expression ';' .    (rule 32)

	NUMBER         reduce using rule 32
	STRING         reduce using rule 32
	IDENTIFIER     reduce using rule 32
	'-'            reduce using rule 32
	'('            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'!'            reduce using rule 32
	'true'         reduce using rule 32
	'false'        reduce using rule 32
	'nil'          reduce using rule 32
	';'            reduce using rule 32
	'.'            reduce using rule 32
	'print'        reduce using rule 32
	'var'          reduce using rule 32
	'if'           reduce using rule 32
	'while'        reduce using rule 32
	'for'          reduce using rule 32
	'fun'          reduce using rule 32
	'return'       reduce using rule 32
	'class'        reduce using rule 32
	'this'         reduce using rule 32
	'super'        reduce using rule 32
	%eof           reduce using rule 32


State 130

	function_call -> IDENTIFIER '(' arguments ')' .     (rule 41)

	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'!='           reduce using rule 41
	'=='           reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41
	';'            reduce using rule 41
	','            reduce using rule 41
	'?'            reduce using rule 41
	':'            reduce using rule 41
	'.'            reduce using rule 41


State 131

	arguments -> arguments ',' . expression             (rule 53)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 135
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 132

	ternary -> expression '?' expression ':' . expression    (rule 84)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 134
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 133

	function_call -> function_call '(' arguments ')' .    (rule 42)

	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'!='           reduce using rule 42
	'=='           reduce using rule 42
	'and'          reduce using rule 42
	'or'           reduce using rule 42
	';'            reduce using rule 42
	','            reduce using rule 42
	'?'            reduce using rule 42
	':'            reduce using rule 42
	'.'            reduce using rule 42


State 134

	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)
	ternary -> expression '?' expression ':' expression .    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 84
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            reduce using rule 84
	','            reduce using rule 84
	'?'            fail
	':'            reduce using rule 84


State 135

	arguments -> arguments ',' expression .             (rule 53)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            reduce using rule 53
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	','            reduce using rule 53
	'?'            shift, and enter state 77


State 136

	variable_declaration -> 'var' IDENTIFIER '=' expression ';' .    (rule 30)

	NUMBER         reduce using rule 30
	STRING         reduce using rule 30
	IDENTIFIER     reduce using rule 30
	'-'            reduce using rule 30
	'('            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'!'            reduce using rule 30
	'true'         reduce using rule 30
	'false'        reduce using rule 30
	'nil'          reduce using rule 30
	';'            reduce using rule 30
	'.'            reduce using rule 30
	'print'        reduce using rule 30
	'var'          reduce using rule 30
	'if'           reduce using rule 30
	'while'        reduce using rule 30
	'for'          reduce using rule 30
	'fun'          reduce using rule 30
	'return'       reduce using rule 30
	'class'        reduce using rule 30
	'this'         reduce using rule 30
	'super'        reduce using rule 30
	%eof           reduce using rule 30


State 137

	conditional_statement -> 'if' '(' expression ')' statement .    (rule 18)
	conditional_statement -> 'if' '(' expression ')' statement . 'else' statement    (rule 19)

	NUMBER         reduce using rule 18
	STRING         reduce using rule 18
	IDENTIFIER     reduce using rule 18
	'-'            reduce using rule 18
	'('            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'!'            reduce using rule 18
	'true'         reduce using rule 18
	'false'        reduce using rule 18
	'nil'          reduce using rule 18
	'.'            reduce using rule 18
	'print'        reduce using rule 18
	'var'          reduce using rule 18
	'if'           reduce using rule 18
	'else'         shift, and enter state 162
			(reduce using rule 18)

	'while'        reduce using rule 18
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'return'       reduce using rule 18
	'class'        reduce using rule 18
	'this'         reduce using rule 18
	'super'        reduce using rule 18
	%eof           reduce using rule 18


State 138

	while_statement -> 'while' '(' expression ')' statement .    (rule 20)

	NUMBER         reduce using rule 20
	STRING         reduce using rule 20
	IDENTIFIER     reduce using rule 20
	'-'            reduce using rule 20
	'('            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'!'            reduce using rule 20
	'true'         reduce using rule 20
	'false'        reduce using rule 20
	'nil'          reduce using rule 20
	'.'            reduce using rule 20
	'print'        reduce using rule 20
	'var'          reduce using rule 20
	'if'           reduce using rule 20
	'else'         reduce using rule 20
	'while'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'return'       reduce using rule 20
	'class'        reduce using rule 20
	'this'         reduce using rule 20
	'super'        reduce using rule 20
	%eof           reduce using rule 20


State 139

	for_statement -> 'for' '(' variable_declaration ';' expression . ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' expression . ';' expression ')' statement    (rule 28)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	';'            shift, and enter state 161
	'?'            shift, and enter state 77


State 140

	for_statement -> 'for' '(' variable_declaration ';' ';' . ')' statement    (rule 22)
	for_statement -> 'for' '(' variable_declaration ';' ';' . expression ')' statement    (rule 26)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            shift, and enter state 160
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 159
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 141

	for_statement -> 'for' '(' ';' ';' expression . ')' statement    (rule 24)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 158
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 142

	for_statement -> 'for' '(' ';' ';' ')' . statement    (rule 21)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 157
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 143

	for_statement -> 'for' '(' ';' expression ';' . ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' expression ';' . expression ')' statement    (rule 27)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            shift, and enter state 156
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 155
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 144

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' . block_statement    (rule 37)

	'{'            shift, and enter state 30

	block_statementgoto state 154

State 145

	parameters -> parameters ',' . IDENTIFIER           (rule 39)

	IDENTIFIER     shift, and enter state 153


State 146

	methods -> methods method_declaration .             (rule 36)

	IDENTIFIER     reduce using rule 36
	'}'            reduce using rule 36


State 147

	method_declaration -> IDENTIFIER . '(' parameters ')' block_statement    (rule 38)

	'('            shift, and enter state 152


State 148

	class_declaration -> 'class' IDENTIFIER '{' methods '}' .    (rule 33)

	NUMBER         reduce using rule 33
	STRING         reduce using rule 33
	IDENTIFIER     reduce using rule 33
	'-'            reduce using rule 33
	'('            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'!'            reduce using rule 33
	'true'         reduce using rule 33
	'false'        reduce using rule 33
	'nil'          reduce using rule 33
	'.'            reduce using rule 33
	'print'        reduce using rule 33
	'var'          reduce using rule 33
	'if'           reduce using rule 33
	'while'        reduce using rule 33
	'for'          reduce using rule 33
	'fun'          reduce using rule 33
	'return'       reduce using rule 33
	'class'        reduce using rule 33
	'this'         reduce using rule 33
	'super'        reduce using rule 33
	%eof           reduce using rule 33


State 149

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' . methods '}'    (rule 34)

	IDENTIFIER     reduce using rule 35
	'}'            reduce using rule 35

	methods        goto state 151

State 150

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 41)

	'('            shift, and enter state 62


State 151

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods . '}'    (rule 34)
	methods -> methods . method_declaration             (rule 36)

	IDENTIFIER     shift, and enter state 147
	'}'            shift, and enter state 172

	method_declarationgoto state 146

State 152

	method_declaration -> IDENTIFIER '(' . parameters ')' block_statement    (rule 38)

	')'            reduce using rule 40
	','            reduce using rule 40

	parameters     goto state 171

State 153

	parameters -> parameters ',' IDENTIFIER .           (rule 39)

	')'            reduce using rule 39
	','            reduce using rule 39


State 154

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement .    (rule 37)

	NUMBER         reduce using rule 37
	STRING         reduce using rule 37
	IDENTIFIER     reduce using rule 37
	'-'            reduce using rule 37
	'('            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'!'            reduce using rule 37
	'true'         reduce using rule 37
	'false'        reduce using rule 37
	'nil'          reduce using rule 37
	'.'            reduce using rule 37
	'print'        reduce using rule 37
	'var'          reduce using rule 37
	'if'           reduce using rule 37
	'while'        reduce using rule 37
	'for'          reduce using rule 37
	'fun'          reduce using rule 37
	'return'       reduce using rule 37
	'class'        reduce using rule 37
	'this'         reduce using rule 37
	'super'        reduce using rule 37
	%eof           reduce using rule 37


State 155

	for_statement -> 'for' '(' ';' expression ';' expression . ')' statement    (rule 27)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 170
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 156

	for_statement -> 'for' '(' ';' expression ';' ')' . statement    (rule 23)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 169
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 157

	for_statement -> 'for' '(' ';' ';' ')' statement .    (rule 21)

	NUMBER         reduce using rule 21
	STRING         reduce using rule 21
	IDENTIFIER     reduce using rule 21
	'-'            reduce using rule 21
	'('            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'!'            reduce using rule 21
	'true'         reduce using rule 21
	'false'        reduce using rule 21
	'nil'          reduce using rule 21
	'.'            reduce using rule 21
	'print'        reduce using rule 21
	'var'          reduce using rule 21
	'if'           reduce using rule 21
	'else'         reduce using rule 21
	'while'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'return'       reduce using rule 21
	'class'        reduce using rule 21
	'this'         reduce using rule 21
	'super'        reduce using rule 21
	%eof           reduce using rule 21


State 158

	for_statement -> 'for' '(' ';' ';' expression ')' . statement    (rule 24)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 168
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 159

	for_statement -> 'for' '(' variable_declaration ';' ';' expression . ')' statement    (rule 26)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 167
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 160

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' . statement    (rule 22)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 166
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 161

	for_statement -> 'for' '(' variable_declaration ';' expression ';' . ')' statement    (rule 25)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' . expression ')' statement    (rule 28)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	')'            shift, and enter state 165
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 164
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 162

	conditional_statement -> 'if' '(' expression ')' statement 'else' . statement    (rule 19)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 163
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 163

	conditional_statement -> 'if' '(' expression ')' statement 'else' statement .    (rule 19)

	NUMBER         reduce using rule 19
	STRING         reduce using rule 19
	IDENTIFIER     reduce using rule 19
	'-'            reduce using rule 19
	'('            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'!'            reduce using rule 19
	'true'         reduce using rule 19
	'false'        reduce using rule 19
	'nil'          reduce using rule 19
	'.'            reduce using rule 19
	'print'        reduce using rule 19
	'var'          reduce using rule 19
	'if'           reduce using rule 19
	'else'         reduce using rule 19
	'while'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'return'       reduce using rule 19
	'class'        reduce using rule 19
	'this'         reduce using rule 19
	'super'        reduce using rule 19
	%eof           reduce using rule 19


State 164

	for_statement -> 'for' '(' variable_declaration ';' expression ';' expression . ')' statement    (rule 28)
	binary -> expression . '==' expression              (rule 72)
	binary -> expression . '!=' expression              (rule 73)
	binary -> expression . '+' expression               (rule 74)
	binary -> expression . '-' expression               (rule 75)
	binary -> expression . '*' expression               (rule 76)
	binary -> expression . '/' expression               (rule 77)
	binary -> expression . '>' expression               (rule 78)
	binary -> expression . '<' expression               (rule 79)
	binary -> expression . '>=' expression              (rule 80)
	binary -> expression . '<=' expression              (rule 81)
	binary -> expression . 'and' expression             (rule 82)
	binary -> expression . 'or' expression              (rule 83)
	ternary -> expression . '?' expression ':' expression    (rule 84)

	'+'            shift, and enter state 64
	'-'            shift, and enter state 65
	'*'            shift, and enter state 66
	'/'            shift, and enter state 67
	')'            shift, and enter state 177
	'<'            shift, and enter state 68
	'>'            shift, and enter state 69
	'<='           shift, and enter state 70
	'>='           shift, and enter state 71
	'!='           shift, and enter state 72
	'=='           shift, and enter state 73
	'and'          shift, and enter state 74
	'or'           shift, and enter state 75
	'?'            shift, and enter state 77


State 165

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' . statement    (rule 25)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 176
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 166

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement .    (rule 22)

	NUMBER         reduce using rule 22
	STRING         reduce using rule 22
	IDENTIFIER     reduce using rule 22
	'-'            reduce using rule 22
	'('            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'!'            reduce using rule 22
	'true'         reduce using rule 22
	'false'        reduce using rule 22
	'nil'          reduce using rule 22
	'.'            reduce using rule 22
	'print'        reduce using rule 22
	'var'          reduce using rule 22
	'if'           reduce using rule 22
	'else'         reduce using rule 22
	'while'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'return'       reduce using rule 22
	'class'        reduce using rule 22
	'this'         reduce using rule 22
	'super'        reduce using rule 22
	%eof           reduce using rule 22


State 167

	for_statement -> 'for' '(' variable_declaration ';' ';' expression ')' . statement    (rule 26)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 175
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 168

	for_statement -> 'for' '(' ';' ';' expression ')' statement .    (rule 24)

	NUMBER         reduce using rule 24
	STRING         reduce using rule 24
	IDENTIFIER     reduce using rule 24
	'-'            reduce using rule 24
	'('            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'!'            reduce using rule 24
	'true'         reduce using rule 24
	'false'        reduce using rule 24
	'nil'          reduce using rule 24
	'.'            reduce using rule 24
	'print'        reduce using rule 24
	'var'          reduce using rule 24
	'if'           reduce using rule 24
	'else'         reduce using rule 24
	'while'        reduce using rule 24
	'for'          reduce using rule 24
	'fun'          reduce using rule 24
	'return'       reduce using rule 24
	'class'        reduce using rule 24
	'this'         reduce using rule 24
	'super'        reduce using rule 24
	%eof           reduce using rule 24


State 169

	for_statement -> 'for' '(' ';' expression ';' ')' statement .    (rule 23)

	NUMBER         reduce using rule 23
	STRING         reduce using rule 23
	IDENTIFIER     reduce using rule 23
	'-'            reduce using rule 23
	'('            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'!'            reduce using rule 23
	'true'         reduce using rule 23
	'false'        reduce using rule 23
	'nil'          reduce using rule 23
	'.'            reduce using rule 23
	'print'        reduce using rule 23
	'var'          reduce using rule 23
	'if'           reduce using rule 23
	'else'         reduce using rule 23
	'while'        reduce using rule 23
	'for'          reduce using rule 23
	'fun'          reduce using rule 23
	'return'       reduce using rule 23
	'class'        reduce using rule 23
	'this'         reduce using rule 23
	'super'        reduce using rule 23
	%eof           reduce using rule 23


State 170

	for_statement -> 'for' '(' ';' expression ';' expression ')' . statement    (rule 27)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 174
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 171

	method_declaration -> IDENTIFIER '(' parameters . ')' block_statement    (rule 38)
	parameters -> parameters . ',' IDENTIFIER           (rule 39)

	')'            shift, and enter state 173
	','            shift, and enter state 145


State 172

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}' .    (rule 34)

	NUMBER         reduce using rule 34
	STRING         reduce using rule 34
	IDENTIFIER     reduce using rule 34
	'-'            reduce using rule 34
	'('            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'!'            reduce using rule 34
	'true'         reduce using rule 34
	'false'        reduce using rule 34
	'nil'          reduce using rule 34
	'.'            reduce using rule 34
	'print'        reduce using rule 34
	'var'          reduce using rule 34
	'if'           reduce using rule 34
	'while'        reduce using rule 34
	'for'          reduce using rule 34
	'fun'          reduce using rule 34
	'return'       reduce using rule 34
	'class'        reduce using rule 34
	'this'         reduce using rule 34
	'super'        reduce using rule 34
	%eof           reduce using rule 34


State 173

	method_declaration -> IDENTIFIER '(' parameters ')' . block_statement    (rule 38)

	'{'            shift, and enter state 30

	block_statementgoto state 179

State 174

	for_statement -> 'for' '(' ';' expression ';' expression ')' statement .    (rule 27)

	NUMBER         reduce using rule 27
	STRING         reduce using rule 27
	IDENTIFIER     reduce using rule 27
	'-'            reduce using rule 27
	'('            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'!'            reduce using rule 27
	'true'         reduce using rule 27
	'false'        reduce using rule 27
	'nil'          reduce using rule 27
	'.'            reduce using rule 27
	'print'        reduce using rule 27
	'var'          reduce using rule 27
	'if'           reduce using rule 27
	'else'         reduce using rule 27
	'while'        reduce using rule 27
	'for'          reduce using rule 27
	'fun'          reduce using rule 27
	'return'       reduce using rule 27
	'class'        reduce using rule 27
	'this'         reduce using rule 27
	'super'        reduce using rule 27
	%eof           reduce using rule 27


State 175

	for_statement -> 'for' '(' variable_declaration ';' ';' expression ')' statement .    (rule 26)

	NUMBER         reduce using rule 26
	STRING         reduce using rule 26
	IDENTIFIER     reduce using rule 26
	'-'            reduce using rule 26
	'('            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'!'            reduce using rule 26
	'true'         reduce using rule 26
	'false'        reduce using rule 26
	'nil'          reduce using rule 26
	'.'            reduce using rule 26
	'print'        reduce using rule 26
	'var'          reduce using rule 26
	'if'           reduce using rule 26
	'else'         reduce using rule 26
	'while'        reduce using rule 26
	'for'          reduce using rule 26
	'fun'          reduce using rule 26
	'return'       reduce using rule 26
	'class'        reduce using rule 26
	'this'         reduce using rule 26
	'super'        reduce using rule 26
	%eof           reduce using rule 26


State 176

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement .    (rule 25)

	NUMBER         reduce using rule 25
	STRING         reduce using rule 25
	IDENTIFIER     reduce using rule 25
	'-'            reduce using rule 25
	'('            reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'!'            reduce using rule 25
	'true'         reduce using rule 25
	'false'        reduce using rule 25
	'nil'          reduce using rule 25
	'.'            reduce using rule 25
	'print'        reduce using rule 25
	'var'          reduce using rule 25
	'if'           reduce using rule 25
	'else'         reduce using rule 25
	'while'        reduce using rule 25
	'for'          reduce using rule 25
	'fun'          reduce using rule 25
	'return'       reduce using rule 25
	'class'        reduce using rule 25
	'this'         reduce using rule 25
	'super'        reduce using rule 25
	%eof           reduce using rule 25


State 177

	for_statement -> 'for' '(' variable_declaration ';' expression ';' expression ')' . statement    (rule 28)

	NUMBER         shift, and enter state 25
	STRING         shift, and enter state 26
	IDENTIFIER     shift, and enter state 50
	'-'            shift, and enter state 28
	'('            shift, and enter state 29
	'{'            shift, and enter state 30
	'!'            shift, and enter state 31
	'true'         shift, and enter state 32
	'false'        shift, and enter state 33
	'nil'          shift, and enter state 34
	'.'            reduce using rule 52
	'print'        shift, and enter state 35
	'if'           shift, and enter state 37
	'while'        shift, and enter state 38
	'for'          shift, and enter state 39
	'return'       shift, and enter state 41
	'this'         shift, and enter state 43
	'super'        shift, and enter state 44

	statement      goto state 178
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	function_call  goto state 15
	chain          goto state 16
	chaining       goto state 17
	method_chain   goto state 18
	expression     goto state 19
	literal        goto state 20
	grouping       goto state 21
	unary          goto state 22
	binary         goto state 23
	ternary        goto state 24

State 178

	for_statement -> 'for' '(' variable_declaration ';' expression ';' expression ')' statement .    (rule 28)

	NUMBER         reduce using rule 28
	STRING         reduce using rule 28
	IDENTIFIER     reduce using rule 28
	'-'            reduce using rule 28
	'('            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'!'            reduce using rule 28
	'true'         reduce using rule 28
	'false'        reduce using rule 28
	'nil'          reduce using rule 28
	'.'            reduce using rule 28
	'print'        reduce using rule 28
	'var'          reduce using rule 28
	'if'           reduce using rule 28
	'else'         reduce using rule 28
	'while'        reduce using rule 28
	'for'          reduce using rule 28
	'fun'          reduce using rule 28
	'return'       reduce using rule 28
	'class'        reduce using rule 28
	'this'         reduce using rule 28
	'super'        reduce using rule 28
	%eof           reduce using rule 28


State 179

	method_declaration -> IDENTIFIER '(' parameters ')' block_statement .    (rule 38)

	IDENTIFIER     reduce using rule 38
	'}'            reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 40
Number of non-terminals: 29
Number of states: 180
