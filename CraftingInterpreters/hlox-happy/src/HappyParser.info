-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/HappyParser.y
-----------------------------------------------------------------------------

state 145 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	program -> declarations                            (1)
	declarations -> declarations declaration           (2)
	declarations -> declaration                        (3)
	declaration -> statement                           (4)
	declaration -> variable_declaration_assignment ';'   (5)
	declaration -> function_declaration                (6)
	declaration -> class_declaration                   (7)
	statement -> expression_statement                  (8)
	statement -> print_statement                       (9)
	statement -> block_statement                       (10)
	statement -> conditional_statement                 (11)
	statement -> while_statement                       (12)
	statement -> for_statement                         (13)
	statement -> return_statement                      (14)
	statement -> break_statement                       (15)
	statement -> continue_statement                    (16)
	expression_statement -> expression ';'             (17)
	print_statement -> 'print' expression ';'          (18)
	block_statement -> '{' declarations '}'            (19)
	conditional_statement -> 'if' '(' expression ')' statement   (20)
	conditional_statement -> 'if' '(' expression ')' statement 'else' statement   (21)
	while_statement -> 'while' '(' expression ')' statement   (22)
	for_statement -> 'for' '(' ';' ';' ')' statement   (23)
	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement   (24)
	for_statement -> 'for' '(' ';' expression ';' ')' statement   (25)
	for_statement -> 'for' '(' ';' ';' variable_assignment ')' statement   (26)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement   (27)
	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' statement   (28)
	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' statement   (29)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' statement   (30)
	return_statement -> 'return' expression ';'        (31)
	break_statement -> 'break' ';'                     (32)
	continue_statement -> 'continue' ';'               (33)
	variable_declaration_assignment -> variable_declaration   (34)
	variable_declaration_assignment -> variable_assignment   (35)
	variable_declaration -> 'var' IDENTIFIER '=' expression   (36)
	variable_declaration -> 'var' IDENTIFIER           (37)
	variable_assignment -> IDENTIFIER '=' expression   (38)
	class_declaration -> 'class' IDENTIFIER '{' methods '}'   (39)
	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}'   (40)
	methods ->                                         (41)
	methods -> methods method_declaration              (42)
	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement   (43)
	function_declaration -> 'fun' IDENTIFIER '(' ')' block_statement   (44)
	method_declaration -> IDENTIFIER '(' parameters ')' block_statement   (45)
	method_declaration -> IDENTIFIER '(' ')' block_statement   (46)
	parameters -> parameters ',' IDENTIFIER            (47)
	parameters -> IDENTIFIER                           (48)
	function_call -> IDENTIFIER '(' arguments ')'      (49)
	function_call -> function_call '(' arguments ')'   (50)
	chain -> chaining                                  (51)
	chaining -> IDENTIFIER '.' IDENTIFIER              (52)
	chaining -> 'this' '.' IDENTIFIER                  (53)
	chaining -> IDENTIFIER '.' method_chain            (54)
	chaining -> 'this' '.' method_chain                (55)
	chaining -> 'super' '.' method_chain               (56)
	chaining -> 'super' '.' IDENTIFIER                 (57)
	chaining -> method_chain '.' IDENTIFIER            (58)
	method_chain -> method_chain '.' function_call     (59)
	method_chain ->                                    (60)
	arguments -> arguments ',' expression              (61)
	arguments -> expression                            (62)
	expression -> literal                              (63)
	expression -> unary                                (64)
	expression -> binary                               (65)
	expression -> ternary                              (66)
	expression -> grouping                             (67)
	expression -> function_call                        (68)
	expression -> chain                                (69)
	expression -> 'this'                               (70)
	literal -> NUMBER                                  (71)
	literal -> STRING                                  (72)
	literal -> 'true'                                  (73)
	literal -> 'false'                                 (74)
	literal -> 'nil'                                   (75)
	literal -> IDENTIFIER                              (76)
	grouping -> '(' expression ')'                     (77)
	unary -> '-' expression                            (78)
	unary -> '!' expression                            (79)
	binary -> expression '==' expression               (80)
	binary -> expression '!=' expression               (81)
	binary -> expression '+' expression                (82)
	binary -> expression '-' expression                (83)
	binary -> expression '*' expression                (84)
	binary -> expression '/' expression                (85)
	binary -> expression '>' expression                (86)
	binary -> expression '<' expression                (87)
	binary -> expression '>=' expression               (88)
	binary -> expression '<=' expression               (89)
	binary -> expression 'and' expression              (90)
	binary -> expression 'or' expression               (91)
	ternary -> expression '?' expression ':' expression   (92)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	NUMBER         { L.NUMBER $$ }
	STRING         { L.STRING $$ }
	IDENTIFIER     { L.IDENTIFIER $$ }
	'='            { L.EQUAL }
	'+'            { L.PLUS }
	'-'            { L.MINUS }
	'*'            { L.STAR }
	'/'            { L.SLASH }
	'('            { L.LEFT_PAREN }
	')'            { L.RIGHT_PAREN }
	'{'            { L.LEFT_BRACE }
	'}'            { L.RIGHT_BRACE }
	'!'            { L.BANG }
	'<'            { L.LESS }
	'>'            { L.GREATER }
	'<='           { L.LESS_EQUAL }
	'>='           { L.GREATER_EQUAL }
	'!='           { L.BANG_EQUAL }
	'=='           { L.EQUAL_EQUAL }
	'and'          { L.AND }
	'or'           { L.OR }
	'true'         { L.TRUE }
	'false'        { L.FALSE }
	'nil'          { L.NIL }
	';'            { L.SEMICOLON }
	','            { L.COMMA }
	'?'            { L.QUESTION_MARK }
	':'            { L.COLON }
	'.'            { L.DOT }
	'print'        { L.PRINT }
	'var'          { L.VAR }
	'if'           { L.IF }
	'else'         { L.ELSE }
	'while'        { L.WHILE }
	'for'          { L.FOR }
	'fun'          { L.FUN }
	'return'       { L.RETURN }
	'class'        { L.CLASS }
	'this'         { L.THIS }
	'super'        { L.SUPER }
	'continue'     { L.CONTINUE }
	'break'        { L.BREAK }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	program         rule  1
	declarations    rules 2, 3
	declaration     rules 4, 5, 6, 7
	statement       rules 8, 9, 10, 11, 12, 13, 14, 15, 16
	expression_statement rule  17
	print_statement rule  18
	block_statement rule  19
	conditional_statement rules 20, 21
	while_statement rule  22
	for_statement   rules 23, 24, 25, 26, 27, 28, 29, 30
	return_statement rule  31
	break_statement rule  32
	continue_statement rule  33
	variable_declaration_assignment rules 34, 35
	variable_declaration rules 36, 37
	variable_assignment rule  38
	class_declaration rules 39, 40
	methods         rules 41, 42
	function_declaration rules 43, 44
	method_declaration rules 45, 46
	parameters      rules 47, 48
	function_call   rules 49, 50
	chain           rule  51
	chaining        rules 52, 53, 54, 55, 56, 57, 58
	method_chain    rules 59, 60
	arguments       rules 61, 62
	expression      rules 63, 64, 65, 66, 67, 68, 69, 70
	literal         rules 71, 72, 73, 74, 75, 76
	grouping        rule  77
	unary           rules 78, 79
	binary          rules 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
	ternary         rule  92

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . program                          (rule 0)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 31
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'var'          shift, and enter state 40
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'fun'          shift, and enter state 44
	'return'       shift, and enter state 45
	'class'        shift, and enter state 46
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	program        goto state 51
	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	variable_declaration_assignmentgoto state 14
	variable_declarationgoto state 15
	variable_assignmentgoto state 16
	class_declarationgoto state 17
	function_declarationgoto state 18
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 1

	program -> . declarations                           (rule 1)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 31
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'print'        shift, and enter state 39
	'var'          shift, and enter state 40
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'fun'          shift, and enter state 44
	'return'       shift, and enter state 45
	'class'        shift, and enter state 46
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	declarations   goto state 2
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	variable_declaration_assignmentgoto state 14
	variable_declarationgoto state 15
	variable_assignmentgoto state 16
	class_declarationgoto state 17
	function_declarationgoto state 18
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 2

	program -> declarations .                           (rule 1)
	declarations -> declarations . declaration          (rule 2)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 31
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'var'          shift, and enter state 40
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'fun'          shift, and enter state 44
	'return'       shift, and enter state 45
	'class'        shift, and enter state 46
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50
	%eof           reduce using rule 1

	declaration    goto state 89
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	variable_declaration_assignmentgoto state 14
	variable_declarationgoto state 15
	variable_assignmentgoto state 16
	class_declarationgoto state 17
	function_declarationgoto state 18
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 3

	declarations -> declaration .                       (rule 3)

	NUMBER         reduce using rule 3
	STRING         reduce using rule 3
	IDENTIFIER     reduce using rule 3
	'-'            reduce using rule 3
	'('            reduce using rule 3
	'{'            reduce using rule 3
	'}'            reduce using rule 3
	'!'            reduce using rule 3
	'true'         reduce using rule 3
	'false'        reduce using rule 3
	'nil'          reduce using rule 3
	'.'            reduce using rule 3
	'print'        reduce using rule 3
	'var'          reduce using rule 3
	'if'           reduce using rule 3
	'while'        reduce using rule 3
	'for'          reduce using rule 3
	'fun'          reduce using rule 3
	'return'       reduce using rule 3
	'class'        reduce using rule 3
	'this'         reduce using rule 3
	'super'        reduce using rule 3
	'continue'     reduce using rule 3
	'break'        reduce using rule 3
	%eof           reduce using rule 3


State 4

	declaration -> statement .                          (rule 4)

	NUMBER         reduce using rule 4
	STRING         reduce using rule 4
	IDENTIFIER     reduce using rule 4
	'-'            reduce using rule 4
	'('            reduce using rule 4
	'{'            reduce using rule 4
	'}'            reduce using rule 4
	'!'            reduce using rule 4
	'true'         reduce using rule 4
	'false'        reduce using rule 4
	'nil'          reduce using rule 4
	'.'            reduce using rule 4
	'print'        reduce using rule 4
	'var'          reduce using rule 4
	'if'           reduce using rule 4
	'while'        reduce using rule 4
	'for'          reduce using rule 4
	'fun'          reduce using rule 4
	'return'       reduce using rule 4
	'class'        reduce using rule 4
	'this'         reduce using rule 4
	'super'        reduce using rule 4
	'continue'     reduce using rule 4
	'break'        reduce using rule 4
	%eof           reduce using rule 4


State 5

	statement -> expression_statement .                 (rule 8)

	NUMBER         reduce using rule 8
	STRING         reduce using rule 8
	IDENTIFIER     reduce using rule 8
	'-'            reduce using rule 8
	'('            reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	'!'            reduce using rule 8
	'true'         reduce using rule 8
	'false'        reduce using rule 8
	'nil'          reduce using rule 8
	'.'            reduce using rule 8
	'print'        reduce using rule 8
	'var'          reduce using rule 8
	'if'           reduce using rule 8
	'else'         reduce using rule 8
	'while'        reduce using rule 8
	'for'          reduce using rule 8
	'fun'          reduce using rule 8
	'return'       reduce using rule 8
	'class'        reduce using rule 8
	'this'         reduce using rule 8
	'super'        reduce using rule 8
	'continue'     reduce using rule 8
	'break'        reduce using rule 8
	%eof           reduce using rule 8


State 6

	statement -> print_statement .                      (rule 9)

	NUMBER         reduce using rule 9
	STRING         reduce using rule 9
	IDENTIFIER     reduce using rule 9
	'-'            reduce using rule 9
	'('            reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	'!'            reduce using rule 9
	'true'         reduce using rule 9
	'false'        reduce using rule 9
	'nil'          reduce using rule 9
	'.'            reduce using rule 9
	'print'        reduce using rule 9
	'var'          reduce using rule 9
	'if'           reduce using rule 9
	'else'         reduce using rule 9
	'while'        reduce using rule 9
	'for'          reduce using rule 9
	'fun'          reduce using rule 9
	'return'       reduce using rule 9
	'class'        reduce using rule 9
	'this'         reduce using rule 9
	'super'        reduce using rule 9
	'continue'     reduce using rule 9
	'break'        reduce using rule 9
	%eof           reduce using rule 9


State 7

	statement -> block_statement .                      (rule 10)

	NUMBER         reduce using rule 10
	STRING         reduce using rule 10
	IDENTIFIER     reduce using rule 10
	'-'            reduce using rule 10
	'('            reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	'!'            reduce using rule 10
	'true'         reduce using rule 10
	'false'        reduce using rule 10
	'nil'          reduce using rule 10
	'.'            reduce using rule 10
	'print'        reduce using rule 10
	'var'          reduce using rule 10
	'if'           reduce using rule 10
	'else'         reduce using rule 10
	'while'        reduce using rule 10
	'for'          reduce using rule 10
	'fun'          reduce using rule 10
	'return'       reduce using rule 10
	'class'        reduce using rule 10
	'this'         reduce using rule 10
	'super'        reduce using rule 10
	'continue'     reduce using rule 10
	'break'        reduce using rule 10
	%eof           reduce using rule 10


State 8

	statement -> conditional_statement .                (rule 11)

	NUMBER         reduce using rule 11
	STRING         reduce using rule 11
	IDENTIFIER     reduce using rule 11
	'-'            reduce using rule 11
	'('            reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	'!'            reduce using rule 11
	'true'         reduce using rule 11
	'false'        reduce using rule 11
	'nil'          reduce using rule 11
	'.'            reduce using rule 11
	'print'        reduce using rule 11
	'var'          reduce using rule 11
	'if'           reduce using rule 11
	'else'         reduce using rule 11
	'while'        reduce using rule 11
	'for'          reduce using rule 11
	'fun'          reduce using rule 11
	'return'       reduce using rule 11
	'class'        reduce using rule 11
	'this'         reduce using rule 11
	'super'        reduce using rule 11
	'continue'     reduce using rule 11
	'break'        reduce using rule 11
	%eof           reduce using rule 11


State 9

	statement -> while_statement .                      (rule 12)

	NUMBER         reduce using rule 12
	STRING         reduce using rule 12
	IDENTIFIER     reduce using rule 12
	'-'            reduce using rule 12
	'('            reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	'!'            reduce using rule 12
	'true'         reduce using rule 12
	'false'        reduce using rule 12
	'nil'          reduce using rule 12
	'.'            reduce using rule 12
	'print'        reduce using rule 12
	'var'          reduce using rule 12
	'if'           reduce using rule 12
	'else'         reduce using rule 12
	'while'        reduce using rule 12
	'for'          reduce using rule 12
	'fun'          reduce using rule 12
	'return'       reduce using rule 12
	'class'        reduce using rule 12
	'this'         reduce using rule 12
	'super'        reduce using rule 12
	'continue'     reduce using rule 12
	'break'        reduce using rule 12
	%eof           reduce using rule 12


State 10

	statement -> for_statement .                        (rule 13)

	NUMBER         reduce using rule 13
	STRING         reduce using rule 13
	IDENTIFIER     reduce using rule 13
	'-'            reduce using rule 13
	'('            reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	'!'            reduce using rule 13
	'true'         reduce using rule 13
	'false'        reduce using rule 13
	'nil'          reduce using rule 13
	'.'            reduce using rule 13
	'print'        reduce using rule 13
	'var'          reduce using rule 13
	'if'           reduce using rule 13
	'else'         reduce using rule 13
	'while'        reduce using rule 13
	'for'          reduce using rule 13
	'fun'          reduce using rule 13
	'return'       reduce using rule 13
	'class'        reduce using rule 13
	'this'         reduce using rule 13
	'super'        reduce using rule 13
	'continue'     reduce using rule 13
	'break'        reduce using rule 13
	%eof           reduce using rule 13


State 11

	statement -> return_statement .                     (rule 14)

	NUMBER         reduce using rule 14
	STRING         reduce using rule 14
	IDENTIFIER     reduce using rule 14
	'-'            reduce using rule 14
	'('            reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	'!'            reduce using rule 14
	'true'         reduce using rule 14
	'false'        reduce using rule 14
	'nil'          reduce using rule 14
	'.'            reduce using rule 14
	'print'        reduce using rule 14
	'var'          reduce using rule 14
	'if'           reduce using rule 14
	'else'         reduce using rule 14
	'while'        reduce using rule 14
	'for'          reduce using rule 14
	'fun'          reduce using rule 14
	'return'       reduce using rule 14
	'class'        reduce using rule 14
	'this'         reduce using rule 14
	'super'        reduce using rule 14
	'continue'     reduce using rule 14
	'break'        reduce using rule 14
	%eof           reduce using rule 14


State 12

	statement -> break_statement .                      (rule 15)

	NUMBER         reduce using rule 15
	STRING         reduce using rule 15
	IDENTIFIER     reduce using rule 15
	'-'            reduce using rule 15
	'('            reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	'!'            reduce using rule 15
	'true'         reduce using rule 15
	'false'        reduce using rule 15
	'nil'          reduce using rule 15
	'.'            reduce using rule 15
	'print'        reduce using rule 15
	'var'          reduce using rule 15
	'if'           reduce using rule 15
	'else'         reduce using rule 15
	'while'        reduce using rule 15
	'for'          reduce using rule 15
	'fun'          reduce using rule 15
	'return'       reduce using rule 15
	'class'        reduce using rule 15
	'this'         reduce using rule 15
	'super'        reduce using rule 15
	'continue'     reduce using rule 15
	'break'        reduce using rule 15
	%eof           reduce using rule 15


State 13

	statement -> continue_statement .                   (rule 16)

	NUMBER         reduce using rule 16
	STRING         reduce using rule 16
	IDENTIFIER     reduce using rule 16
	'-'            reduce using rule 16
	'('            reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	'!'            reduce using rule 16
	'true'         reduce using rule 16
	'false'        reduce using rule 16
	'nil'          reduce using rule 16
	'.'            reduce using rule 16
	'print'        reduce using rule 16
	'var'          reduce using rule 16
	'if'           reduce using rule 16
	'else'         reduce using rule 16
	'while'        reduce using rule 16
	'for'          reduce using rule 16
	'fun'          reduce using rule 16
	'return'       reduce using rule 16
	'class'        reduce using rule 16
	'this'         reduce using rule 16
	'super'        reduce using rule 16
	'continue'     reduce using rule 16
	'break'        reduce using rule 16
	%eof           reduce using rule 16


State 14

	declaration -> variable_declaration_assignment . ';'    (rule 5)

	';'            shift, and enter state 88


State 15

	variable_declaration_assignment -> variable_declaration .    (rule 34)

	';'            reduce using rule 34


State 16

	variable_declaration_assignment -> variable_assignment .    (rule 35)

	';'            reduce using rule 35


State 17

	declaration -> class_declaration .                  (rule 7)

	NUMBER         reduce using rule 7
	STRING         reduce using rule 7
	IDENTIFIER     reduce using rule 7
	'-'            reduce using rule 7
	'('            reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	'!'            reduce using rule 7
	'true'         reduce using rule 7
	'false'        reduce using rule 7
	'nil'          reduce using rule 7
	'.'            reduce using rule 7
	'print'        reduce using rule 7
	'var'          reduce using rule 7
	'if'           reduce using rule 7
	'while'        reduce using rule 7
	'for'          reduce using rule 7
	'fun'          reduce using rule 7
	'return'       reduce using rule 7
	'class'        reduce using rule 7
	'this'         reduce using rule 7
	'super'        reduce using rule 7
	'continue'     reduce using rule 7
	'break'        reduce using rule 7
	%eof           reduce using rule 7


State 18

	declaration -> function_declaration .               (rule 6)

	NUMBER         reduce using rule 6
	STRING         reduce using rule 6
	IDENTIFIER     reduce using rule 6
	'-'            reduce using rule 6
	'('            reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	'!'            reduce using rule 6
	'true'         reduce using rule 6
	'false'        reduce using rule 6
	'nil'          reduce using rule 6
	'.'            reduce using rule 6
	'print'        reduce using rule 6
	'var'          reduce using rule 6
	'if'           reduce using rule 6
	'while'        reduce using rule 6
	'for'          reduce using rule 6
	'fun'          reduce using rule 6
	'return'       reduce using rule 6
	'class'        reduce using rule 6
	'this'         reduce using rule 6
	'super'        reduce using rule 6
	'continue'     reduce using rule 6
	'break'        reduce using rule 6
	%eof           reduce using rule 6


State 19

	function_call -> function_call . '(' arguments ')'    (rule 50)
	expression -> function_call .                       (rule 68)

	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'('            shift, and enter state 87
	')'            reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'!='           reduce using rule 68
	'=='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'?'            reduce using rule 68
	':'            reduce using rule 68


State 20

	expression -> chain .                               (rule 69)

	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	')'            reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'<='           reduce using rule 69
	'>='           reduce using rule 69
	'!='           reduce using rule 69
	'=='           reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69
	'?'            reduce using rule 69
	':'            reduce using rule 69


State 21

	chain -> chaining .                                 (rule 51)

	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	')'            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'!='           reduce using rule 51
	'=='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	'?'            reduce using rule 51
	':'            reduce using rule 51


State 22

	chaining -> method_chain . '.' IDENTIFIER           (rule 58)
	method_chain -> method_chain . '.' function_call    (rule 59)

	'.'            shift, and enter state 86


State 23

	expression_statement -> expression . ';'            (rule 17)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            shift, and enter state 84
	'?'            shift, and enter state 85


State 24

	expression -> literal .                             (rule 63)

	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	')'            reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'<='           reduce using rule 63
	'>='           reduce using rule 63
	'!='           reduce using rule 63
	'=='           reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	'?'            reduce using rule 63
	':'            reduce using rule 63


State 25

	expression -> grouping .                            (rule 67)

	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'<='           reduce using rule 67
	'>='           reduce using rule 67
	'!='           reduce using rule 67
	'=='           reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67
	'?'            reduce using rule 67
	':'            reduce using rule 67


State 26

	expression -> unary .                               (rule 64)

	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	')'            reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'!='           reduce using rule 64
	'=='           reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64
	'?'            reduce using rule 64
	':'            reduce using rule 64


State 27

	expression -> binary .                              (rule 65)

	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'<='           reduce using rule 65
	'>='           reduce using rule 65
	'!='           reduce using rule 65
	'=='           reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65
	'?'            reduce using rule 65
	':'            reduce using rule 65


State 28

	expression -> ternary .                             (rule 66)

	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'<='           reduce using rule 66
	'>='           reduce using rule 66
	'!='           reduce using rule 66
	'=='           reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66
	'?'            reduce using rule 66
	':'            reduce using rule 66


State 29

	literal -> NUMBER .                                 (rule 71)

	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	')'            reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'!='           reduce using rule 71
	'=='           reduce using rule 71
	'and'          reduce using rule 71
	'or'           reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'?'            reduce using rule 71
	':'            reduce using rule 71


State 30

	literal -> STRING .                                 (rule 72)

	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	')'            reduce using rule 72
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'!='           reduce using rule 72
	'=='           reduce using rule 72
	'and'          reduce using rule 72
	'or'           reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'?'            reduce using rule 72
	':'            reduce using rule 72


State 31

	variable_assignment -> IDENTIFIER . '=' expression    (rule 38)
	function_call -> IDENTIFIER . '(' arguments ')'     (rule 49)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 52)
	chaining -> IDENTIFIER . '.' method_chain           (rule 54)
	literal -> IDENTIFIER .                             (rule 76)

	'='            shift, and enter state 69
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'('            shift, and enter state 70
	'<'            reduce using rule 76
	'>'            reduce using rule 76
	'<='           reduce using rule 76
	'>='           reduce using rule 76
	'!='           reduce using rule 76
	'=='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76
	';'            reduce using rule 76
	'?'            reduce using rule 76
	'.'            shift, and enter state 71


State 32

	unary -> '-' . expression                           (rule 78)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 68
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 33

	grouping -> '(' . expression ')'                    (rule 77)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 67
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 34

	block_statement -> '{' . declarations '}'           (rule 19)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 31
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'var'          shift, and enter state 40
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'fun'          shift, and enter state 44
	'return'       shift, and enter state 45
	'class'        shift, and enter state 46
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	declarations   goto state 66
	declaration    goto state 3
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	variable_declaration_assignmentgoto state 14
	variable_declarationgoto state 15
	variable_assignmentgoto state 16
	class_declarationgoto state 17
	function_declarationgoto state 18
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 35

	unary -> '!' . expression                           (rule 79)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 65
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 36

	literal -> 'true' .                                 (rule 73)

	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	')'            reduce using rule 73
	'<'            reduce using rule 73
	'>'            reduce using rule 73
	'<='           reduce using rule 73
	'>='           reduce using rule 73
	'!='           reduce using rule 73
	'=='           reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'?'            reduce using rule 73
	':'            reduce using rule 73


State 37

	literal -> 'false' .                                (rule 74)

	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	')'            reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'<='           reduce using rule 74
	'>='           reduce using rule 74
	'!='           reduce using rule 74
	'=='           reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'?'            reduce using rule 74
	':'            reduce using rule 74


State 38

	literal -> 'nil' .                                  (rule 75)

	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	')'            reduce using rule 75
	'<'            reduce using rule 75
	'>'            reduce using rule 75
	'<='           reduce using rule 75
	'>='           reduce using rule 75
	'!='           reduce using rule 75
	'=='           reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'?'            reduce using rule 75
	':'            reduce using rule 75


State 39

	print_statement -> 'print' . expression ';'         (rule 18)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 64
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 40

	variable_declaration -> 'var' . IDENTIFIER '=' expression    (rule 36)
	variable_declaration -> 'var' . IDENTIFIER          (rule 37)

	IDENTIFIER     shift, and enter state 63


State 41

	conditional_statement -> 'if' . '(' expression ')' statement    (rule 20)
	conditional_statement -> 'if' . '(' expression ')' statement 'else' statement    (rule 21)

	'('            shift, and enter state 62


State 42

	while_statement -> 'while' . '(' expression ')' statement    (rule 22)

	'('            shift, and enter state 61


State 43

	for_statement -> 'for' . '(' ';' ';' ')' statement    (rule 23)
	for_statement -> 'for' . '(' variable_declaration ';' ';' ')' statement    (rule 24)
	for_statement -> 'for' . '(' ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' . '(' ';' ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' ')' statement    (rule 27)
	for_statement -> 'for' . '(' variable_declaration ';' ';' variable_assignment ')' statement    (rule 28)
	for_statement -> 'for' . '(' ';' expression ';' variable_assignment ')' statement    (rule 29)
	for_statement -> 'for' . '(' variable_declaration ';' expression ';' variable_assignment ')' statement    (rule 30)

	'('            shift, and enter state 60


State 44

	function_declaration -> 'fun' . IDENTIFIER '(' parameters ')' block_statement    (rule 43)
	function_declaration -> 'fun' . IDENTIFIER '(' ')' block_statement    (rule 44)

	IDENTIFIER     shift, and enter state 59


State 45

	return_statement -> 'return' . expression ';'       (rule 31)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 57
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 46

	class_declaration -> 'class' . IDENTIFIER '{' methods '}'    (rule 39)
	class_declaration -> 'class' . IDENTIFIER '<' IDENTIFIER '{' methods '}'    (rule 40)

	IDENTIFIER     shift, and enter state 56


State 47

	chaining -> 'this' . '.' IDENTIFIER                 (rule 53)
	chaining -> 'this' . '.' method_chain               (rule 55)
	expression -> 'this' .                              (rule 70)

	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'!='           reduce using rule 70
	'=='           reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'?'            reduce using rule 70
	':'            reduce using rule 70
	'.'            shift, and enter state 55


State 48

	chaining -> 'super' . '.' method_chain              (rule 56)
	chaining -> 'super' . '.' IDENTIFIER                (rule 57)

	'.'            shift, and enter state 54


State 49

	continue_statement -> 'continue' . ';'              (rule 33)

	';'            shift, and enter state 53


State 50

	break_statement -> 'break' . ';'                    (rule 32)

	';'            shift, and enter state 52


State 51

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 52

	break_statement -> 'break' ';' .                    (rule 32)

	NUMBER         reduce using rule 32
	STRING         reduce using rule 32
	IDENTIFIER     reduce using rule 32
	'-'            reduce using rule 32
	'('            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'!'            reduce using rule 32
	'true'         reduce using rule 32
	'false'        reduce using rule 32
	'nil'          reduce using rule 32
	'.'            reduce using rule 32
	'print'        reduce using rule 32
	'var'          reduce using rule 32
	'if'           reduce using rule 32
	'else'         reduce using rule 32
	'while'        reduce using rule 32
	'for'          reduce using rule 32
	'fun'          reduce using rule 32
	'return'       reduce using rule 32
	'class'        reduce using rule 32
	'this'         reduce using rule 32
	'super'        reduce using rule 32
	'continue'     reduce using rule 32
	'break'        reduce using rule 32
	%eof           reduce using rule 32


State 53

	continue_statement -> 'continue' ';' .              (rule 33)

	NUMBER         reduce using rule 33
	STRING         reduce using rule 33
	IDENTIFIER     reduce using rule 33
	'-'            reduce using rule 33
	'('            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'!'            reduce using rule 33
	'true'         reduce using rule 33
	'false'        reduce using rule 33
	'nil'          reduce using rule 33
	'.'            reduce using rule 33
	'print'        reduce using rule 33
	'var'          reduce using rule 33
	'if'           reduce using rule 33
	'else'         reduce using rule 33
	'while'        reduce using rule 33
	'for'          reduce using rule 33
	'fun'          reduce using rule 33
	'return'       reduce using rule 33
	'class'        reduce using rule 33
	'this'         reduce using rule 33
	'super'        reduce using rule 33
	'continue'     reduce using rule 33
	'break'        reduce using rule 33
	%eof           reduce using rule 33


State 54

	chaining -> 'super' '.' . method_chain              (rule 56)
	chaining -> 'super' '.' . IDENTIFIER                (rule 57)

	IDENTIFIER     shift, and enter state 126
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	')'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'!='           reduce using rule 60
	'=='           reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'?'            reduce using rule 60
	':'            reduce using rule 60
	'.'            reduce using rule 60

	method_chain   goto state 125

State 55

	chaining -> 'this' '.' . IDENTIFIER                 (rule 53)
	chaining -> 'this' '.' . method_chain               (rule 55)

	IDENTIFIER     shift, and enter state 124
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	')'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'!='           reduce using rule 60
	'=='           reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'?'            reduce using rule 60
	':'            reduce using rule 60
	'.'            reduce using rule 60

	method_chain   goto state 123

State 56

	class_declaration -> 'class' IDENTIFIER . '{' methods '}'    (rule 39)
	class_declaration -> 'class' IDENTIFIER . '<' IDENTIFIER '{' methods '}'    (rule 40)

	'{'            shift, and enter state 121
	'<'            shift, and enter state 122


State 57

	return_statement -> 'return' expression . ';'       (rule 31)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            shift, and enter state 120
	'?'            shift, and enter state 85


State 58

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 49)
	chaining -> IDENTIFIER . '.' IDENTIFIER             (rule 52)
	chaining -> IDENTIFIER . '.' method_chain           (rule 54)
	literal -> IDENTIFIER .                             (rule 76)

	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	'('            shift, and enter state 70
	')'            reduce using rule 76
	'<'            reduce using rule 76
	'>'            reduce using rule 76
	'<='           reduce using rule 76
	'>='           reduce using rule 76
	'!='           reduce using rule 76
	'=='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'?'            reduce using rule 76
	':'            reduce using rule 76
	'.'            shift, and enter state 71


State 59

	function_declaration -> 'fun' IDENTIFIER . '(' parameters ')' block_statement    (rule 43)
	function_declaration -> 'fun' IDENTIFIER . '(' ')' block_statement    (rule 44)

	'('            shift, and enter state 119


State 60

	for_statement -> 'for' '(' . ';' ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' . variable_declaration ';' ';' ')' statement    (rule 24)
	for_statement -> 'for' '(' . ';' expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' . ';' ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' ')' statement    (rule 27)
	for_statement -> 'for' '(' . variable_declaration ';' ';' variable_assignment ')' statement    (rule 28)
	for_statement -> 'for' '(' . ';' expression ';' variable_assignment ')' statement    (rule 29)
	for_statement -> 'for' '(' . variable_declaration ';' expression ';' variable_assignment ')' statement    (rule 30)

	';'            shift, and enter state 118
	'var'          shift, and enter state 40

	variable_declarationgoto state 117

State 61

	while_statement -> 'while' '(' . expression ')' statement    (rule 22)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 116
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 62

	conditional_statement -> 'if' '(' . expression ')' statement    (rule 20)
	conditional_statement -> 'if' '(' . expression ')' statement 'else' statement    (rule 21)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 115
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 63

	variable_declaration -> 'var' IDENTIFIER . '=' expression    (rule 36)
	variable_declaration -> 'var' IDENTIFIER .          (rule 37)

	'='            shift, and enter state 114
	';'            reduce using rule 37


State 64

	print_statement -> 'print' expression . ';'         (rule 18)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            shift, and enter state 113
	'?'            shift, and enter state 85


State 65

	unary -> '!' expression .                           (rule 79)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'*'            reduce using rule 79
	'/'            reduce using rule 79
	')'            reduce using rule 79
	'<'            reduce using rule 79
	'>'            reduce using rule 79
	'<='           reduce using rule 79
	'>='           reduce using rule 79
	'!='           reduce using rule 79
	'=='           reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'?'            reduce using rule 79
	':'            reduce using rule 79


State 66

	declarations -> declarations . declaration          (rule 2)
	block_statement -> '{' declarations . '}'           (rule 19)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 31
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'}'            shift, and enter state 112
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'var'          shift, and enter state 40
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'fun'          shift, and enter state 44
	'return'       shift, and enter state 45
	'class'        shift, and enter state 46
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	declaration    goto state 89
	statement      goto state 4
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	variable_declaration_assignmentgoto state 14
	variable_declarationgoto state 15
	variable_assignmentgoto state 16
	class_declarationgoto state 17
	function_declarationgoto state 18
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 67

	grouping -> '(' expression . ')'                    (rule 77)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            shift, and enter state 111
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	'?'            shift, and enter state 85


State 68

	unary -> '-' expression .                           (rule 78)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            reduce using rule 78
	'/'            reduce using rule 78
	')'            reduce using rule 78
	'<'            reduce using rule 78
	'>'            reduce using rule 78
	'<='           reduce using rule 78
	'>='           reduce using rule 78
	'!='           reduce using rule 78
	'=='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'?'            reduce using rule 78
	':'            reduce using rule 78


State 69

	variable_assignment -> IDENTIFIER '=' . expression    (rule 38)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 110
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 70

	function_call -> IDENTIFIER '(' . arguments ')'     (rule 49)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	arguments      goto state 109
	expression     goto state 91
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 71

	chaining -> IDENTIFIER '.' . IDENTIFIER             (rule 52)
	chaining -> IDENTIFIER '.' . method_chain           (rule 54)

	IDENTIFIER     shift, and enter state 108
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	')'            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'!='           reduce using rule 60
	'=='           reduce using rule 60
	'and'          reduce using rule 60
	'or'           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	'?'            reduce using rule 60
	':'            reduce using rule 60
	'.'            reduce using rule 60

	method_chain   goto state 107

State 72

	binary -> expression '+' . expression               (rule 82)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 106
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 73

	binary -> expression '-' . expression               (rule 83)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 105
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 74

	binary -> expression '*' . expression               (rule 84)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 104
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 75

	binary -> expression '/' . expression               (rule 85)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 103
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 76

	binary -> expression '<' . expression               (rule 87)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 102
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 77

	binary -> expression '>' . expression               (rule 86)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 101
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 78

	binary -> expression '<=' . expression              (rule 89)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 100
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 79

	binary -> expression '>=' . expression              (rule 88)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 99
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 80

	binary -> expression '!=' . expression              (rule 81)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 98
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 81

	binary -> expression '==' . expression              (rule 80)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 97
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 82

	binary -> expression 'and' . expression             (rule 90)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 96
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 83

	binary -> expression 'or' . expression              (rule 91)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 95
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 84

	expression_statement -> expression ';' .            (rule 17)

	NUMBER         reduce using rule 17
	STRING         reduce using rule 17
	IDENTIFIER     reduce using rule 17
	'-'            reduce using rule 17
	'('            reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	'!'            reduce using rule 17
	'true'         reduce using rule 17
	'false'        reduce using rule 17
	'nil'          reduce using rule 17
	'.'            reduce using rule 17
	'print'        reduce using rule 17
	'var'          reduce using rule 17
	'if'           reduce using rule 17
	'else'         reduce using rule 17
	'while'        reduce using rule 17
	'for'          reduce using rule 17
	'fun'          reduce using rule 17
	'return'       reduce using rule 17
	'class'        reduce using rule 17
	'this'         reduce using rule 17
	'super'        reduce using rule 17
	'continue'     reduce using rule 17
	'break'        reduce using rule 17
	%eof           reduce using rule 17


State 85

	ternary -> expression '?' . expression ':' expression    (rule 92)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 94
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 86

	chaining -> method_chain '.' . IDENTIFIER           (rule 58)
	method_chain -> method_chain '.' . function_call    (rule 59)

	IDENTIFIER     shift, and enter state 93

	function_call  goto state 92

State 87

	function_call -> function_call '(' . arguments ')'    (rule 50)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	arguments      goto state 90
	expression     goto state 91
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 88

	declaration -> variable_declaration_assignment ';' .    (rule 5)

	NUMBER         reduce using rule 5
	STRING         reduce using rule 5
	IDENTIFIER     reduce using rule 5
	'-'            reduce using rule 5
	'('            reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	'!'            reduce using rule 5
	'true'         reduce using rule 5
	'false'        reduce using rule 5
	'nil'          reduce using rule 5
	'.'            reduce using rule 5
	'print'        reduce using rule 5
	'var'          reduce using rule 5
	'if'           reduce using rule 5
	'while'        reduce using rule 5
	'for'          reduce using rule 5
	'fun'          reduce using rule 5
	'return'       reduce using rule 5
	'class'        reduce using rule 5
	'this'         reduce using rule 5
	'super'        reduce using rule 5
	'continue'     reduce using rule 5
	'break'        reduce using rule 5
	%eof           reduce using rule 5


State 89

	declarations -> declarations declaration .          (rule 2)

	NUMBER         reduce using rule 2
	STRING         reduce using rule 2
	IDENTIFIER     reduce using rule 2
	'-'            reduce using rule 2
	'('            reduce using rule 2
	'{'            reduce using rule 2
	'}'            reduce using rule 2
	'!'            reduce using rule 2
	'true'         reduce using rule 2
	'false'        reduce using rule 2
	'nil'          reduce using rule 2
	'.'            reduce using rule 2
	'print'        reduce using rule 2
	'var'          reduce using rule 2
	'if'           reduce using rule 2
	'while'        reduce using rule 2
	'for'          reduce using rule 2
	'fun'          reduce using rule 2
	'return'       reduce using rule 2
	'class'        reduce using rule 2
	'this'         reduce using rule 2
	'super'        reduce using rule 2
	'continue'     reduce using rule 2
	'break'        reduce using rule 2
	%eof           reduce using rule 2


State 90

	function_call -> function_call '(' arguments . ')'    (rule 50)
	arguments -> arguments . ',' expression             (rule 61)

	')'            shift, and enter state 142
	','            shift, and enter state 140


State 91

	arguments -> expression .                           (rule 62)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 62
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	','            reduce using rule 62
	'?'            shift, and enter state 85


State 92

	function_call -> function_call . '(' arguments ')'    (rule 50)
	method_chain -> method_chain '.' function_call .    (rule 59)

	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'('            shift, and enter state 87
	')'            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'!='           reduce using rule 59
	'=='           reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59
	'?'            reduce using rule 59
	':'            reduce using rule 59
	'.'            reduce using rule 59


State 93

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 49)
	chaining -> method_chain '.' IDENTIFIER .           (rule 58)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'('            shift, and enter state 70
	')'            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'!='           reduce using rule 58
	'=='           reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58
	'?'            reduce using rule 58
	':'            reduce using rule 58


State 94

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)
	ternary -> expression '?' expression . ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	'?'            shift, and enter state 85
	':'            shift, and enter state 141


State 95

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	binary -> expression 'or' expression .              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 91
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          reduce using rule 91
	'or'           reduce using rule 91
	';'            reduce using rule 91
	','            reduce using rule 91
	'?'            reduce using rule 91
	':'            reduce using rule 91


State 96

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression 'and' expression .             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 90
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          reduce using rule 90
	'or'           reduce using rule 90
	';'            reduce using rule 90
	','            reduce using rule 90
	'?'            reduce using rule 90
	':'            reduce using rule 90


State 97

	binary -> expression . '==' expression              (rule 80)
	binary -> expression '==' expression .              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 80
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           reduce using rule 80
	'=='           reduce using rule 80
	'and'          reduce using rule 80
	'or'           reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'?'            reduce using rule 80
	':'            reduce using rule 80


State 98

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression '!=' expression .              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 81
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           reduce using rule 81
	'=='           reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'?'            reduce using rule 81
	':'            reduce using rule 81


State 99

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression '>=' expression .              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 88
	'<'            reduce using rule 88
	'>'            reduce using rule 88
	'<='           reduce using rule 88
	'>='           reduce using rule 88
	'!='           reduce using rule 88
	'=='           reduce using rule 88
	'and'          reduce using rule 88
	'or'           reduce using rule 88
	';'            reduce using rule 88
	','            reduce using rule 88
	'?'            reduce using rule 88
	':'            reduce using rule 88


State 100

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression '<=' expression .              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 89
	'<'            reduce using rule 89
	'>'            reduce using rule 89
	'<='           reduce using rule 89
	'>='           reduce using rule 89
	'!='           reduce using rule 89
	'=='           reduce using rule 89
	'and'          reduce using rule 89
	'or'           reduce using rule 89
	';'            reduce using rule 89
	','            reduce using rule 89
	'?'            reduce using rule 89
	':'            reduce using rule 89


State 101

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression '>' expression .               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 86
	'<'            reduce using rule 86
	'>'            reduce using rule 86
	'<='           reduce using rule 86
	'>='           reduce using rule 86
	'!='           reduce using rule 86
	'=='           reduce using rule 86
	'and'          reduce using rule 86
	'or'           reduce using rule 86
	';'            reduce using rule 86
	','            reduce using rule 86
	'?'            reduce using rule 86
	':'            reduce using rule 86


State 102

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression '<' expression .               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 87
	'<'            reduce using rule 87
	'>'            reduce using rule 87
	'<='           reduce using rule 87
	'>='           reduce using rule 87
	'!='           reduce using rule 87
	'=='           reduce using rule 87
	'and'          reduce using rule 87
	'or'           reduce using rule 87
	';'            reduce using rule 87
	','            reduce using rule 87
	'?'            reduce using rule 87
	':'            reduce using rule 87


State 103

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression '/' expression .               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'*'            reduce using rule 85
	'/'            reduce using rule 85
	')'            reduce using rule 85
	'<'            reduce using rule 85
	'>'            reduce using rule 85
	'<='           reduce using rule 85
	'>='           reduce using rule 85
	'!='           reduce using rule 85
	'=='           reduce using rule 85
	'and'          reduce using rule 85
	'or'           reduce using rule 85
	';'            reduce using rule 85
	','            reduce using rule 85
	'?'            reduce using rule 85
	':'            reduce using rule 85


State 104

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression '*' expression .               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'*'            reduce using rule 84
	'/'            reduce using rule 84
	')'            reduce using rule 84
	'<'            reduce using rule 84
	'>'            reduce using rule 84
	'<='           reduce using rule 84
	'>='           reduce using rule 84
	'!='           reduce using rule 84
	'=='           reduce using rule 84
	'and'          reduce using rule 84
	'or'           reduce using rule 84
	';'            reduce using rule 84
	','            reduce using rule 84
	'?'            reduce using rule 84
	':'            reduce using rule 84


State 105

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression '-' expression .               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 83
	'<'            reduce using rule 83
	'>'            reduce using rule 83
	'<='           reduce using rule 83
	'>='           reduce using rule 83
	'!='           reduce using rule 83
	'=='           reduce using rule 83
	'and'          reduce using rule 83
	'or'           reduce using rule 83
	';'            reduce using rule 83
	','            reduce using rule 83
	'?'            reduce using rule 83
	':'            reduce using rule 83


State 106

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression '+' expression .               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 82
	'<'            reduce using rule 82
	'>'            reduce using rule 82
	'<='           reduce using rule 82
	'>='           reduce using rule 82
	'!='           reduce using rule 82
	'=='           reduce using rule 82
	'and'          reduce using rule 82
	'or'           reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'?'            reduce using rule 82
	':'            reduce using rule 82


State 107

	chaining -> IDENTIFIER '.' method_chain .           (rule 54)
	method_chain -> method_chain . '.' function_call    (rule 59)

	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	')'            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'!='           reduce using rule 54
	'=='           reduce using rule 54
	'and'          reduce using rule 54
	'or'           reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	'?'            reduce using rule 54
	':'            reduce using rule 54
	'.'            shift, and enter state 127


State 108

	chaining -> IDENTIFIER '.' IDENTIFIER .             (rule 52)

	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	')'            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'!='           reduce using rule 52
	'=='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	'?'            reduce using rule 52
	':'            reduce using rule 52


State 109

	function_call -> IDENTIFIER '(' arguments . ')'     (rule 49)
	arguments -> arguments . ',' expression             (rule 61)

	')'            shift, and enter state 139
	','            shift, and enter state 140


State 110

	variable_assignment -> IDENTIFIER '=' expression .    (rule 38)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 38
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            reduce using rule 38
	'?'            shift, and enter state 85


State 111

	grouping -> '(' expression ')' .                    (rule 77)

	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	')'            reduce using rule 77
	'<'            reduce using rule 77
	'>'            reduce using rule 77
	'<='           reduce using rule 77
	'>='           reduce using rule 77
	'!='           reduce using rule 77
	'=='           reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'?'            reduce using rule 77
	':'            reduce using rule 77


State 112

	block_statement -> '{' declarations '}' .           (rule 19)

	NUMBER         reduce using rule 19
	STRING         reduce using rule 19
	IDENTIFIER     reduce using rule 19
	'-'            reduce using rule 19
	'('            reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	'!'            reduce using rule 19
	'true'         reduce using rule 19
	'false'        reduce using rule 19
	'nil'          reduce using rule 19
	'.'            reduce using rule 19
	'print'        reduce using rule 19
	'var'          reduce using rule 19
	'if'           reduce using rule 19
	'else'         reduce using rule 19
	'while'        reduce using rule 19
	'for'          reduce using rule 19
	'fun'          reduce using rule 19
	'return'       reduce using rule 19
	'class'        reduce using rule 19
	'this'         reduce using rule 19
	'super'        reduce using rule 19
	'continue'     reduce using rule 19
	'break'        reduce using rule 19
	%eof           reduce using rule 19


State 113

	print_statement -> 'print' expression ';' .         (rule 18)

	NUMBER         reduce using rule 18
	STRING         reduce using rule 18
	IDENTIFIER     reduce using rule 18
	'-'            reduce using rule 18
	'('            reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	'!'            reduce using rule 18
	'true'         reduce using rule 18
	'false'        reduce using rule 18
	'nil'          reduce using rule 18
	'.'            reduce using rule 18
	'print'        reduce using rule 18
	'var'          reduce using rule 18
	'if'           reduce using rule 18
	'else'         reduce using rule 18
	'while'        reduce using rule 18
	'for'          reduce using rule 18
	'fun'          reduce using rule 18
	'return'       reduce using rule 18
	'class'        reduce using rule 18
	'this'         reduce using rule 18
	'super'        reduce using rule 18
	'continue'     reduce using rule 18
	'break'        reduce using rule 18
	%eof           reduce using rule 18


State 114

	variable_declaration -> 'var' IDENTIFIER '=' . expression    (rule 36)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 138
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 115

	conditional_statement -> 'if' '(' expression . ')' statement    (rule 20)
	conditional_statement -> 'if' '(' expression . ')' statement 'else' statement    (rule 21)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            shift, and enter state 137
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	'?'            shift, and enter state 85


State 116

	while_statement -> 'while' '(' expression . ')' statement    (rule 22)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            shift, and enter state 136
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	'?'            shift, and enter state 85


State 117

	for_statement -> 'for' '(' variable_declaration . ';' ';' ')' statement    (rule 24)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' ')' statement    (rule 27)
	for_statement -> 'for' '(' variable_declaration . ';' ';' variable_assignment ')' statement    (rule 28)
	for_statement -> 'for' '(' variable_declaration . ';' expression ';' variable_assignment ')' statement    (rule 30)

	';'            shift, and enter state 135


State 118

	for_statement -> 'for' '(' ';' . ';' ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' . expression ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' ';' . ';' variable_assignment ')' statement    (rule 26)
	for_statement -> 'for' '(' ';' . expression ';' variable_assignment ')' statement    (rule 29)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	';'            shift, and enter state 134
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 133
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 119

	function_declaration -> 'fun' IDENTIFIER '(' . parameters ')' block_statement    (rule 43)
	function_declaration -> 'fun' IDENTIFIER '(' . ')' block_statement    (rule 44)

	IDENTIFIER     shift, and enter state 131
	')'            shift, and enter state 132

	parameters     goto state 130

State 120

	return_statement -> 'return' expression ';' .       (rule 31)

	NUMBER         reduce using rule 31
	STRING         reduce using rule 31
	IDENTIFIER     reduce using rule 31
	'-'            reduce using rule 31
	'('            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'!'            reduce using rule 31
	'true'         reduce using rule 31
	'false'        reduce using rule 31
	'nil'          reduce using rule 31
	'.'            reduce using rule 31
	'print'        reduce using rule 31
	'var'          reduce using rule 31
	'if'           reduce using rule 31
	'else'         reduce using rule 31
	'while'        reduce using rule 31
	'for'          reduce using rule 31
	'fun'          reduce using rule 31
	'return'       reduce using rule 31
	'class'        reduce using rule 31
	'this'         reduce using rule 31
	'super'        reduce using rule 31
	'continue'     reduce using rule 31
	'break'        reduce using rule 31
	%eof           reduce using rule 31


State 121

	class_declaration -> 'class' IDENTIFIER '{' . methods '}'    (rule 39)

	IDENTIFIER     reduce using rule 41
	'}'            reduce using rule 41

	methods        goto state 129

State 122

	class_declaration -> 'class' IDENTIFIER '<' . IDENTIFIER '{' methods '}'    (rule 40)

	IDENTIFIER     shift, and enter state 128


State 123

	chaining -> 'this' '.' method_chain .               (rule 55)
	method_chain -> method_chain . '.' function_call    (rule 59)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	')'            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'!='           reduce using rule 55
	'=='           reduce using rule 55
	'and'          reduce using rule 55
	'or'           reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	'?'            reduce using rule 55
	':'            reduce using rule 55
	'.'            shift, and enter state 127


State 124

	chaining -> 'this' '.' IDENTIFIER .                 (rule 53)

	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	')'            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'<='           reduce using rule 53
	'>='           reduce using rule 53
	'!='           reduce using rule 53
	'=='           reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	'?'            reduce using rule 53
	':'            reduce using rule 53


State 125

	chaining -> 'super' '.' method_chain .              (rule 56)
	method_chain -> method_chain . '.' function_call    (rule 59)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	')'            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'!='           reduce using rule 56
	'=='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	'?'            reduce using rule 56
	':'            reduce using rule 56
	'.'            shift, and enter state 127


State 126

	chaining -> 'super' '.' IDENTIFIER .                (rule 57)

	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	')'            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'<='           reduce using rule 57
	'>='           reduce using rule 57
	'!='           reduce using rule 57
	'=='           reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57
	'?'            reduce using rule 57
	':'            reduce using rule 57


State 127

	method_chain -> method_chain '.' . function_call    (rule 59)

	IDENTIFIER     shift, and enter state 160

	function_call  goto state 92

State 128

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER . '{' methods '}'    (rule 40)

	'{'            shift, and enter state 159


State 129

	class_declaration -> 'class' IDENTIFIER '{' methods . '}'    (rule 39)
	methods -> methods . method_declaration             (rule 42)

	IDENTIFIER     shift, and enter state 157
	'}'            shift, and enter state 158

	method_declarationgoto state 156

State 130

	function_declaration -> 'fun' IDENTIFIER '(' parameters . ')' block_statement    (rule 43)
	parameters -> parameters . ',' IDENTIFIER           (rule 47)

	')'            shift, and enter state 154
	','            shift, and enter state 155


State 131

	parameters -> IDENTIFIER .                          (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48


State 132

	function_declaration -> 'fun' IDENTIFIER '(' ')' . block_statement    (rule 44)

	'{'            shift, and enter state 34

	block_statementgoto state 153

State 133

	for_statement -> 'for' '(' ';' expression . ';' ')' statement    (rule 25)
	for_statement -> 'for' '(' ';' expression . ';' variable_assignment ')' statement    (rule 29)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            shift, and enter state 152
	'?'            shift, and enter state 85


State 134

	for_statement -> 'for' '(' ';' ';' . ')' statement    (rule 23)
	for_statement -> 'for' '(' ';' ';' . variable_assignment ')' statement    (rule 26)

	IDENTIFIER     shift, and enter state 150
	')'            shift, and enter state 151

	variable_assignmentgoto state 149

State 135

	for_statement -> 'for' '(' variable_declaration ';' . ';' ')' statement    (rule 24)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' ')' statement    (rule 27)
	for_statement -> 'for' '(' variable_declaration ';' . ';' variable_assignment ')' statement    (rule 28)
	for_statement -> 'for' '(' variable_declaration ';' . expression ';' variable_assignment ')' statement    (rule 30)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	';'            shift, and enter state 148
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 147
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 136

	while_statement -> 'while' '(' expression ')' . statement    (rule 22)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 146
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 137

	conditional_statement -> 'if' '(' expression ')' . statement    (rule 20)
	conditional_statement -> 'if' '(' expression ')' . statement 'else' statement    (rule 21)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 145
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 138

	variable_declaration -> 'var' IDENTIFIER '=' expression .    (rule 36)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            reduce using rule 36
	'?'            shift, and enter state 85


State 139

	function_call -> IDENTIFIER '(' arguments ')' .     (rule 49)

	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'!='           reduce using rule 49
	'=='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	'?'            reduce using rule 49
	':'            reduce using rule 49
	'.'            reduce using rule 49


State 140

	arguments -> arguments ',' . expression             (rule 61)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 144
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 141

	ternary -> expression '?' expression ':' . expression    (rule 92)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48

	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 143
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 142

	function_call -> function_call '(' arguments ')' .    (rule 50)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'<='           reduce using rule 50
	'>='           reduce using rule 50
	'!='           reduce using rule 50
	'=='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	'?'            reduce using rule 50
	':'            reduce using rule 50
	'.'            reduce using rule 50


State 143

	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)
	ternary -> expression '?' expression ':' expression .    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 92
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            reduce using rule 92
	','            reduce using rule 92
	'?'            fail
	':'            reduce using rule 92


State 144

	arguments -> arguments ',' expression .             (rule 61)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	')'            reduce using rule 61
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	','            reduce using rule 61
	'?'            shift, and enter state 85


State 145

	conditional_statement -> 'if' '(' expression ')' statement .    (rule 20)
	conditional_statement -> 'if' '(' expression ')' statement . 'else' statement    (rule 21)

	NUMBER         reduce using rule 20
	STRING         reduce using rule 20
	IDENTIFIER     reduce using rule 20
	'-'            reduce using rule 20
	'('            reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	'!'            reduce using rule 20
	'true'         reduce using rule 20
	'false'        reduce using rule 20
	'nil'          reduce using rule 20
	'.'            reduce using rule 20
	'print'        reduce using rule 20
	'var'          reduce using rule 20
	'if'           reduce using rule 20
	'else'         shift, and enter state 172
			(reduce using rule 20)

	'while'        reduce using rule 20
	'for'          reduce using rule 20
	'fun'          reduce using rule 20
	'return'       reduce using rule 20
	'class'        reduce using rule 20
	'this'         reduce using rule 20
	'super'        reduce using rule 20
	'continue'     reduce using rule 20
	'break'        reduce using rule 20
	%eof           reduce using rule 20


State 146

	while_statement -> 'while' '(' expression ')' statement .    (rule 22)

	NUMBER         reduce using rule 22
	STRING         reduce using rule 22
	IDENTIFIER     reduce using rule 22
	'-'            reduce using rule 22
	'('            reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'!'            reduce using rule 22
	'true'         reduce using rule 22
	'false'        reduce using rule 22
	'nil'          reduce using rule 22
	'.'            reduce using rule 22
	'print'        reduce using rule 22
	'var'          reduce using rule 22
	'if'           reduce using rule 22
	'else'         reduce using rule 22
	'while'        reduce using rule 22
	'for'          reduce using rule 22
	'fun'          reduce using rule 22
	'return'       reduce using rule 22
	'class'        reduce using rule 22
	'this'         reduce using rule 22
	'super'        reduce using rule 22
	'continue'     reduce using rule 22
	'break'        reduce using rule 22
	%eof           reduce using rule 22


State 147

	for_statement -> 'for' '(' variable_declaration ';' expression . ';' ')' statement    (rule 27)
	for_statement -> 'for' '(' variable_declaration ';' expression . ';' variable_assignment ')' statement    (rule 30)
	binary -> expression . '==' expression              (rule 80)
	binary -> expression . '!=' expression              (rule 81)
	binary -> expression . '+' expression               (rule 82)
	binary -> expression . '-' expression               (rule 83)
	binary -> expression . '*' expression               (rule 84)
	binary -> expression . '/' expression               (rule 85)
	binary -> expression . '>' expression               (rule 86)
	binary -> expression . '<' expression               (rule 87)
	binary -> expression . '>=' expression              (rule 88)
	binary -> expression . '<=' expression              (rule 89)
	binary -> expression . 'and' expression             (rule 90)
	binary -> expression . 'or' expression              (rule 91)
	ternary -> expression . '?' expression ':' expression    (rule 92)

	'+'            shift, and enter state 72
	'-'            shift, and enter state 73
	'*'            shift, and enter state 74
	'/'            shift, and enter state 75
	'<'            shift, and enter state 76
	'>'            shift, and enter state 77
	'<='           shift, and enter state 78
	'>='           shift, and enter state 79
	'!='           shift, and enter state 80
	'=='           shift, and enter state 81
	'and'          shift, and enter state 82
	'or'           shift, and enter state 83
	';'            shift, and enter state 171
	'?'            shift, and enter state 85


State 148

	for_statement -> 'for' '(' variable_declaration ';' ';' . ')' statement    (rule 24)
	for_statement -> 'for' '(' variable_declaration ';' ';' . variable_assignment ')' statement    (rule 28)

	IDENTIFIER     shift, and enter state 150
	')'            shift, and enter state 170

	variable_assignmentgoto state 169

State 149

	for_statement -> 'for' '(' ';' ';' variable_assignment . ')' statement    (rule 26)

	')'            shift, and enter state 168


State 150

	variable_assignment -> IDENTIFIER . '=' expression    (rule 38)

	'='            shift, and enter state 69


State 151

	for_statement -> 'for' '(' ';' ';' ')' . statement    (rule 23)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 167
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 152

	for_statement -> 'for' '(' ';' expression ';' . ')' statement    (rule 25)
	for_statement -> 'for' '(' ';' expression ';' . variable_assignment ')' statement    (rule 29)

	IDENTIFIER     shift, and enter state 150
	')'            shift, and enter state 166

	variable_assignmentgoto state 165

State 153

	function_declaration -> 'fun' IDENTIFIER '(' ')' block_statement .    (rule 44)

	NUMBER         reduce using rule 44
	STRING         reduce using rule 44
	IDENTIFIER     reduce using rule 44
	'-'            reduce using rule 44
	'('            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	'!'            reduce using rule 44
	'true'         reduce using rule 44
	'false'        reduce using rule 44
	'nil'          reduce using rule 44
	'.'            reduce using rule 44
	'print'        reduce using rule 44
	'var'          reduce using rule 44
	'if'           reduce using rule 44
	'while'        reduce using rule 44
	'for'          reduce using rule 44
	'fun'          reduce using rule 44
	'return'       reduce using rule 44
	'class'        reduce using rule 44
	'this'         reduce using rule 44
	'super'        reduce using rule 44
	'continue'     reduce using rule 44
	'break'        reduce using rule 44
	%eof           reduce using rule 44


State 154

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' . block_statement    (rule 43)

	'{'            shift, and enter state 34

	block_statementgoto state 164

State 155

	parameters -> parameters ',' . IDENTIFIER           (rule 47)

	IDENTIFIER     shift, and enter state 163


State 156

	methods -> methods method_declaration .             (rule 42)

	IDENTIFIER     reduce using rule 42
	'}'            reduce using rule 42


State 157

	method_declaration -> IDENTIFIER . '(' parameters ')' block_statement    (rule 45)
	method_declaration -> IDENTIFIER . '(' ')' block_statement    (rule 46)

	'('            shift, and enter state 162


State 158

	class_declaration -> 'class' IDENTIFIER '{' methods '}' .    (rule 39)

	NUMBER         reduce using rule 39
	STRING         reduce using rule 39
	IDENTIFIER     reduce using rule 39
	'-'            reduce using rule 39
	'('            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'!'            reduce using rule 39
	'true'         reduce using rule 39
	'false'        reduce using rule 39
	'nil'          reduce using rule 39
	'.'            reduce using rule 39
	'print'        reduce using rule 39
	'var'          reduce using rule 39
	'if'           reduce using rule 39
	'while'        reduce using rule 39
	'for'          reduce using rule 39
	'fun'          reduce using rule 39
	'return'       reduce using rule 39
	'class'        reduce using rule 39
	'this'         reduce using rule 39
	'super'        reduce using rule 39
	'continue'     reduce using rule 39
	'break'        reduce using rule 39
	%eof           reduce using rule 39


State 159

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' . methods '}'    (rule 40)

	IDENTIFIER     reduce using rule 41
	'}'            reduce using rule 41

	methods        goto state 161

State 160

	function_call -> IDENTIFIER . '(' arguments ')'     (rule 49)

	'('            shift, and enter state 70


State 161

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods . '}'    (rule 40)
	methods -> methods . method_declaration             (rule 42)

	IDENTIFIER     shift, and enter state 157
	'}'            shift, and enter state 183

	method_declarationgoto state 156

State 162

	method_declaration -> IDENTIFIER '(' . parameters ')' block_statement    (rule 45)
	method_declaration -> IDENTIFIER '(' . ')' block_statement    (rule 46)

	IDENTIFIER     shift, and enter state 131
	')'            shift, and enter state 182

	parameters     goto state 181

State 163

	parameters -> parameters ',' IDENTIFIER .           (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47


State 164

	function_declaration -> 'fun' IDENTIFIER '(' parameters ')' block_statement .    (rule 43)

	NUMBER         reduce using rule 43
	STRING         reduce using rule 43
	IDENTIFIER     reduce using rule 43
	'-'            reduce using rule 43
	'('            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	'!'            reduce using rule 43
	'true'         reduce using rule 43
	'false'        reduce using rule 43
	'nil'          reduce using rule 43
	'.'            reduce using rule 43
	'print'        reduce using rule 43
	'var'          reduce using rule 43
	'if'           reduce using rule 43
	'while'        reduce using rule 43
	'for'          reduce using rule 43
	'fun'          reduce using rule 43
	'return'       reduce using rule 43
	'class'        reduce using rule 43
	'this'         reduce using rule 43
	'super'        reduce using rule 43
	'continue'     reduce using rule 43
	'break'        reduce using rule 43
	%eof           reduce using rule 43


State 165

	for_statement -> 'for' '(' ';' expression ';' variable_assignment . ')' statement    (rule 29)

	')'            shift, and enter state 180


State 166

	for_statement -> 'for' '(' ';' expression ';' ')' . statement    (rule 25)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 179
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 167

	for_statement -> 'for' '(' ';' ';' ')' statement .    (rule 23)

	NUMBER         reduce using rule 23
	STRING         reduce using rule 23
	IDENTIFIER     reduce using rule 23
	'-'            reduce using rule 23
	'('            reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'!'            reduce using rule 23
	'true'         reduce using rule 23
	'false'        reduce using rule 23
	'nil'          reduce using rule 23
	'.'            reduce using rule 23
	'print'        reduce using rule 23
	'var'          reduce using rule 23
	'if'           reduce using rule 23
	'else'         reduce using rule 23
	'while'        reduce using rule 23
	'for'          reduce using rule 23
	'fun'          reduce using rule 23
	'return'       reduce using rule 23
	'class'        reduce using rule 23
	'this'         reduce using rule 23
	'super'        reduce using rule 23
	'continue'     reduce using rule 23
	'break'        reduce using rule 23
	%eof           reduce using rule 23


State 168

	for_statement -> 'for' '(' ';' ';' variable_assignment ')' . statement    (rule 26)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 178
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 169

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment . ')' statement    (rule 28)

	')'            shift, and enter state 177


State 170

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' . statement    (rule 24)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 176
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 171

	for_statement -> 'for' '(' variable_declaration ';' expression ';' . ')' statement    (rule 27)
	for_statement -> 'for' '(' variable_declaration ';' expression ';' . variable_assignment ')' statement    (rule 30)

	IDENTIFIER     shift, and enter state 150
	')'            shift, and enter state 175

	variable_assignmentgoto state 174

State 172

	conditional_statement -> 'if' '(' expression ')' statement 'else' . statement    (rule 21)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 173
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 173

	conditional_statement -> 'if' '(' expression ')' statement 'else' statement .    (rule 21)

	NUMBER         reduce using rule 21
	STRING         reduce using rule 21
	IDENTIFIER     reduce using rule 21
	'-'            reduce using rule 21
	'('            reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	'!'            reduce using rule 21
	'true'         reduce using rule 21
	'false'        reduce using rule 21
	'nil'          reduce using rule 21
	'.'            reduce using rule 21
	'print'        reduce using rule 21
	'var'          reduce using rule 21
	'if'           reduce using rule 21
	'else'         reduce using rule 21
	'while'        reduce using rule 21
	'for'          reduce using rule 21
	'fun'          reduce using rule 21
	'return'       reduce using rule 21
	'class'        reduce using rule 21
	'this'         reduce using rule 21
	'super'        reduce using rule 21
	'continue'     reduce using rule 21
	'break'        reduce using rule 21
	%eof           reduce using rule 21


State 174

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment . ')' statement    (rule 30)

	')'            shift, and enter state 189


State 175

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' . statement    (rule 27)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 188
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 176

	for_statement -> 'for' '(' variable_declaration ';' ';' ')' statement .    (rule 24)

	NUMBER         reduce using rule 24
	STRING         reduce using rule 24
	IDENTIFIER     reduce using rule 24
	'-'            reduce using rule 24
	'('            reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'!'            reduce using rule 24
	'true'         reduce using rule 24
	'false'        reduce using rule 24
	'nil'          reduce using rule 24
	'.'            reduce using rule 24
	'print'        reduce using rule 24
	'var'          reduce using rule 24
	'if'           reduce using rule 24
	'else'         reduce using rule 24
	'while'        reduce using rule 24
	'for'          reduce using rule 24
	'fun'          reduce using rule 24
	'return'       reduce using rule 24
	'class'        reduce using rule 24
	'this'         reduce using rule 24
	'super'        reduce using rule 24
	'continue'     reduce using rule 24
	'break'        reduce using rule 24
	%eof           reduce using rule 24


State 177

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' . statement    (rule 28)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 187
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 178

	for_statement -> 'for' '(' ';' ';' variable_assignment ')' statement .    (rule 26)

	NUMBER         reduce using rule 26
	STRING         reduce using rule 26
	IDENTIFIER     reduce using rule 26
	'-'            reduce using rule 26
	'('            reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'!'            reduce using rule 26
	'true'         reduce using rule 26
	'false'        reduce using rule 26
	'nil'          reduce using rule 26
	'.'            reduce using rule 26
	'print'        reduce using rule 26
	'var'          reduce using rule 26
	'if'           reduce using rule 26
	'else'         reduce using rule 26
	'while'        reduce using rule 26
	'for'          reduce using rule 26
	'fun'          reduce using rule 26
	'return'       reduce using rule 26
	'class'        reduce using rule 26
	'this'         reduce using rule 26
	'super'        reduce using rule 26
	'continue'     reduce using rule 26
	'break'        reduce using rule 26
	%eof           reduce using rule 26


State 179

	for_statement -> 'for' '(' ';' expression ';' ')' statement .    (rule 25)

	NUMBER         reduce using rule 25
	STRING         reduce using rule 25
	IDENTIFIER     reduce using rule 25
	'-'            reduce using rule 25
	'('            reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'!'            reduce using rule 25
	'true'         reduce using rule 25
	'false'        reduce using rule 25
	'nil'          reduce using rule 25
	'.'            reduce using rule 25
	'print'        reduce using rule 25
	'var'          reduce using rule 25
	'if'           reduce using rule 25
	'else'         reduce using rule 25
	'while'        reduce using rule 25
	'for'          reduce using rule 25
	'fun'          reduce using rule 25
	'return'       reduce using rule 25
	'class'        reduce using rule 25
	'this'         reduce using rule 25
	'super'        reduce using rule 25
	'continue'     reduce using rule 25
	'break'        reduce using rule 25
	%eof           reduce using rule 25


State 180

	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' . statement    (rule 29)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 186
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 181

	method_declaration -> IDENTIFIER '(' parameters . ')' block_statement    (rule 45)
	parameters -> parameters . ',' IDENTIFIER           (rule 47)

	')'            shift, and enter state 185
	','            shift, and enter state 155


State 182

	method_declaration -> IDENTIFIER '(' ')' . block_statement    (rule 46)

	'{'            shift, and enter state 34

	block_statementgoto state 184

State 183

	class_declaration -> 'class' IDENTIFIER '<' IDENTIFIER '{' methods '}' .    (rule 40)

	NUMBER         reduce using rule 40
	STRING         reduce using rule 40
	IDENTIFIER     reduce using rule 40
	'-'            reduce using rule 40
	'('            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'!'            reduce using rule 40
	'true'         reduce using rule 40
	'false'        reduce using rule 40
	'nil'          reduce using rule 40
	'.'            reduce using rule 40
	'print'        reduce using rule 40
	'var'          reduce using rule 40
	'if'           reduce using rule 40
	'while'        reduce using rule 40
	'for'          reduce using rule 40
	'fun'          reduce using rule 40
	'return'       reduce using rule 40
	'class'        reduce using rule 40
	'this'         reduce using rule 40
	'super'        reduce using rule 40
	'continue'     reduce using rule 40
	'break'        reduce using rule 40
	%eof           reduce using rule 40


State 184

	method_declaration -> IDENTIFIER '(' ')' block_statement .    (rule 46)

	IDENTIFIER     reduce using rule 46
	'}'            reduce using rule 46


State 185

	method_declaration -> IDENTIFIER '(' parameters ')' . block_statement    (rule 45)

	'{'            shift, and enter state 34

	block_statementgoto state 191

State 186

	for_statement -> 'for' '(' ';' expression ';' variable_assignment ')' statement .    (rule 29)

	NUMBER         reduce using rule 29
	STRING         reduce using rule 29
	IDENTIFIER     reduce using rule 29
	'-'            reduce using rule 29
	'('            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'!'            reduce using rule 29
	'true'         reduce using rule 29
	'false'        reduce using rule 29
	'nil'          reduce using rule 29
	'.'            reduce using rule 29
	'print'        reduce using rule 29
	'var'          reduce using rule 29
	'if'           reduce using rule 29
	'else'         reduce using rule 29
	'while'        reduce using rule 29
	'for'          reduce using rule 29
	'fun'          reduce using rule 29
	'return'       reduce using rule 29
	'class'        reduce using rule 29
	'this'         reduce using rule 29
	'super'        reduce using rule 29
	'continue'     reduce using rule 29
	'break'        reduce using rule 29
	%eof           reduce using rule 29


State 187

	for_statement -> 'for' '(' variable_declaration ';' ';' variable_assignment ')' statement .    (rule 28)

	NUMBER         reduce using rule 28
	STRING         reduce using rule 28
	IDENTIFIER     reduce using rule 28
	'-'            reduce using rule 28
	'('            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'!'            reduce using rule 28
	'true'         reduce using rule 28
	'false'        reduce using rule 28
	'nil'          reduce using rule 28
	'.'            reduce using rule 28
	'print'        reduce using rule 28
	'var'          reduce using rule 28
	'if'           reduce using rule 28
	'else'         reduce using rule 28
	'while'        reduce using rule 28
	'for'          reduce using rule 28
	'fun'          reduce using rule 28
	'return'       reduce using rule 28
	'class'        reduce using rule 28
	'this'         reduce using rule 28
	'super'        reduce using rule 28
	'continue'     reduce using rule 28
	'break'        reduce using rule 28
	%eof           reduce using rule 28


State 188

	for_statement -> 'for' '(' variable_declaration ';' expression ';' ')' statement .    (rule 27)

	NUMBER         reduce using rule 27
	STRING         reduce using rule 27
	IDENTIFIER     reduce using rule 27
	'-'            reduce using rule 27
	'('            reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'!'            reduce using rule 27
	'true'         reduce using rule 27
	'false'        reduce using rule 27
	'nil'          reduce using rule 27
	'.'            reduce using rule 27
	'print'        reduce using rule 27
	'var'          reduce using rule 27
	'if'           reduce using rule 27
	'else'         reduce using rule 27
	'while'        reduce using rule 27
	'for'          reduce using rule 27
	'fun'          reduce using rule 27
	'return'       reduce using rule 27
	'class'        reduce using rule 27
	'this'         reduce using rule 27
	'super'        reduce using rule 27
	'continue'     reduce using rule 27
	'break'        reduce using rule 27
	%eof           reduce using rule 27


State 189

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' . statement    (rule 30)

	NUMBER         shift, and enter state 29
	STRING         shift, and enter state 30
	IDENTIFIER     shift, and enter state 58
	'-'            shift, and enter state 32
	'('            shift, and enter state 33
	'{'            shift, and enter state 34
	'!'            shift, and enter state 35
	'true'         shift, and enter state 36
	'false'        shift, and enter state 37
	'nil'          shift, and enter state 38
	'.'            reduce using rule 60
	'print'        shift, and enter state 39
	'if'           shift, and enter state 41
	'while'        shift, and enter state 42
	'for'          shift, and enter state 43
	'return'       shift, and enter state 45
	'this'         shift, and enter state 47
	'super'        shift, and enter state 48
	'continue'     shift, and enter state 49
	'break'        shift, and enter state 50

	statement      goto state 190
	expression_statementgoto state 5
	print_statementgoto state 6
	block_statementgoto state 7
	conditional_statementgoto state 8
	while_statementgoto state 9
	for_statement  goto state 10
	return_statementgoto state 11
	break_statementgoto state 12
	continue_statementgoto state 13
	function_call  goto state 19
	chain          goto state 20
	chaining       goto state 21
	method_chain   goto state 22
	expression     goto state 23
	literal        goto state 24
	grouping       goto state 25
	unary          goto state 26
	binary         goto state 27
	ternary        goto state 28

State 190

	for_statement -> 'for' '(' variable_declaration ';' expression ';' variable_assignment ')' statement .    (rule 30)

	NUMBER         reduce using rule 30
	STRING         reduce using rule 30
	IDENTIFIER     reduce using rule 30
	'-'            reduce using rule 30
	'('            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'!'            reduce using rule 30
	'true'         reduce using rule 30
	'false'        reduce using rule 30
	'nil'          reduce using rule 30
	'.'            reduce using rule 30
	'print'        reduce using rule 30
	'var'          reduce using rule 30
	'if'           reduce using rule 30
	'else'         reduce using rule 30
	'while'        reduce using rule 30
	'for'          reduce using rule 30
	'fun'          reduce using rule 30
	'return'       reduce using rule 30
	'class'        reduce using rule 30
	'this'         reduce using rule 30
	'super'        reduce using rule 30
	'continue'     reduce using rule 30
	'break'        reduce using rule 30
	%eof           reduce using rule 30


State 191

	method_declaration -> IDENTIFIER '(' parameters ')' block_statement .    (rule 45)

	IDENTIFIER     reduce using rule 45
	'}'            reduce using rule 45


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 93
Number of terminals: 42
Number of non-terminals: 33
Number of states: 192
